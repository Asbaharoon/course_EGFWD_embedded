
embedded project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c78  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000cec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  00800060  00800060  00000cec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fd5  00000000  00000000  00000e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000922  00000000  00000000  00001e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b75  00000000  00000000  0000278f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003cc  00000000  00000000  00003304  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000849  00000000  00000000  000036d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000147e  00000000  00000000  00003f19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00005397  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__vector_1>
   8:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__vector_2>
   c:	0c 94 83 01 	jmp	0x306	; 0x306 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__vector_10>
  2c:	0c 94 87 03 	jmp	0x70e	; 0x70e <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a5 37       	cpi	r26, 0x75	; 117
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  74:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <func>:
 #include "../ECU/Button/button_header.h"
 #include "../MCAL/Timer0/Timer0_header.h"

 void func()
 {
	led_Toggle(GPIO_PORTD, GPIO_PIN7);
  7c:	60 e8       	ldi	r22, 0x80	; 128
  7e:	83 e0       	ldi	r24, 0x03	; 3
  80:	0e 94 5a 00 	call	0xb4	; 0xb4 <led_Toggle>
  84:	08 95       	ret

00000086 <appSetup>:
 }

 void appSetup()
 {
	led_init(GPIO_PORTD, GPIO_PIN7);
  86:	60 e8       	ldi	r22, 0x80	; 128
  88:	83 e0       	ldi	r24, 0x03	; 3
  8a:	0e 94 51 00 	call	0xa2	; 0xa2 <led_init>

	timer0_InterruptEvery(1000, func);
  8e:	4e e3       	ldi	r20, 0x3E	; 62
  90:	50 e0       	ldi	r21, 0x00	; 0
  92:	68 ee       	ldi	r22, 0xE8	; 232
  94:	73 e0       	ldi	r23, 0x03	; 3
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	0e 94 b2 03 	call	0x764	; 0x764 <timer0_InterruptEvery>
  9e:	08 95       	ret

000000a0 <appStart>:
	//button_init_IT(GPIO_INT0, GPIO_INT_MODE_FALL_EDGE, func, BUTTON_INTERNAL_PULL_UP);

 }

 void __attribute__((noreturn)) appStart()
 {
  a0:	ff cf       	rjmp	.-2      	; 0xa0 <appStart>

000000a2 <led_init>:
	 	}

 	}
	return LED_INVALID_IN;

 }
  a2:	41 e0       	ldi	r20, 0x01	; 1
  a4:	0e 94 67 00 	call	0xce	; 0xce <GPIO_PinInit>
  a8:	88 23       	and	r24, r24
  aa:	11 f0       	breq	.+4      	; 0xb0 <led_init+0xe>
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	08 95       	ret
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	08 95       	ret

000000b4 <led_Toggle>:
 *
 *	@return		-:		-return error state indicating the validity of the input
 */
 ES_LED_t led_Toggle(uint8_t args_u8PortNumber, uint8_t args_u8PinNumber)
 {
	if(GPIO_PinsToggle(args_u8PortNumber, args_u8PinNumber) != GPIO_OK)
  b4:	0e 94 0b 01 	call	0x216	; 0x216 <GPIO_PinsToggle>
  b8:	88 23       	and	r24, r24
  ba:	11 f0       	breq	.+4      	; 0xc0 <led_Toggle+0xc>
		return LED_INVALID_IN;
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	08 95       	ret
	else
		return LED_OK;
  c0:	80 e0       	ldi	r24, 0x00	; 0

 }
  c2:	08 95       	ret

000000c4 <main>:
 */ 


int __attribute__((noreturn)) main(void)
{
	appSetup();
  c4:	0e 94 43 00 	call	0x86	; 0x86 <appSetup>
	appStart();
  c8:	0e 94 50 00 	call	0xa0	; 0xa0 <appStart>
  cc:	ff cf       	rjmp	.-2      	; 0xcc <main+0x8>

000000ce <GPIO_PinInit>:

	}	

	/*return the error state*/
	return local_errorState_t;
}
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	08 f0       	brcs	.+2      	; 0xd4 <GPIO_PinInit+0x6>
  d2:	93 c0       	rjmp	.+294    	; 0x1fa <GPIO_PinInit+0x12c>
  d4:	43 30       	cpi	r20, 0x03	; 3
  d6:	08 f0       	brcs	.+2      	; 0xda <GPIO_PinInit+0xc>
  d8:	92 c0       	rjmp	.+292    	; 0x1fe <GPIO_PinInit+0x130>
  da:	81 30       	cpi	r24, 0x01	; 1
  dc:	51 f1       	breq	.+84     	; 0x132 <GPIO_PinInit+0x64>
  de:	38 f0       	brcs	.+14     	; 0xee <GPIO_PinInit+0x20>
  e0:	82 30       	cpi	r24, 0x02	; 2
  e2:	09 f4       	brne	.+2      	; 0xe6 <GPIO_PinInit+0x18>
  e4:	48 c0       	rjmp	.+144    	; 0x176 <GPIO_PinInit+0xa8>
  e6:	83 30       	cpi	r24, 0x03	; 3
  e8:	09 f4       	brne	.+2      	; 0xec <GPIO_PinInit+0x1e>
  ea:	66 c0       	rjmp	.+204    	; 0x1b8 <GPIO_PinInit+0xea>
  ec:	8a c0       	rjmp	.+276    	; 0x202 <GPIO_PinInit+0x134>
  ee:	41 11       	cpse	r20, r1
  f0:	09 c0       	rjmp	.+18     	; 0x104 <GPIO_PinInit+0x36>
  f2:	8a b3       	in	r24, 0x1a	; 26
  f4:	60 95       	com	r22
  f6:	86 23       	and	r24, r22
  f8:	8a bb       	out	0x1a, r24	; 26
  fa:	8b b3       	in	r24, 0x1b	; 27
  fc:	68 23       	and	r22, r24
  fe:	6b bb       	out	0x1b, r22	; 27
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	08 95       	ret
 104:	41 30       	cpi	r20, 0x01	; 1
 106:	29 f4       	brne	.+10     	; 0x112 <GPIO_PinInit+0x44>
 108:	8a b3       	in	r24, 0x1a	; 26
 10a:	68 2b       	or	r22, r24
 10c:	6a bb       	out	0x1a, r22	; 26
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	08 95       	ret
 112:	42 30       	cpi	r20, 0x02	; 2
 114:	09 f0       	breq	.+2      	; 0x118 <GPIO_PinInit+0x4a>
 116:	77 c0       	rjmp	.+238    	; 0x206 <GPIO_PinInit+0x138>
 118:	9a b3       	in	r25, 0x1a	; 26
 11a:	86 2f       	mov	r24, r22
 11c:	80 95       	com	r24
 11e:	98 23       	and	r25, r24
 120:	9a bb       	out	0x1a, r25	; 26
 122:	9b b3       	in	r25, 0x1b	; 27
 124:	69 2b       	or	r22, r25
 126:	6b bb       	out	0x1b, r22	; 27
 128:	99 b3       	in	r25, 0x19	; 25
 12a:	89 23       	and	r24, r25
 12c:	89 bb       	out	0x19, r24	; 25
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	08 95       	ret
 132:	41 11       	cpse	r20, r1
 134:	09 c0       	rjmp	.+18     	; 0x148 <GPIO_PinInit+0x7a>
 136:	87 b3       	in	r24, 0x17	; 23
 138:	60 95       	com	r22
 13a:	86 23       	and	r24, r22
 13c:	87 bb       	out	0x17, r24	; 23
 13e:	88 b3       	in	r24, 0x18	; 24
 140:	68 23       	and	r22, r24
 142:	68 bb       	out	0x18, r22	; 24
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	08 95       	ret
 148:	41 30       	cpi	r20, 0x01	; 1
 14a:	29 f4       	brne	.+10     	; 0x156 <GPIO_PinInit+0x88>
 14c:	87 b3       	in	r24, 0x17	; 23
 14e:	68 2b       	or	r22, r24
 150:	67 bb       	out	0x17, r22	; 23
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	08 95       	ret
 156:	42 30       	cpi	r20, 0x02	; 2
 158:	09 f0       	breq	.+2      	; 0x15c <GPIO_PinInit+0x8e>
 15a:	57 c0       	rjmp	.+174    	; 0x20a <GPIO_PinInit+0x13c>
 15c:	97 b3       	in	r25, 0x17	; 23
 15e:	86 2f       	mov	r24, r22
 160:	80 95       	com	r24
 162:	98 23       	and	r25, r24
 164:	97 bb       	out	0x17, r25	; 23
 166:	98 b3       	in	r25, 0x18	; 24
 168:	69 2b       	or	r22, r25
 16a:	68 bb       	out	0x18, r22	; 24
 16c:	96 b3       	in	r25, 0x16	; 22
 16e:	89 23       	and	r24, r25
 170:	86 bb       	out	0x16, r24	; 22
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	08 95       	ret
 176:	41 11       	cpse	r20, r1
 178:	09 c0       	rjmp	.+18     	; 0x18c <GPIO_PinInit+0xbe>
 17a:	84 b3       	in	r24, 0x14	; 20
 17c:	60 95       	com	r22
 17e:	86 23       	and	r24, r22
 180:	84 bb       	out	0x14, r24	; 20
 182:	85 b3       	in	r24, 0x15	; 21
 184:	68 23       	and	r22, r24
 186:	65 bb       	out	0x15, r22	; 21
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	08 95       	ret
 18c:	41 30       	cpi	r20, 0x01	; 1
 18e:	29 f4       	brne	.+10     	; 0x19a <GPIO_PinInit+0xcc>
 190:	84 b3       	in	r24, 0x14	; 20
 192:	68 2b       	or	r22, r24
 194:	64 bb       	out	0x14, r22	; 20
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	08 95       	ret
 19a:	42 30       	cpi	r20, 0x02	; 2
 19c:	c1 f5       	brne	.+112    	; 0x20e <GPIO_PinInit+0x140>
 19e:	94 b3       	in	r25, 0x14	; 20
 1a0:	86 2f       	mov	r24, r22
 1a2:	80 95       	com	r24
 1a4:	98 23       	and	r25, r24
 1a6:	94 bb       	out	0x14, r25	; 20
 1a8:	95 b3       	in	r25, 0x15	; 21
 1aa:	69 2b       	or	r22, r25
 1ac:	65 bb       	out	0x15, r22	; 21
 1ae:	93 b3       	in	r25, 0x13	; 19
 1b0:	89 23       	and	r24, r25
 1b2:	83 bb       	out	0x13, r24	; 19
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	08 95       	ret
 1b8:	41 11       	cpse	r20, r1
 1ba:	09 c0       	rjmp	.+18     	; 0x1ce <GPIO_PinInit+0x100>
 1bc:	81 b3       	in	r24, 0x11	; 17
 1be:	60 95       	com	r22
 1c0:	86 23       	and	r24, r22
 1c2:	81 bb       	out	0x11, r24	; 17
 1c4:	82 b3       	in	r24, 0x12	; 18
 1c6:	68 23       	and	r22, r24
 1c8:	62 bb       	out	0x12, r22	; 18
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	08 95       	ret
 1ce:	41 30       	cpi	r20, 0x01	; 1
 1d0:	29 f4       	brne	.+10     	; 0x1dc <GPIO_PinInit+0x10e>
 1d2:	81 b3       	in	r24, 0x11	; 17
 1d4:	68 2b       	or	r22, r24
 1d6:	61 bb       	out	0x11, r22	; 17
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	08 95       	ret
 1dc:	42 30       	cpi	r20, 0x02	; 2
 1de:	c9 f4       	brne	.+50     	; 0x212 <GPIO_PinInit+0x144>
 1e0:	91 b3       	in	r25, 0x11	; 17
 1e2:	86 2f       	mov	r24, r22
 1e4:	80 95       	com	r24
 1e6:	98 23       	and	r25, r24
 1e8:	91 bb       	out	0x11, r25	; 17
 1ea:	92 b3       	in	r25, 0x12	; 18
 1ec:	69 2b       	or	r22, r25
 1ee:	62 bb       	out	0x12, r22	; 18
 1f0:	90 b3       	in	r25, 0x10	; 16
 1f2:	89 23       	and	r24, r25
 1f4:	80 bb       	out	0x10, r24	; 16
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	08 95       	ret
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	08 95       	ret
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	08 95       	ret
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	08 95       	ret
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	08 95       	ret
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	08 95       	ret
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	08 95       	ret
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	08 95       	ret

00000216 <GPIO_PinsToggle>:
 216:	84 30       	cpi	r24, 0x04	; 4
 218:	e0 f4       	brcc	.+56     	; 0x252 <GPIO_PinsToggle+0x3c>
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	59 f0       	breq	.+22     	; 0x234 <GPIO_PinsToggle+0x1e>
 21e:	28 f0       	brcs	.+10     	; 0x22a <GPIO_PinsToggle+0x14>
 220:	82 30       	cpi	r24, 0x02	; 2
 222:	69 f0       	breq	.+26     	; 0x23e <GPIO_PinsToggle+0x28>
 224:	83 30       	cpi	r24, 0x03	; 3
 226:	81 f0       	breq	.+32     	; 0x248 <GPIO_PinsToggle+0x32>
 228:	16 c0       	rjmp	.+44     	; 0x256 <GPIO_PinsToggle+0x40>
 22a:	8b b3       	in	r24, 0x1b	; 27
 22c:	68 27       	eor	r22, r24
 22e:	6b bb       	out	0x1b, r22	; 27
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	08 95       	ret
 234:	88 b3       	in	r24, 0x18	; 24
 236:	68 27       	eor	r22, r24
 238:	68 bb       	out	0x18, r22	; 24
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	08 95       	ret
 23e:	85 b3       	in	r24, 0x15	; 21
 240:	68 27       	eor	r22, r24
 242:	65 bb       	out	0x15, r22	; 21
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	08 95       	ret
 248:	82 b3       	in	r24, 0x12	; 18
 24a:	68 27       	eor	r22, r24
 24c:	62 bb       	out	0x12, r22	; 18
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	08 95       	ret
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	08 95       	ret
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	08 95       	ret

0000025a <__vector_1>:

/*
 *	the handler of external interrupt on INT0
 */
void __vector_1(void)
{
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	11 24       	eor	r1, r1
 264:	2f 93       	push	r18
 266:	3f 93       	push	r19
 268:	4f 93       	push	r20
 26a:	5f 93       	push	r21
 26c:	6f 93       	push	r22
 26e:	7f 93       	push	r23
 270:	8f 93       	push	r24
 272:	9f 93       	push	r25
 274:	af 93       	push	r26
 276:	bf 93       	push	r27
 278:	ef 93       	push	r30
 27a:	ff 93       	push	r31
	/*call the call back function*/
	global_pvCallBackINT0();
 27c:	e0 91 6d 00 	lds	r30, 0x006D	; 0x80006d <global_pvCallBackINT0>
 280:	f0 91 6e 00 	lds	r31, 0x006E	; 0x80006e <global_pvCallBackINT0+0x1>
 284:	09 95       	icall

	/*disable the flag of interrupt*/
	SET_BIT(GIFR, GIFR_INTF0_1BIT);
 286:	8a b7       	in	r24, 0x3a	; 58
 288:	80 64       	ori	r24, 0x40	; 64
 28a:	8a bf       	out	0x3a, r24	; 58

	/*enable the global interrupt after the end of interrupt*/
	ENABLE_GLOBAL_INT();
 28c:	78 94       	sei
}
 28e:	ff 91       	pop	r31
 290:	ef 91       	pop	r30
 292:	bf 91       	pop	r27
 294:	af 91       	pop	r26
 296:	9f 91       	pop	r25
 298:	8f 91       	pop	r24
 29a:	7f 91       	pop	r23
 29c:	6f 91       	pop	r22
 29e:	5f 91       	pop	r21
 2a0:	4f 91       	pop	r20
 2a2:	3f 91       	pop	r19
 2a4:	2f 91       	pop	r18
 2a6:	0f 90       	pop	r0
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	0f 90       	pop	r0
 2ac:	1f 90       	pop	r1
 2ae:	18 95       	reti

000002b0 <__vector_2>:

/*
 *	the handler of external interrupt on INT1
 */
void __vector_2(void)
{
 2b0:	1f 92       	push	r1
 2b2:	0f 92       	push	r0
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	0f 92       	push	r0
 2b8:	11 24       	eor	r1, r1
 2ba:	2f 93       	push	r18
 2bc:	3f 93       	push	r19
 2be:	4f 93       	push	r20
 2c0:	5f 93       	push	r21
 2c2:	6f 93       	push	r22
 2c4:	7f 93       	push	r23
 2c6:	8f 93       	push	r24
 2c8:	9f 93       	push	r25
 2ca:	af 93       	push	r26
 2cc:	bf 93       	push	r27
 2ce:	ef 93       	push	r30
 2d0:	ff 93       	push	r31
	/*call the call back function*/
	global_pvCallBackINT1();
 2d2:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <global_pvCallBackINT1>
 2d6:	f0 91 6c 00 	lds	r31, 0x006C	; 0x80006c <global_pvCallBackINT1+0x1>
 2da:	09 95       	icall

	/*disable the flag of interrupt*/
	SET_BIT(GIFR, GIFR_INTF1_1BIT);
 2dc:	8a b7       	in	r24, 0x3a	; 58
 2de:	80 68       	ori	r24, 0x80	; 128
 2e0:	8a bf       	out	0x3a, r24	; 58

	/*enable the global interrupt after the end of interrupt*/
	ENABLE_GLOBAL_INT();
 2e2:	78 94       	sei
}
 2e4:	ff 91       	pop	r31
 2e6:	ef 91       	pop	r30
 2e8:	bf 91       	pop	r27
 2ea:	af 91       	pop	r26
 2ec:	9f 91       	pop	r25
 2ee:	8f 91       	pop	r24
 2f0:	7f 91       	pop	r23
 2f2:	6f 91       	pop	r22
 2f4:	5f 91       	pop	r21
 2f6:	4f 91       	pop	r20
 2f8:	3f 91       	pop	r19
 2fa:	2f 91       	pop	r18
 2fc:	0f 90       	pop	r0
 2fe:	0f be       	out	0x3f, r0	; 63
 300:	0f 90       	pop	r0
 302:	1f 90       	pop	r1
 304:	18 95       	reti

00000306 <__vector_3>:

/*
 *	the handler of external interrupt on INT2
 */
 void __vector_3(void)
{
 306:	1f 92       	push	r1
 308:	0f 92       	push	r0
 30a:	0f b6       	in	r0, 0x3f	; 63
 30c:	0f 92       	push	r0
 30e:	11 24       	eor	r1, r1
 310:	2f 93       	push	r18
 312:	3f 93       	push	r19
 314:	4f 93       	push	r20
 316:	5f 93       	push	r21
 318:	6f 93       	push	r22
 31a:	7f 93       	push	r23
 31c:	8f 93       	push	r24
 31e:	9f 93       	push	r25
 320:	af 93       	push	r26
 322:	bf 93       	push	r27
 324:	ef 93       	push	r30
 326:	ff 93       	push	r31
	/*call the call back function*/
	global_pvCallBackINT2();
 328:	e0 91 69 00 	lds	r30, 0x0069	; 0x800069 <global_pvCallBackINT2>
 32c:	f0 91 6a 00 	lds	r31, 0x006A	; 0x80006a <global_pvCallBackINT2+0x1>
 330:	09 95       	icall

	/*disable the flag of interrupt*/
	SET_BIT(GIFR, GIFR_INTF2_1BIT);
 332:	8a b7       	in	r24, 0x3a	; 58
 334:	80 62       	ori	r24, 0x20	; 32
 336:	8a bf       	out	0x3a, r24	; 58

	/*enable the global interrupt after the end of interrupt*/
	ENABLE_GLOBAL_INT();	
 338:	78 94       	sei
 33a:	ff 91       	pop	r31
 33c:	ef 91       	pop	r30
 33e:	bf 91       	pop	r27
 340:	af 91       	pop	r26
 342:	9f 91       	pop	r25
 344:	8f 91       	pop	r24
 346:	7f 91       	pop	r23
 348:	6f 91       	pop	r22
 34a:	5f 91       	pop	r21
 34c:	4f 91       	pop	r20
 34e:	3f 91       	pop	r19
 350:	2f 91       	pop	r18
 352:	0f 90       	pop	r0
 354:	0f be       	out	0x3f, r0	; 63
 356:	0f 90       	pop	r0
 358:	1f 90       	pop	r1
 35a:	18 95       	reti

0000035c <dummyCallBackFunc>:
{
	/*stop the timer*/
	CLR_RANGE(TCCR0, TCCR0_CS0_3BITS, TCCR0_CS0_3BITS + 2);

	return TIM0_OK;
}
 35c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <global_countVar>
 360:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <global_countVar+0x1>
 364:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <global_countVar+0x2>
 368:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <global_countVar+0x3>
 36c:	01 96       	adiw	r24, 0x01	; 1
 36e:	a1 1d       	adc	r26, r1
 370:	b1 1d       	adc	r27, r1
 372:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <global_countVar>
 376:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <global_countVar+0x1>
 37a:	a0 93 67 00 	sts	0x0067, r26	; 0x800067 <global_countVar+0x2>
 37e:	b0 93 68 00 	sts	0x0068, r27	; 0x800068 <global_countVar+0x3>
 382:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 386:	82 bf       	out	0x32, r24	; 50
 388:	40 91 65 00 	lds	r20, 0x0065	; 0x800065 <global_countVar>
 38c:	50 91 66 00 	lds	r21, 0x0066	; 0x800066 <global_countVar+0x1>
 390:	60 91 67 00 	lds	r22, 0x0067	; 0x800067 <global_countVar+0x2>
 394:	70 91 68 00 	lds	r23, 0x0068	; 0x800068 <global_countVar+0x3>
 398:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <global_ValueToReachCount>
 39c:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <global_ValueToReachCount+0x1>
 3a0:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <global_ValueToReachCount+0x2>
 3a4:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <global_ValueToReachCount+0x3>
 3a8:	48 17       	cp	r20, r24
 3aa:	59 07       	cpc	r21, r25
 3ac:	6a 07       	cpc	r22, r26
 3ae:	7b 07       	cpc	r23, r27
 3b0:	69 f4       	brne	.+26     	; 0x3cc <dummyCallBackFunc+0x70>
 3b2:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <global_countVar>
 3b6:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <global_countVar+0x1>
 3ba:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <global_countVar+0x2>
 3be:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <global_countVar+0x3>
 3c2:	e0 91 6f 00 	lds	r30, 0x006F	; 0x80006f <global_pvCallBackDelay>
 3c6:	f0 91 70 00 	lds	r31, 0x0070	; 0x800070 <global_pvCallBackDelay+0x1>
 3ca:	09 95       	icall
 3cc:	08 95       	ret

000003ce <calculatInitValueForTimer0>:
 3ce:	8f 92       	push	r8
 3d0:	9f 92       	push	r9
 3d2:	af 92       	push	r10
 3d4:	bf 92       	push	r11
 3d6:	cf 92       	push	r12
 3d8:	df 92       	push	r13
 3da:	ef 92       	push	r14
 3dc:	ff 92       	push	r15
 3de:	0f 93       	push	r16
 3e0:	1f 93       	push	r17
 3e2:	cf 93       	push	r28
 3e4:	df 93       	push	r29
 3e6:	cd b7       	in	r28, 0x3d	; 61
 3e8:	de b7       	in	r29, 0x3e	; 62
 3ea:	2d 97       	sbiw	r28, 0x0d	; 13
 3ec:	0f b6       	in	r0, 0x3f	; 63
 3ee:	f8 94       	cli
 3f0:	de bf       	out	0x3e, r29	; 62
 3f2:	0f be       	out	0x3f, r0	; 63
 3f4:	cd bf       	out	0x3d, r28	; 61
 3f6:	8a 01       	movw	r16, r20
 3f8:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__floatunsisf>
 3fc:	20 e0       	ldi	r18, 0x00	; 0
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	4a e7       	ldi	r20, 0x7A	; 122
 402:	54 e4       	ldi	r21, 0x44	; 68
 404:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 408:	69 83       	std	Y+1, r22	; 0x01
 40a:	7a 83       	std	Y+2, r23	; 0x02
 40c:	8b 83       	std	Y+3, r24	; 0x03
 40e:	9c 83       	std	Y+4, r25	; 0x04
 410:	1d 82       	std	Y+5, r1	; 0x05
 412:	b8 01       	movw	r22, r16
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__floatunsisf>
 41c:	20 e0       	ldi	r18, 0x00	; 0
 41e:	34 e2       	ldi	r19, 0x24	; 36
 420:	44 e7       	ldi	r20, 0x74	; 116
 422:	59 e4       	ldi	r21, 0x49	; 73
 424:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 428:	6e 83       	std	Y+6, r22	; 0x06
 42a:	7f 83       	std	Y+7, r23	; 0x07
 42c:	88 87       	std	Y+8, r24	; 0x08
 42e:	99 87       	std	Y+9, r25	; 0x09
 430:	6e 81       	ldd	r22, Y+6	; 0x06
 432:	7f 81       	ldd	r23, Y+7	; 0x07
 434:	88 85       	ldd	r24, Y+8	; 0x08
 436:	99 85       	ldd	r25, Y+9	; 0x09
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	40 e8       	ldi	r20, 0x80	; 128
 43e:	53 e4       	ldi	r21, 0x43	; 67
 440:	0e 94 ab 05 	call	0xb56	; 0xb56 <__mulsf3>
 444:	6a 87       	std	Y+10, r22	; 0x0a
 446:	7b 87       	std	Y+11, r23	; 0x0b
 448:	8c 87       	std	Y+12, r24	; 0x0c
 44a:	9d 87       	std	Y+13, r25	; 0x0d
 44c:	6a 85       	ldd	r22, Y+10	; 0x0a
 44e:	7b 85       	ldd	r23, Y+11	; 0x0b
 450:	8c 85       	ldd	r24, Y+12	; 0x0c
 452:	9d 85       	ldd	r25, Y+13	; 0x0d
 454:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 458:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__floatunsisf>
 45c:	29 81       	ldd	r18, Y+1	; 0x01
 45e:	3a 81       	ldd	r19, Y+2	; 0x02
 460:	4b 81       	ldd	r20, Y+3	; 0x03
 462:	5c 81       	ldd	r21, Y+4	; 0x04
 464:	0e 94 4e 04 	call	0x89c	; 0x89c <__cmpsf2>
 468:	81 11       	cpse	r24, r1
 46a:	0e c0       	rjmp	.+28     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	a0 e0       	ldi	r26, 0x00	; 0
 472:	b0 e0       	ldi	r27, 0x00	; 0
 474:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <global_ValueToReachCount>
 478:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <global_ValueToReachCount+0x1>
 47c:	a0 93 63 00 	sts	0x0063, r26	; 0x800063 <global_ValueToReachCount+0x2>
 480:	b0 93 64 00 	sts	0x0064, r27	; 0x800064 <global_ValueToReachCount+0x3>
 484:	1d 82       	std	Y+5, r1	; 0x05
 486:	b2 c0       	rjmp	.+356    	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 488:	6a 85       	ldd	r22, Y+10	; 0x0a
 48a:	7b 85       	ldd	r23, Y+11	; 0x0b
 48c:	8c 85       	ldd	r24, Y+12	; 0x0c
 48e:	9d 85       	ldd	r25, Y+13	; 0x0d
 490:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 494:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__floatunsisf>
 498:	29 81       	ldd	r18, Y+1	; 0x01
 49a:	3a 81       	ldd	r19, Y+2	; 0x02
 49c:	4b 81       	ldd	r20, Y+3	; 0x03
 49e:	5c 81       	ldd	r21, Y+4	; 0x04
 4a0:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__gesf2>
 4a4:	18 16       	cp	r1, r24
 4a6:	04 f5       	brge	.+64     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	a0 e0       	ldi	r26, 0x00	; 0
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <global_ValueToReachCount>
 4b4:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <global_ValueToReachCount+0x1>
 4b8:	a0 93 63 00 	sts	0x0063, r26	; 0x800063 <global_ValueToReachCount+0x2>
 4bc:	b0 93 64 00 	sts	0x0064, r27	; 0x800064 <global_ValueToReachCount+0x3>
 4c0:	6a 85       	ldd	r22, Y+10	; 0x0a
 4c2:	7b 85       	ldd	r23, Y+11	; 0x0b
 4c4:	8c 85       	ldd	r24, Y+12	; 0x0c
 4c6:	9d 85       	ldd	r25, Y+13	; 0x0d
 4c8:	29 81       	ldd	r18, Y+1	; 0x01
 4ca:	3a 81       	ldd	r19, Y+2	; 0x02
 4cc:	4b 81       	ldd	r20, Y+3	; 0x03
 4ce:	5c 81       	ldd	r21, Y+4	; 0x04
 4d0:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__subsf3>
 4d4:	2e 81       	ldd	r18, Y+6	; 0x06
 4d6:	3f 81       	ldd	r19, Y+7	; 0x07
 4d8:	48 85       	ldd	r20, Y+8	; 0x08
 4da:	59 85       	ldd	r21, Y+9	; 0x09
 4dc:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 4e0:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 4e4:	6d 83       	std	Y+5, r22	; 0x05
 4e6:	82 c0       	rjmp	.+260    	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 4e8:	6a 85       	ldd	r22, Y+10	; 0x0a
 4ea:	7b 85       	ldd	r23, Y+11	; 0x0b
 4ec:	8c 85       	ldd	r24, Y+12	; 0x0c
 4ee:	9d 85       	ldd	r25, Y+13	; 0x0d
 4f0:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 4f4:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__floatunsisf>
 4f8:	29 81       	ldd	r18, Y+1	; 0x01
 4fa:	3a 81       	ldd	r19, Y+2	; 0x02
 4fc:	4b 81       	ldd	r20, Y+3	; 0x03
 4fe:	5c 81       	ldd	r21, Y+4	; 0x04
 500:	0e 94 4e 04 	call	0x89c	; 0x89c <__cmpsf2>
 504:	88 23       	and	r24, r24
 506:	0c f0       	brlt	.+2      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 508:	71 c0       	rjmp	.+226    	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 50a:	69 81       	ldd	r22, Y+1	; 0x01
 50c:	7a 81       	ldd	r23, Y+2	; 0x02
 50e:	8b 81       	ldd	r24, Y+3	; 0x03
 510:	9c 81       	ldd	r25, Y+4	; 0x04
 512:	2a 85       	ldd	r18, Y+10	; 0x0a
 514:	3b 85       	ldd	r19, Y+11	; 0x0b
 516:	4c 85       	ldd	r20, Y+12	; 0x0c
 518:	5d 85       	ldd	r21, Y+13	; 0x0d
 51a:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 51e:	6b 01       	movw	r12, r22
 520:	7c 01       	movw	r14, r24
 522:	69 81       	ldd	r22, Y+1	; 0x01
 524:	7a 81       	ldd	r23, Y+2	; 0x02
 526:	8b 81       	ldd	r24, Y+3	; 0x03
 528:	9c 81       	ldd	r25, Y+4	; 0x04
 52a:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 52e:	4b 01       	movw	r8, r22
 530:	5c 01       	movw	r10, r24
 532:	6a 85       	ldd	r22, Y+10	; 0x0a
 534:	7b 85       	ldd	r23, Y+11	; 0x0b
 536:	8c 85       	ldd	r24, Y+12	; 0x0c
 538:	9d 85       	ldd	r25, Y+13	; 0x0d
 53a:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 53e:	9b 01       	movw	r18, r22
 540:	ac 01       	movw	r20, r24
 542:	c5 01       	movw	r24, r10
 544:	b4 01       	movw	r22, r8
 546:	0e 94 18 06 	call	0xc30	; 0xc30 <__udivmodsi4>
 54a:	ca 01       	movw	r24, r20
 54c:	b9 01       	movw	r22, r18
 54e:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__floatunsisf>
 552:	9b 01       	movw	r18, r22
 554:	ac 01       	movw	r20, r24
 556:	c7 01       	movw	r24, r14
 558:	b6 01       	movw	r22, r12
 55a:	0e 94 4e 04 	call	0x89c	; 0x89c <__cmpsf2>
 55e:	81 11       	cpse	r24, r1
 560:	0d c0       	rjmp	.+26     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 562:	69 81       	ldd	r22, Y+1	; 0x01
 564:	7a 81       	ldd	r23, Y+2	; 0x02
 566:	8b 81       	ldd	r24, Y+3	; 0x03
 568:	9c 81       	ldd	r25, Y+4	; 0x04
 56a:	2a 85       	ldd	r18, Y+10	; 0x0a
 56c:	3b 85       	ldd	r19, Y+11	; 0x0b
 56e:	4c 85       	ldd	r20, Y+12	; 0x0c
 570:	5d 85       	ldd	r21, Y+13	; 0x0d
 572:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 576:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 57a:	10 c0       	rjmp	.+32     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 57c:	69 81       	ldd	r22, Y+1	; 0x01
 57e:	7a 81       	ldd	r23, Y+2	; 0x02
 580:	8b 81       	ldd	r24, Y+3	; 0x03
 582:	9c 81       	ldd	r25, Y+4	; 0x04
 584:	2a 85       	ldd	r18, Y+10	; 0x0a
 586:	3b 85       	ldd	r19, Y+11	; 0x0b
 588:	4c 85       	ldd	r20, Y+12	; 0x0c
 58a:	5d 85       	ldd	r21, Y+13	; 0x0d
 58c:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 590:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 594:	6f 5f       	subi	r22, 0xFF	; 255
 596:	7f 4f       	sbci	r23, 0xFF	; 255
 598:	8f 4f       	sbci	r24, 0xFF	; 255
 59a:	9f 4f       	sbci	r25, 0xFF	; 255
 59c:	60 93 61 00 	sts	0x0061, r22	; 0x800061 <global_ValueToReachCount>
 5a0:	70 93 62 00 	sts	0x0062, r23	; 0x800062 <global_ValueToReachCount+0x1>
 5a4:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <global_ValueToReachCount+0x2>
 5a8:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <global_ValueToReachCount+0x3>
 5ac:	69 81       	ldd	r22, Y+1	; 0x01
 5ae:	7a 81       	ldd	r23, Y+2	; 0x02
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	9c 81       	ldd	r25, Y+4	; 0x04
 5b4:	2e 81       	ldd	r18, Y+6	; 0x06
 5b6:	3f 81       	ldd	r19, Y+7	; 0x07
 5b8:	48 85       	ldd	r20, Y+8	; 0x08
 5ba:	59 85       	ldd	r21, Y+9	; 0x09
 5bc:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 5c0:	6b 01       	movw	r12, r22
 5c2:	7c 01       	movw	r14, r24
 5c4:	60 91 61 00 	lds	r22, 0x0061	; 0x800061 <global_ValueToReachCount>
 5c8:	70 91 62 00 	lds	r23, 0x0062	; 0x800062 <global_ValueToReachCount+0x1>
 5cc:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <global_ValueToReachCount+0x2>
 5d0:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <global_ValueToReachCount+0x3>
 5d4:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__floatunsisf>
 5d8:	9b 01       	movw	r18, r22
 5da:	ac 01       	movw	r20, r24
 5dc:	c7 01       	movw	r24, r14
 5de:	b6 01       	movw	r22, r12
 5e0:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__divsf3>
 5e4:	0e 94 c5 04 	call	0x98a	; 0x98a <__fixunssfsi>
 5e8:	61 95       	neg	r22
 5ea:	6d 83       	std	Y+5, r22	; 0x05
 5ec:	8d 81       	ldd	r24, Y+5	; 0x05
 5ee:	2d 96       	adiw	r28, 0x0d	; 13
 5f0:	0f b6       	in	r0, 0x3f	; 63
 5f2:	f8 94       	cli
 5f4:	de bf       	out	0x3e, r29	; 62
 5f6:	0f be       	out	0x3f, r0	; 63
 5f8:	cd bf       	out	0x3d, r28	; 61
 5fa:	df 91       	pop	r29
 5fc:	cf 91       	pop	r28
 5fe:	1f 91       	pop	r17
 600:	0f 91       	pop	r16
 602:	ff 90       	pop	r15
 604:	ef 90       	pop	r14
 606:	df 90       	pop	r13
 608:	cf 90       	pop	r12
 60a:	bf 90       	pop	r11
 60c:	af 90       	pop	r10
 60e:	9f 90       	pop	r9
 610:	8f 90       	pop	r8
 612:	08 95       	ret

00000614 <timer0_init>:
 614:	0f 93       	push	r16
 616:	1f 93       	push	r17
 618:	64 30       	cpi	r22, 0x04	; 4
 61a:	e0 f5       	brcc	.+120    	; 0x694 <timer0_init+0x80>
 61c:	61 11       	cpse	r22, r1
 61e:	02 c0       	rjmp	.+4      	; 0x624 <timer0_init+0x10>
 620:	44 30       	cpi	r20, 0x04	; 4
 622:	d0 f5       	brcc	.+116    	; 0x698 <timer0_init+0x84>
 624:	63 30       	cpi	r22, 0x03	; 3
 626:	10 f4       	brcc	.+4      	; 0x62c <timer0_init+0x18>
 628:	41 30       	cpi	r20, 0x01	; 1
 62a:	c1 f1       	breq	.+112    	; 0x69c <timer0_init+0x88>
 62c:	93 b7       	in	r25, 0x33	; 51
 62e:	a6 2f       	mov	r26, r22
 630:	a1 70       	andi	r26, 0x01	; 1
 632:	b0 e0       	ldi	r27, 0x00	; 0
 634:	00 24       	eor	r0, r0
 636:	b6 95       	lsr	r27
 638:	a7 95       	ror	r26
 63a:	07 94       	ror	r0
 63c:	b6 95       	lsr	r27
 63e:	a7 95       	ror	r26
 640:	07 94       	ror	r0
 642:	ba 2f       	mov	r27, r26
 644:	a0 2d       	mov	r26, r0
 646:	9f 7b       	andi	r25, 0xBF	; 191
 648:	a9 2b       	or	r26, r25
 64a:	a3 bf       	out	0x33, r26	; 51
 64c:	93 b7       	in	r25, 0x33	; 51
 64e:	61 fb       	bst	r22, 1
 650:	ee 27       	eor	r30, r30
 652:	e0 f9       	bld	r30, 0
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	ee 0f       	add	r30, r30
 658:	ff 1f       	adc	r31, r31
 65a:	ee 0f       	add	r30, r30
 65c:	ff 1f       	adc	r31, r31
 65e:	ee 0f       	add	r30, r30
 660:	ff 1f       	adc	r31, r31
 662:	97 7f       	andi	r25, 0xF7	; 247
 664:	e9 2b       	or	r30, r25
 666:	e3 bf       	out	0x33, r30	; 51
 668:	10 93 74 00 	sts	0x0074, r17	; 0x800074 <global_pvOutCmpCallBack+0x1>
 66c:	00 93 73 00 	sts	0x0073, r16	; 0x800073 <global_pvOutCmpCallBack>
 670:	30 93 72 00 	sts	0x0072, r19	; 0x800072 <global_pvOverFlowCallBack+0x1>
 674:	20 93 71 00 	sts	0x0071, r18	; 0x800071 <global_pvOverFlowCallBack>
 678:	93 b7       	in	r25, 0x33	; 51
 67a:	20 e1       	ldi	r18, 0x10	; 16
 67c:	42 9f       	mul	r20, r18
 67e:	a0 01       	movw	r20, r0
 680:	11 24       	eor	r1, r1
 682:	9f 7c       	andi	r25, 0xCF	; 207
 684:	49 2b       	or	r20, r25
 686:	43 bf       	out	0x33, r20	; 51
 688:	82 bf       	out	0x32, r24	; 50
 68a:	89 b7       	in	r24, 0x39	; 57
 68c:	81 60       	ori	r24, 0x01	; 1
 68e:	89 bf       	out	0x39, r24	; 57
 690:	80 e0       	ldi	r24, 0x00	; 0
 692:	05 c0       	rjmp	.+10     	; 0x69e <timer0_init+0x8a>
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	03 c0       	rjmp	.+6      	; 0x69e <timer0_init+0x8a>
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	01 c0       	rjmp	.+2      	; 0x69e <timer0_init+0x8a>
 69c:	81 e0       	ldi	r24, 0x01	; 1
 69e:	1f 91       	pop	r17
 6a0:	0f 91       	pop	r16
 6a2:	08 95       	ret

000006a4 <timer0_start>:
 6a4:	88 30       	cpi	r24, 0x08	; 8
 6a6:	30 f4       	brcc	.+12     	; 0x6b4 <timer0_start+0x10>
 6a8:	93 b7       	in	r25, 0x33	; 51
 6aa:	98 7f       	andi	r25, 0xF8	; 248
 6ac:	89 2b       	or	r24, r25
 6ae:	83 bf       	out	0x33, r24	; 51
 6b0:	80 e0       	ldi	r24, 0x00	; 0
 6b2:	08 95       	ret
 6b4:	81 e0       	ldi	r24, 0x01	; 1
 6b6:	08 95       	ret

000006b8 <__vector_10>:
 *
 *	@brief		-:		-ISR of Timer/Counter1 Overflow
 *
 */
void __attribute__((signal,used)) __vector_10 (void) 
{
 6b8:	1f 92       	push	r1
 6ba:	0f 92       	push	r0
 6bc:	0f b6       	in	r0, 0x3f	; 63
 6be:	0f 92       	push	r0
 6c0:	11 24       	eor	r1, r1
 6c2:	2f 93       	push	r18
 6c4:	3f 93       	push	r19
 6c6:	4f 93       	push	r20
 6c8:	5f 93       	push	r21
 6ca:	6f 93       	push	r22
 6cc:	7f 93       	push	r23
 6ce:	8f 93       	push	r24
 6d0:	9f 93       	push	r25
 6d2:	af 93       	push	r26
 6d4:	bf 93       	push	r27
 6d6:	ef 93       	push	r30
 6d8:	ff 93       	push	r31
	/*call the call back function*/
	global_pvOutCmpCallBack();
 6da:	e0 91 73 00 	lds	r30, 0x0073	; 0x800073 <global_pvOutCmpCallBack>
 6de:	f0 91 74 00 	lds	r31, 0x0074	; 0x800074 <global_pvOutCmpCallBack+0x1>
 6e2:	09 95       	icall

	/*disable the flag of interrupt*/
	SET_BIT(TIFR, TIFR_OCF0_1BITS);
 6e4:	88 b7       	in	r24, 0x38	; 56
 6e6:	82 60       	ori	r24, 0x02	; 2
 6e8:	88 bf       	out	0x38, r24	; 56

	/*enable the global interrupt after the end of interrupt*/
	ENABLE_GLOBAL_INT();
 6ea:	78 94       	sei
	
}
 6ec:	ff 91       	pop	r31
 6ee:	ef 91       	pop	r30
 6f0:	bf 91       	pop	r27
 6f2:	af 91       	pop	r26
 6f4:	9f 91       	pop	r25
 6f6:	8f 91       	pop	r24
 6f8:	7f 91       	pop	r23
 6fa:	6f 91       	pop	r22
 6fc:	5f 91       	pop	r21
 6fe:	4f 91       	pop	r20
 700:	3f 91       	pop	r19
 702:	2f 91       	pop	r18
 704:	0f 90       	pop	r0
 706:	0f be       	out	0x3f, r0	; 63
 708:	0f 90       	pop	r0
 70a:	1f 90       	pop	r1
 70c:	18 95       	reti

0000070e <__vector_11>:
 *
 *	@brief		-:		-ISR of Timer/Counter0 Compare Match
 *
 */
void __attribute__((signal,used)) __vector_11(void) 
{
 70e:	1f 92       	push	r1
 710:	0f 92       	push	r0
 712:	0f b6       	in	r0, 0x3f	; 63
 714:	0f 92       	push	r0
 716:	11 24       	eor	r1, r1
 718:	2f 93       	push	r18
 71a:	3f 93       	push	r19
 71c:	4f 93       	push	r20
 71e:	5f 93       	push	r21
 720:	6f 93       	push	r22
 722:	7f 93       	push	r23
 724:	8f 93       	push	r24
 726:	9f 93       	push	r25
 728:	af 93       	push	r26
 72a:	bf 93       	push	r27
 72c:	ef 93       	push	r30
 72e:	ff 93       	push	r31
	/*call the call back function*/
	global_pvOverFlowCallBack();
 730:	e0 91 71 00 	lds	r30, 0x0071	; 0x800071 <global_pvOverFlowCallBack>
 734:	f0 91 72 00 	lds	r31, 0x0072	; 0x800072 <global_pvOverFlowCallBack+0x1>
 738:	09 95       	icall

	/*disable the flag of interrupt*/
	SET_BIT(TIFR, TIFR_TOV0_1BITS);
 73a:	88 b7       	in	r24, 0x38	; 56
 73c:	81 60       	ori	r24, 0x01	; 1
 73e:	88 bf       	out	0x38, r24	; 56

	/*enable the global interrupt after the end of interrupt*/
	ENABLE_GLOBAL_INT();
 740:	78 94       	sei
	
}
 742:	ff 91       	pop	r31
 744:	ef 91       	pop	r30
 746:	bf 91       	pop	r27
 748:	af 91       	pop	r26
 74a:	9f 91       	pop	r25
 74c:	8f 91       	pop	r24
 74e:	7f 91       	pop	r23
 750:	6f 91       	pop	r22
 752:	5f 91       	pop	r21
 754:	4f 91       	pop	r20
 756:	3f 91       	pop	r19
 758:	2f 91       	pop	r18
 75a:	0f 90       	pop	r0
 75c:	0f be       	out	0x3f, r0	; 63
 75e:	0f 90       	pop	r0
 760:	1f 90       	pop	r1
 762:	18 95       	reti

00000764 <timer0_InterruptEvery>:
 *	@brief		-:		-delay a specific amount of time
 *
 *	@return		-:		-none
 */
void timer0_InterruptEvery(uint32_t args_u32TimeInMilliSeconds,  void (*args_pvCallBackFunc)(void))
{
 764:	cf 92       	push	r12
 766:	df 92       	push	r13
 768:	ef 92       	push	r14
 76a:	ff 92       	push	r15
 76c:	0f 93       	push	r16
 76e:	1f 93       	push	r17
 770:	6b 01       	movw	r12, r22
 772:	7c 01       	movw	r14, r24
	/*assign the call back function*/
	global_pvCallBackDelay = args_pvCallBackFunc;
 774:	50 93 70 00 	sts	0x0070, r21	; 0x800070 <global_pvCallBackDelay+0x1>
 778:	40 93 6f 00 	sts	0x006F, r20	; 0x80006f <global_pvCallBackDelay>

	/*assign the dummy call back function*/
	global_pvOverFlowCallBack = dummyCallBackFunc;
 77c:	8e ea       	ldi	r24, 0xAE	; 174
 77e:	91 e0       	ldi	r25, 0x01	; 1
 780:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <global_pvOverFlowCallBack+0x1>
 784:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <global_pvOverFlowCallBack>

	/*initialize the timer with normal mode*/
	timer0_init(0, TIM0_MODE_NORMAL, TIM0_COM_NORM_NORMAL, dummyCallBackFunc, dummyCallBackFunc);
 788:	8c 01       	movw	r16, r24
 78a:	9c 01       	movw	r18, r24
 78c:	40 e0       	ldi	r20, 0x00	; 0
 78e:	60 e0       	ldi	r22, 0x00	; 0
 790:	80 e0       	ldi	r24, 0x00	; 0
 792:	0e 94 0a 03 	call	0x614	; 0x614 <timer0_init>

	/*calculate all required parameters*/
	global_u8InitValForTim = calculatInitValueForTimer0(args_u32TimeInMilliSeconds, (uint16_t)1024);
 796:	40 e0       	ldi	r20, 0x00	; 0
 798:	54 e0       	ldi	r21, 0x04	; 4
 79a:	c7 01       	movw	r24, r14
 79c:	b6 01       	movw	r22, r12
 79e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <calculatInitValueForTimer0>
 7a2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>

	/*init TCNT0*/
	TCNT0 = global_u8InitValForTim;
 7a6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 7aa:	82 bf       	out	0x32, r24	; 50

	/*start the timer*/
	timer0_start(TIM0_CLK_SRC_PRES_1024);	
 7ac:	85 e0       	ldi	r24, 0x05	; 5
 7ae:	0e 94 52 03 	call	0x6a4	; 0x6a4 <timer0_start>

	/*enable the global interrupt*/
	ENABLE_GLOBAL_INT();
 7b2:	78 94       	sei
	
 7b4:	1f 91       	pop	r17
 7b6:	0f 91       	pop	r16
 7b8:	ff 90       	pop	r15
 7ba:	ef 90       	pop	r14
 7bc:	df 90       	pop	r13
 7be:	cf 90       	pop	r12
 7c0:	08 95       	ret

000007c2 <__subsf3>:
 7c2:	50 58       	subi	r21, 0x80	; 128

000007c4 <__addsf3>:
 7c4:	bb 27       	eor	r27, r27
 7c6:	aa 27       	eor	r26, r26
 7c8:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__addsf3x>
 7cc:	0c 94 6c 05 	jmp	0xad8	; 0xad8 <__fp_round>
 7d0:	0e 94 5e 05 	call	0xabc	; 0xabc <__fp_pscA>
 7d4:	38 f0       	brcs	.+14     	; 0x7e4 <__addsf3+0x20>
 7d6:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_pscB>
 7da:	20 f0       	brcs	.+8      	; 0x7e4 <__addsf3+0x20>
 7dc:	39 f4       	brne	.+14     	; 0x7ec <__addsf3+0x28>
 7de:	9f 3f       	cpi	r25, 0xFF	; 255
 7e0:	19 f4       	brne	.+6      	; 0x7e8 <__addsf3+0x24>
 7e2:	26 f4       	brtc	.+8      	; 0x7ec <__addsf3+0x28>
 7e4:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_nan>
 7e8:	0e f4       	brtc	.+2      	; 0x7ec <__addsf3+0x28>
 7ea:	e0 95       	com	r30
 7ec:	e7 fb       	bst	r30, 7
 7ee:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_inf>

000007f2 <__addsf3x>:
 7f2:	e9 2f       	mov	r30, r25
 7f4:	0e 94 7d 05 	call	0xafa	; 0xafa <__fp_split3>
 7f8:	58 f3       	brcs	.-42     	; 0x7d0 <__addsf3+0xc>
 7fa:	ba 17       	cp	r27, r26
 7fc:	62 07       	cpc	r22, r18
 7fe:	73 07       	cpc	r23, r19
 800:	84 07       	cpc	r24, r20
 802:	95 07       	cpc	r25, r21
 804:	20 f0       	brcs	.+8      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 806:	79 f4       	brne	.+30     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 808:	a6 f5       	brtc	.+104    	; 0x872 <__stack+0x13>
 80a:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_zero>
 80e:	0e f4       	brtc	.+2      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 810:	e0 95       	com	r30
 812:	0b 2e       	mov	r0, r27
 814:	ba 2f       	mov	r27, r26
 816:	a0 2d       	mov	r26, r0
 818:	0b 01       	movw	r0, r22
 81a:	b9 01       	movw	r22, r18
 81c:	90 01       	movw	r18, r0
 81e:	0c 01       	movw	r0, r24
 820:	ca 01       	movw	r24, r20
 822:	a0 01       	movw	r20, r0
 824:	11 24       	eor	r1, r1
 826:	ff 27       	eor	r31, r31
 828:	59 1b       	sub	r21, r25
 82a:	99 f0       	breq	.+38     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 82c:	59 3f       	cpi	r21, 0xF9	; 249
 82e:	50 f4       	brcc	.+20     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 830:	50 3e       	cpi	r21, 0xE0	; 224
 832:	68 f1       	brcs	.+90     	; 0x88e <__stack+0x2f>
 834:	1a 16       	cp	r1, r26
 836:	f0 40       	sbci	r31, 0x00	; 0
 838:	a2 2f       	mov	r26, r18
 83a:	23 2f       	mov	r18, r19
 83c:	34 2f       	mov	r19, r20
 83e:	44 27       	eor	r20, r20
 840:	58 5f       	subi	r21, 0xF8	; 248
 842:	f3 cf       	rjmp	.-26     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 844:	46 95       	lsr	r20
 846:	37 95       	ror	r19
 848:	27 95       	ror	r18
 84a:	a7 95       	ror	r26
 84c:	f0 40       	sbci	r31, 0x00	; 0
 84e:	53 95       	inc	r21
 850:	c9 f7       	brne	.-14     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 852:	7e f4       	brtc	.+30     	; 0x872 <__stack+0x13>
 854:	1f 16       	cp	r1, r31
 856:	ba 0b       	sbc	r27, r26
 858:	62 0b       	sbc	r22, r18
 85a:	73 0b       	sbc	r23, r19
 85c:	84 0b       	sbc	r24, r20
 85e:	ba f0       	brmi	.+46     	; 0x88e <__stack+0x2f>
 860:	91 50       	subi	r25, 0x01	; 1
 862:	a1 f0       	breq	.+40     	; 0x88c <__stack+0x2d>
 864:	ff 0f       	add	r31, r31
 866:	bb 1f       	adc	r27, r27
 868:	66 1f       	adc	r22, r22
 86a:	77 1f       	adc	r23, r23
 86c:	88 1f       	adc	r24, r24
 86e:	c2 f7       	brpl	.-16     	; 0x860 <__stack+0x1>
 870:	0e c0       	rjmp	.+28     	; 0x88e <__stack+0x2f>
 872:	ba 0f       	add	r27, r26
 874:	62 1f       	adc	r22, r18
 876:	73 1f       	adc	r23, r19
 878:	84 1f       	adc	r24, r20
 87a:	48 f4       	brcc	.+18     	; 0x88e <__stack+0x2f>
 87c:	87 95       	ror	r24
 87e:	77 95       	ror	r23
 880:	67 95       	ror	r22
 882:	b7 95       	ror	r27
 884:	f7 95       	ror	r31
 886:	9e 3f       	cpi	r25, 0xFE	; 254
 888:	08 f0       	brcs	.+2      	; 0x88c <__stack+0x2d>
 88a:	b0 cf       	rjmp	.-160    	; 0x7ec <__addsf3+0x28>
 88c:	93 95       	inc	r25
 88e:	88 0f       	add	r24, r24
 890:	08 f0       	brcs	.+2      	; 0x894 <__stack+0x35>
 892:	99 27       	eor	r25, r25
 894:	ee 0f       	add	r30, r30
 896:	97 95       	ror	r25
 898:	87 95       	ror	r24
 89a:	08 95       	ret

0000089c <__cmpsf2>:
 89c:	0e 94 31 05 	call	0xa62	; 0xa62 <__fp_cmp>
 8a0:	08 f4       	brcc	.+2      	; 0x8a4 <__cmpsf2+0x8>
 8a2:	81 e0       	ldi	r24, 0x01	; 1
 8a4:	08 95       	ret

000008a6 <__divsf3>:
 8a6:	0e 94 67 04 	call	0x8ce	; 0x8ce <__divsf3x>
 8aa:	0c 94 6c 05 	jmp	0xad8	; 0xad8 <__fp_round>
 8ae:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_pscB>
 8b2:	58 f0       	brcs	.+22     	; 0x8ca <__divsf3+0x24>
 8b4:	0e 94 5e 05 	call	0xabc	; 0xabc <__fp_pscA>
 8b8:	40 f0       	brcs	.+16     	; 0x8ca <__divsf3+0x24>
 8ba:	29 f4       	brne	.+10     	; 0x8c6 <__divsf3+0x20>
 8bc:	5f 3f       	cpi	r21, 0xFF	; 255
 8be:	29 f0       	breq	.+10     	; 0x8ca <__divsf3+0x24>
 8c0:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_inf>
 8c4:	51 11       	cpse	r21, r1
 8c6:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_szero>
 8ca:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_nan>

000008ce <__divsf3x>:
 8ce:	0e 94 7d 05 	call	0xafa	; 0xafa <__fp_split3>
 8d2:	68 f3       	brcs	.-38     	; 0x8ae <__divsf3+0x8>

000008d4 <__divsf3_pse>:
 8d4:	99 23       	and	r25, r25
 8d6:	b1 f3       	breq	.-20     	; 0x8c4 <__divsf3+0x1e>
 8d8:	55 23       	and	r21, r21
 8da:	91 f3       	breq	.-28     	; 0x8c0 <__divsf3+0x1a>
 8dc:	95 1b       	sub	r25, r21
 8de:	55 0b       	sbc	r21, r21
 8e0:	bb 27       	eor	r27, r27
 8e2:	aa 27       	eor	r26, r26
 8e4:	62 17       	cp	r22, r18
 8e6:	73 07       	cpc	r23, r19
 8e8:	84 07       	cpc	r24, r20
 8ea:	38 f0       	brcs	.+14     	; 0x8fa <__divsf3_pse+0x26>
 8ec:	9f 5f       	subi	r25, 0xFF	; 255
 8ee:	5f 4f       	sbci	r21, 0xFF	; 255
 8f0:	22 0f       	add	r18, r18
 8f2:	33 1f       	adc	r19, r19
 8f4:	44 1f       	adc	r20, r20
 8f6:	aa 1f       	adc	r26, r26
 8f8:	a9 f3       	breq	.-22     	; 0x8e4 <__divsf3_pse+0x10>
 8fa:	35 d0       	rcall	.+106    	; 0x966 <__divsf3_pse+0x92>
 8fc:	0e 2e       	mov	r0, r30
 8fe:	3a f0       	brmi	.+14     	; 0x90e <__divsf3_pse+0x3a>
 900:	e0 e8       	ldi	r30, 0x80	; 128
 902:	32 d0       	rcall	.+100    	; 0x968 <__divsf3_pse+0x94>
 904:	91 50       	subi	r25, 0x01	; 1
 906:	50 40       	sbci	r21, 0x00	; 0
 908:	e6 95       	lsr	r30
 90a:	00 1c       	adc	r0, r0
 90c:	ca f7       	brpl	.-14     	; 0x900 <__divsf3_pse+0x2c>
 90e:	2b d0       	rcall	.+86     	; 0x966 <__divsf3_pse+0x92>
 910:	fe 2f       	mov	r31, r30
 912:	29 d0       	rcall	.+82     	; 0x966 <__divsf3_pse+0x92>
 914:	66 0f       	add	r22, r22
 916:	77 1f       	adc	r23, r23
 918:	88 1f       	adc	r24, r24
 91a:	bb 1f       	adc	r27, r27
 91c:	26 17       	cp	r18, r22
 91e:	37 07       	cpc	r19, r23
 920:	48 07       	cpc	r20, r24
 922:	ab 07       	cpc	r26, r27
 924:	b0 e8       	ldi	r27, 0x80	; 128
 926:	09 f0       	breq	.+2      	; 0x92a <__divsf3_pse+0x56>
 928:	bb 0b       	sbc	r27, r27
 92a:	80 2d       	mov	r24, r0
 92c:	bf 01       	movw	r22, r30
 92e:	ff 27       	eor	r31, r31
 930:	93 58       	subi	r25, 0x83	; 131
 932:	5f 4f       	sbci	r21, 0xFF	; 255
 934:	3a f0       	brmi	.+14     	; 0x944 <__divsf3_pse+0x70>
 936:	9e 3f       	cpi	r25, 0xFE	; 254
 938:	51 05       	cpc	r21, r1
 93a:	78 f0       	brcs	.+30     	; 0x95a <__divsf3_pse+0x86>
 93c:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_inf>
 940:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_szero>
 944:	5f 3f       	cpi	r21, 0xFF	; 255
 946:	e4 f3       	brlt	.-8      	; 0x940 <__divsf3_pse+0x6c>
 948:	98 3e       	cpi	r25, 0xE8	; 232
 94a:	d4 f3       	brlt	.-12     	; 0x940 <__divsf3_pse+0x6c>
 94c:	86 95       	lsr	r24
 94e:	77 95       	ror	r23
 950:	67 95       	ror	r22
 952:	b7 95       	ror	r27
 954:	f7 95       	ror	r31
 956:	9f 5f       	subi	r25, 0xFF	; 255
 958:	c9 f7       	brne	.-14     	; 0x94c <__divsf3_pse+0x78>
 95a:	88 0f       	add	r24, r24
 95c:	91 1d       	adc	r25, r1
 95e:	96 95       	lsr	r25
 960:	87 95       	ror	r24
 962:	97 f9       	bld	r25, 7
 964:	08 95       	ret
 966:	e1 e0       	ldi	r30, 0x01	; 1
 968:	66 0f       	add	r22, r22
 96a:	77 1f       	adc	r23, r23
 96c:	88 1f       	adc	r24, r24
 96e:	bb 1f       	adc	r27, r27
 970:	62 17       	cp	r22, r18
 972:	73 07       	cpc	r23, r19
 974:	84 07       	cpc	r24, r20
 976:	ba 07       	cpc	r27, r26
 978:	20 f0       	brcs	.+8      	; 0x982 <__divsf3_pse+0xae>
 97a:	62 1b       	sub	r22, r18
 97c:	73 0b       	sbc	r23, r19
 97e:	84 0b       	sbc	r24, r20
 980:	ba 0b       	sbc	r27, r26
 982:	ee 1f       	adc	r30, r30
 984:	88 f7       	brcc	.-30     	; 0x968 <__divsf3_pse+0x94>
 986:	e0 95       	com	r30
 988:	08 95       	ret

0000098a <__fixunssfsi>:
 98a:	0e 94 85 05 	call	0xb0a	; 0xb0a <__fp_splitA>
 98e:	88 f0       	brcs	.+34     	; 0x9b2 <__fixunssfsi+0x28>
 990:	9f 57       	subi	r25, 0x7F	; 127
 992:	98 f0       	brcs	.+38     	; 0x9ba <__fixunssfsi+0x30>
 994:	b9 2f       	mov	r27, r25
 996:	99 27       	eor	r25, r25
 998:	b7 51       	subi	r27, 0x17	; 23
 99a:	b0 f0       	brcs	.+44     	; 0x9c8 <__fixunssfsi+0x3e>
 99c:	e1 f0       	breq	.+56     	; 0x9d6 <__fixunssfsi+0x4c>
 99e:	66 0f       	add	r22, r22
 9a0:	77 1f       	adc	r23, r23
 9a2:	88 1f       	adc	r24, r24
 9a4:	99 1f       	adc	r25, r25
 9a6:	1a f0       	brmi	.+6      	; 0x9ae <__fixunssfsi+0x24>
 9a8:	ba 95       	dec	r27
 9aa:	c9 f7       	brne	.-14     	; 0x99e <__fixunssfsi+0x14>
 9ac:	14 c0       	rjmp	.+40     	; 0x9d6 <__fixunssfsi+0x4c>
 9ae:	b1 30       	cpi	r27, 0x01	; 1
 9b0:	91 f0       	breq	.+36     	; 0x9d6 <__fixunssfsi+0x4c>
 9b2:	0e 94 9f 05 	call	0xb3e	; 0xb3e <__fp_zero>
 9b6:	b1 e0       	ldi	r27, 0x01	; 1
 9b8:	08 95       	ret
 9ba:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_zero>
 9be:	67 2f       	mov	r22, r23
 9c0:	78 2f       	mov	r23, r24
 9c2:	88 27       	eor	r24, r24
 9c4:	b8 5f       	subi	r27, 0xF8	; 248
 9c6:	39 f0       	breq	.+14     	; 0x9d6 <__fixunssfsi+0x4c>
 9c8:	b9 3f       	cpi	r27, 0xF9	; 249
 9ca:	cc f3       	brlt	.-14     	; 0x9be <__fixunssfsi+0x34>
 9cc:	86 95       	lsr	r24
 9ce:	77 95       	ror	r23
 9d0:	67 95       	ror	r22
 9d2:	b3 95       	inc	r27
 9d4:	d9 f7       	brne	.-10     	; 0x9cc <__fixunssfsi+0x42>
 9d6:	3e f4       	brtc	.+14     	; 0x9e6 <__fixunssfsi+0x5c>
 9d8:	90 95       	com	r25
 9da:	80 95       	com	r24
 9dc:	70 95       	com	r23
 9de:	61 95       	neg	r22
 9e0:	7f 4f       	sbci	r23, 0xFF	; 255
 9e2:	8f 4f       	sbci	r24, 0xFF	; 255
 9e4:	9f 4f       	sbci	r25, 0xFF	; 255
 9e6:	08 95       	ret

000009e8 <__floatunsisf>:
 9e8:	e8 94       	clt
 9ea:	09 c0       	rjmp	.+18     	; 0x9fe <__floatsisf+0x12>

000009ec <__floatsisf>:
 9ec:	97 fb       	bst	r25, 7
 9ee:	3e f4       	brtc	.+14     	; 0x9fe <__floatsisf+0x12>
 9f0:	90 95       	com	r25
 9f2:	80 95       	com	r24
 9f4:	70 95       	com	r23
 9f6:	61 95       	neg	r22
 9f8:	7f 4f       	sbci	r23, 0xFF	; 255
 9fa:	8f 4f       	sbci	r24, 0xFF	; 255
 9fc:	9f 4f       	sbci	r25, 0xFF	; 255
 9fe:	99 23       	and	r25, r25
 a00:	a9 f0       	breq	.+42     	; 0xa2c <__floatsisf+0x40>
 a02:	f9 2f       	mov	r31, r25
 a04:	96 e9       	ldi	r25, 0x96	; 150
 a06:	bb 27       	eor	r27, r27
 a08:	93 95       	inc	r25
 a0a:	f6 95       	lsr	r31
 a0c:	87 95       	ror	r24
 a0e:	77 95       	ror	r23
 a10:	67 95       	ror	r22
 a12:	b7 95       	ror	r27
 a14:	f1 11       	cpse	r31, r1
 a16:	f8 cf       	rjmp	.-16     	; 0xa08 <__floatsisf+0x1c>
 a18:	fa f4       	brpl	.+62     	; 0xa58 <__floatsisf+0x6c>
 a1a:	bb 0f       	add	r27, r27
 a1c:	11 f4       	brne	.+4      	; 0xa22 <__floatsisf+0x36>
 a1e:	60 ff       	sbrs	r22, 0
 a20:	1b c0       	rjmp	.+54     	; 0xa58 <__floatsisf+0x6c>
 a22:	6f 5f       	subi	r22, 0xFF	; 255
 a24:	7f 4f       	sbci	r23, 0xFF	; 255
 a26:	8f 4f       	sbci	r24, 0xFF	; 255
 a28:	9f 4f       	sbci	r25, 0xFF	; 255
 a2a:	16 c0       	rjmp	.+44     	; 0xa58 <__floatsisf+0x6c>
 a2c:	88 23       	and	r24, r24
 a2e:	11 f0       	breq	.+4      	; 0xa34 <__floatsisf+0x48>
 a30:	96 e9       	ldi	r25, 0x96	; 150
 a32:	11 c0       	rjmp	.+34     	; 0xa56 <__floatsisf+0x6a>
 a34:	77 23       	and	r23, r23
 a36:	21 f0       	breq	.+8      	; 0xa40 <__floatsisf+0x54>
 a38:	9e e8       	ldi	r25, 0x8E	; 142
 a3a:	87 2f       	mov	r24, r23
 a3c:	76 2f       	mov	r23, r22
 a3e:	05 c0       	rjmp	.+10     	; 0xa4a <__floatsisf+0x5e>
 a40:	66 23       	and	r22, r22
 a42:	71 f0       	breq	.+28     	; 0xa60 <__floatsisf+0x74>
 a44:	96 e8       	ldi	r25, 0x86	; 134
 a46:	86 2f       	mov	r24, r22
 a48:	70 e0       	ldi	r23, 0x00	; 0
 a4a:	60 e0       	ldi	r22, 0x00	; 0
 a4c:	2a f0       	brmi	.+10     	; 0xa58 <__floatsisf+0x6c>
 a4e:	9a 95       	dec	r25
 a50:	66 0f       	add	r22, r22
 a52:	77 1f       	adc	r23, r23
 a54:	88 1f       	adc	r24, r24
 a56:	da f7       	brpl	.-10     	; 0xa4e <__floatsisf+0x62>
 a58:	88 0f       	add	r24, r24
 a5a:	96 95       	lsr	r25
 a5c:	87 95       	ror	r24
 a5e:	97 f9       	bld	r25, 7
 a60:	08 95       	ret

00000a62 <__fp_cmp>:
 a62:	99 0f       	add	r25, r25
 a64:	00 08       	sbc	r0, r0
 a66:	55 0f       	add	r21, r21
 a68:	aa 0b       	sbc	r26, r26
 a6a:	e0 e8       	ldi	r30, 0x80	; 128
 a6c:	fe ef       	ldi	r31, 0xFE	; 254
 a6e:	16 16       	cp	r1, r22
 a70:	17 06       	cpc	r1, r23
 a72:	e8 07       	cpc	r30, r24
 a74:	f9 07       	cpc	r31, r25
 a76:	c0 f0       	brcs	.+48     	; 0xaa8 <__fp_cmp+0x46>
 a78:	12 16       	cp	r1, r18
 a7a:	13 06       	cpc	r1, r19
 a7c:	e4 07       	cpc	r30, r20
 a7e:	f5 07       	cpc	r31, r21
 a80:	98 f0       	brcs	.+38     	; 0xaa8 <__fp_cmp+0x46>
 a82:	62 1b       	sub	r22, r18
 a84:	73 0b       	sbc	r23, r19
 a86:	84 0b       	sbc	r24, r20
 a88:	95 0b       	sbc	r25, r21
 a8a:	39 f4       	brne	.+14     	; 0xa9a <__fp_cmp+0x38>
 a8c:	0a 26       	eor	r0, r26
 a8e:	61 f0       	breq	.+24     	; 0xaa8 <__fp_cmp+0x46>
 a90:	23 2b       	or	r18, r19
 a92:	24 2b       	or	r18, r20
 a94:	25 2b       	or	r18, r21
 a96:	21 f4       	brne	.+8      	; 0xaa0 <__fp_cmp+0x3e>
 a98:	08 95       	ret
 a9a:	0a 26       	eor	r0, r26
 a9c:	09 f4       	brne	.+2      	; 0xaa0 <__fp_cmp+0x3e>
 a9e:	a1 40       	sbci	r26, 0x01	; 1
 aa0:	a6 95       	lsr	r26
 aa2:	8f ef       	ldi	r24, 0xFF	; 255
 aa4:	81 1d       	adc	r24, r1
 aa6:	81 1d       	adc	r24, r1
 aa8:	08 95       	ret

00000aaa <__fp_inf>:
 aaa:	97 f9       	bld	r25, 7
 aac:	9f 67       	ori	r25, 0x7F	; 127
 aae:	80 e8       	ldi	r24, 0x80	; 128
 ab0:	70 e0       	ldi	r23, 0x00	; 0
 ab2:	60 e0       	ldi	r22, 0x00	; 0
 ab4:	08 95       	ret

00000ab6 <__fp_nan>:
 ab6:	9f ef       	ldi	r25, 0xFF	; 255
 ab8:	80 ec       	ldi	r24, 0xC0	; 192
 aba:	08 95       	ret

00000abc <__fp_pscA>:
 abc:	00 24       	eor	r0, r0
 abe:	0a 94       	dec	r0
 ac0:	16 16       	cp	r1, r22
 ac2:	17 06       	cpc	r1, r23
 ac4:	18 06       	cpc	r1, r24
 ac6:	09 06       	cpc	r0, r25
 ac8:	08 95       	ret

00000aca <__fp_pscB>:
 aca:	00 24       	eor	r0, r0
 acc:	0a 94       	dec	r0
 ace:	12 16       	cp	r1, r18
 ad0:	13 06       	cpc	r1, r19
 ad2:	14 06       	cpc	r1, r20
 ad4:	05 06       	cpc	r0, r21
 ad6:	08 95       	ret

00000ad8 <__fp_round>:
 ad8:	09 2e       	mov	r0, r25
 ada:	03 94       	inc	r0
 adc:	00 0c       	add	r0, r0
 ade:	11 f4       	brne	.+4      	; 0xae4 <__fp_round+0xc>
 ae0:	88 23       	and	r24, r24
 ae2:	52 f0       	brmi	.+20     	; 0xaf8 <__fp_round+0x20>
 ae4:	bb 0f       	add	r27, r27
 ae6:	40 f4       	brcc	.+16     	; 0xaf8 <__fp_round+0x20>
 ae8:	bf 2b       	or	r27, r31
 aea:	11 f4       	brne	.+4      	; 0xaf0 <__fp_round+0x18>
 aec:	60 ff       	sbrs	r22, 0
 aee:	04 c0       	rjmp	.+8      	; 0xaf8 <__fp_round+0x20>
 af0:	6f 5f       	subi	r22, 0xFF	; 255
 af2:	7f 4f       	sbci	r23, 0xFF	; 255
 af4:	8f 4f       	sbci	r24, 0xFF	; 255
 af6:	9f 4f       	sbci	r25, 0xFF	; 255
 af8:	08 95       	ret

00000afa <__fp_split3>:
 afa:	57 fd       	sbrc	r21, 7
 afc:	90 58       	subi	r25, 0x80	; 128
 afe:	44 0f       	add	r20, r20
 b00:	55 1f       	adc	r21, r21
 b02:	59 f0       	breq	.+22     	; 0xb1a <__fp_splitA+0x10>
 b04:	5f 3f       	cpi	r21, 0xFF	; 255
 b06:	71 f0       	breq	.+28     	; 0xb24 <__fp_splitA+0x1a>
 b08:	47 95       	ror	r20

00000b0a <__fp_splitA>:
 b0a:	88 0f       	add	r24, r24
 b0c:	97 fb       	bst	r25, 7
 b0e:	99 1f       	adc	r25, r25
 b10:	61 f0       	breq	.+24     	; 0xb2a <__fp_splitA+0x20>
 b12:	9f 3f       	cpi	r25, 0xFF	; 255
 b14:	79 f0       	breq	.+30     	; 0xb34 <__fp_splitA+0x2a>
 b16:	87 95       	ror	r24
 b18:	08 95       	ret
 b1a:	12 16       	cp	r1, r18
 b1c:	13 06       	cpc	r1, r19
 b1e:	14 06       	cpc	r1, r20
 b20:	55 1f       	adc	r21, r21
 b22:	f2 cf       	rjmp	.-28     	; 0xb08 <__fp_split3+0xe>
 b24:	46 95       	lsr	r20
 b26:	f1 df       	rcall	.-30     	; 0xb0a <__fp_splitA>
 b28:	08 c0       	rjmp	.+16     	; 0xb3a <__fp_splitA+0x30>
 b2a:	16 16       	cp	r1, r22
 b2c:	17 06       	cpc	r1, r23
 b2e:	18 06       	cpc	r1, r24
 b30:	99 1f       	adc	r25, r25
 b32:	f1 cf       	rjmp	.-30     	; 0xb16 <__fp_splitA+0xc>
 b34:	86 95       	lsr	r24
 b36:	71 05       	cpc	r23, r1
 b38:	61 05       	cpc	r22, r1
 b3a:	08 94       	sec
 b3c:	08 95       	ret

00000b3e <__fp_zero>:
 b3e:	e8 94       	clt

00000b40 <__fp_szero>:
 b40:	bb 27       	eor	r27, r27
 b42:	66 27       	eor	r22, r22
 b44:	77 27       	eor	r23, r23
 b46:	cb 01       	movw	r24, r22
 b48:	97 f9       	bld	r25, 7
 b4a:	08 95       	ret

00000b4c <__gesf2>:
 b4c:	0e 94 31 05 	call	0xa62	; 0xa62 <__fp_cmp>
 b50:	08 f4       	brcc	.+2      	; 0xb54 <__gesf2+0x8>
 b52:	8f ef       	ldi	r24, 0xFF	; 255
 b54:	08 95       	ret

00000b56 <__mulsf3>:
 b56:	0e 94 be 05 	call	0xb7c	; 0xb7c <__mulsf3x>
 b5a:	0c 94 6c 05 	jmp	0xad8	; 0xad8 <__fp_round>
 b5e:	0e 94 5e 05 	call	0xabc	; 0xabc <__fp_pscA>
 b62:	38 f0       	brcs	.+14     	; 0xb72 <__mulsf3+0x1c>
 b64:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_pscB>
 b68:	20 f0       	brcs	.+8      	; 0xb72 <__mulsf3+0x1c>
 b6a:	95 23       	and	r25, r21
 b6c:	11 f0       	breq	.+4      	; 0xb72 <__mulsf3+0x1c>
 b6e:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_inf>
 b72:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_nan>
 b76:	11 24       	eor	r1, r1
 b78:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_szero>

00000b7c <__mulsf3x>:
 b7c:	0e 94 7d 05 	call	0xafa	; 0xafa <__fp_split3>
 b80:	70 f3       	brcs	.-36     	; 0xb5e <__mulsf3+0x8>

00000b82 <__mulsf3_pse>:
 b82:	95 9f       	mul	r25, r21
 b84:	c1 f3       	breq	.-16     	; 0xb76 <__mulsf3+0x20>
 b86:	95 0f       	add	r25, r21
 b88:	50 e0       	ldi	r21, 0x00	; 0
 b8a:	55 1f       	adc	r21, r21
 b8c:	62 9f       	mul	r22, r18
 b8e:	f0 01       	movw	r30, r0
 b90:	72 9f       	mul	r23, r18
 b92:	bb 27       	eor	r27, r27
 b94:	f0 0d       	add	r31, r0
 b96:	b1 1d       	adc	r27, r1
 b98:	63 9f       	mul	r22, r19
 b9a:	aa 27       	eor	r26, r26
 b9c:	f0 0d       	add	r31, r0
 b9e:	b1 1d       	adc	r27, r1
 ba0:	aa 1f       	adc	r26, r26
 ba2:	64 9f       	mul	r22, r20
 ba4:	66 27       	eor	r22, r22
 ba6:	b0 0d       	add	r27, r0
 ba8:	a1 1d       	adc	r26, r1
 baa:	66 1f       	adc	r22, r22
 bac:	82 9f       	mul	r24, r18
 bae:	22 27       	eor	r18, r18
 bb0:	b0 0d       	add	r27, r0
 bb2:	a1 1d       	adc	r26, r1
 bb4:	62 1f       	adc	r22, r18
 bb6:	73 9f       	mul	r23, r19
 bb8:	b0 0d       	add	r27, r0
 bba:	a1 1d       	adc	r26, r1
 bbc:	62 1f       	adc	r22, r18
 bbe:	83 9f       	mul	r24, r19
 bc0:	a0 0d       	add	r26, r0
 bc2:	61 1d       	adc	r22, r1
 bc4:	22 1f       	adc	r18, r18
 bc6:	74 9f       	mul	r23, r20
 bc8:	33 27       	eor	r19, r19
 bca:	a0 0d       	add	r26, r0
 bcc:	61 1d       	adc	r22, r1
 bce:	23 1f       	adc	r18, r19
 bd0:	84 9f       	mul	r24, r20
 bd2:	60 0d       	add	r22, r0
 bd4:	21 1d       	adc	r18, r1
 bd6:	82 2f       	mov	r24, r18
 bd8:	76 2f       	mov	r23, r22
 bda:	6a 2f       	mov	r22, r26
 bdc:	11 24       	eor	r1, r1
 bde:	9f 57       	subi	r25, 0x7F	; 127
 be0:	50 40       	sbci	r21, 0x00	; 0
 be2:	9a f0       	brmi	.+38     	; 0xc0a <__mulsf3_pse+0x88>
 be4:	f1 f0       	breq	.+60     	; 0xc22 <__mulsf3_pse+0xa0>
 be6:	88 23       	and	r24, r24
 be8:	4a f0       	brmi	.+18     	; 0xbfc <__mulsf3_pse+0x7a>
 bea:	ee 0f       	add	r30, r30
 bec:	ff 1f       	adc	r31, r31
 bee:	bb 1f       	adc	r27, r27
 bf0:	66 1f       	adc	r22, r22
 bf2:	77 1f       	adc	r23, r23
 bf4:	88 1f       	adc	r24, r24
 bf6:	91 50       	subi	r25, 0x01	; 1
 bf8:	50 40       	sbci	r21, 0x00	; 0
 bfa:	a9 f7       	brne	.-22     	; 0xbe6 <__mulsf3_pse+0x64>
 bfc:	9e 3f       	cpi	r25, 0xFE	; 254
 bfe:	51 05       	cpc	r21, r1
 c00:	80 f0       	brcs	.+32     	; 0xc22 <__mulsf3_pse+0xa0>
 c02:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__fp_inf>
 c06:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_szero>
 c0a:	5f 3f       	cpi	r21, 0xFF	; 255
 c0c:	e4 f3       	brlt	.-8      	; 0xc06 <__mulsf3_pse+0x84>
 c0e:	98 3e       	cpi	r25, 0xE8	; 232
 c10:	d4 f3       	brlt	.-12     	; 0xc06 <__mulsf3_pse+0x84>
 c12:	86 95       	lsr	r24
 c14:	77 95       	ror	r23
 c16:	67 95       	ror	r22
 c18:	b7 95       	ror	r27
 c1a:	f7 95       	ror	r31
 c1c:	e7 95       	ror	r30
 c1e:	9f 5f       	subi	r25, 0xFF	; 255
 c20:	c1 f7       	brne	.-16     	; 0xc12 <__mulsf3_pse+0x90>
 c22:	fe 2b       	or	r31, r30
 c24:	88 0f       	add	r24, r24
 c26:	91 1d       	adc	r25, r1
 c28:	96 95       	lsr	r25
 c2a:	87 95       	ror	r24
 c2c:	97 f9       	bld	r25, 7
 c2e:	08 95       	ret

00000c30 <__udivmodsi4>:
 c30:	a1 e2       	ldi	r26, 0x21	; 33
 c32:	1a 2e       	mov	r1, r26
 c34:	aa 1b       	sub	r26, r26
 c36:	bb 1b       	sub	r27, r27
 c38:	fd 01       	movw	r30, r26
 c3a:	0d c0       	rjmp	.+26     	; 0xc56 <__udivmodsi4_ep>

00000c3c <__udivmodsi4_loop>:
 c3c:	aa 1f       	adc	r26, r26
 c3e:	bb 1f       	adc	r27, r27
 c40:	ee 1f       	adc	r30, r30
 c42:	ff 1f       	adc	r31, r31
 c44:	a2 17       	cp	r26, r18
 c46:	b3 07       	cpc	r27, r19
 c48:	e4 07       	cpc	r30, r20
 c4a:	f5 07       	cpc	r31, r21
 c4c:	20 f0       	brcs	.+8      	; 0xc56 <__udivmodsi4_ep>
 c4e:	a2 1b       	sub	r26, r18
 c50:	b3 0b       	sbc	r27, r19
 c52:	e4 0b       	sbc	r30, r20
 c54:	f5 0b       	sbc	r31, r21

00000c56 <__udivmodsi4_ep>:
 c56:	66 1f       	adc	r22, r22
 c58:	77 1f       	adc	r23, r23
 c5a:	88 1f       	adc	r24, r24
 c5c:	99 1f       	adc	r25, r25
 c5e:	1a 94       	dec	r1
 c60:	69 f7       	brne	.-38     	; 0xc3c <__udivmodsi4_loop>
 c62:	60 95       	com	r22
 c64:	70 95       	com	r23
 c66:	80 95       	com	r24
 c68:	90 95       	com	r25
 c6a:	9b 01       	movw	r18, r22
 c6c:	ac 01       	movw	r20, r24
 c6e:	bd 01       	movw	r22, r26
 c70:	cf 01       	movw	r24, r30
 c72:	08 95       	ret

00000c74 <_exit>:
 c74:	f8 94       	cli

00000c76 <__stop_program>:
 c76:	ff cf       	rjmp	.-2      	; 0xc76 <__stop_program>
