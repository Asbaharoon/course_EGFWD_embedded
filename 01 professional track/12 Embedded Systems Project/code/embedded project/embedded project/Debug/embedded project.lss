
embedded project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ff6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001ff6  0000208a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000004d  00800068  00800068  00002092  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002092  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000020c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  00002100  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013e5  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009eb  00000000  00000000  00003695  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014eb  00000000  00000000  00004080  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000064c  00000000  00000000  0000556c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b71  00000000  00000000  00005bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ce0  00000000  00000000  00006729  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00007409  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__vector_1>
       8:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__vector_2>
       c:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <__vector_10>
      2c:	0c 94 3e 0b 	jmp	0x167c	; 0x167c <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ef       	ldi	r30, 0xF6	; 246
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a8 e6       	ldi	r26, 0x68	; 104
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 3b       	cpi	r26, 0xB5	; 181
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 9f 05 	call	0xb3e	; 0xb3e <main>
      8a:	0c 94 f9 0f 	jmp	0x1ff2	; 0x1ff2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <checkIfToSwitchToNextLed>:

/*variable used to go to the next element in the arr*/
static volatile uint32_t local_u32ArrIndex = 0;

void checkIfToSwitchToNextLed(void)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62


	/*switch to the next led if 5 seconds passed*/
	if (global_u32Seconds % 6 == 0)
      9a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
      9e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
      a2:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
      a6:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
      aa:	26 e0       	ldi	r18, 0x06	; 6
      ac:	30 e0       	ldi	r19, 0x00	; 0
      ae:	40 e0       	ldi	r20, 0x00	; 0
      b0:	50 e0       	ldi	r21, 0x00	; 0
      b2:	bc 01       	movw	r22, r24
      b4:	cd 01       	movw	r24, r26
      b6:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <__udivmodsi4>
      ba:	dc 01       	movw	r26, r24
      bc:	cb 01       	movw	r24, r22
      be:	89 2b       	or	r24, r25
      c0:	8a 2b       	or	r24, r26
      c2:	8b 2b       	or	r24, r27
      c4:	09 f0       	breq	.+2      	; 0xc8 <checkIfToSwitchToNextLed+0x36>
      c6:	b3 c0       	rjmp	.+358    	; 0x22e <checkIfToSwitchToNextLed+0x19c>
	{
		/*turn of the current led*/
		switch(global_u8ActiveLed)
      c8:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <global_u8ActiveLed>
      cc:	88 2f       	mov	r24, r24
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	81 30       	cpi	r24, 0x01	; 1
      d2:	91 05       	cpc	r25, r1
      d4:	91 f0       	breq	.+36     	; 0xfa <checkIfToSwitchToNextLed+0x68>
      d6:	82 30       	cpi	r24, 0x02	; 2
      d8:	91 05       	cpc	r25, r1
      da:	d9 f0       	breq	.+54     	; 0x112 <checkIfToSwitchToNextLed+0x80>
      dc:	89 2b       	or	r24, r25
      de:	09 f0       	breq	.+2      	; 0xe2 <checkIfToSwitchToNextLed+0x50>
			case CAR_RED_LED:
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_OFF);
				break;			
				
			default:
				break;				
      e0:	24 c0       	rjmp	.+72     	; 0x12a <checkIfToSwitchToNextLed+0x98>
	{
		/*turn of the current led*/
		switch(global_u8ActiveLed)
		{
			case CAR_GREEN_LED:
				led_Write(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber, carsGreen_t.args_u8LedType, LED_STATE_OFF);
      e2:	30 91 98 00 	lds	r19, 0x0098	; 0x800098 <carsGreen_t+0x2>
      e6:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <carsGreen_t+0x1>
      ea:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <carsGreen_t>
      ee:	21 e0       	ldi	r18, 0x01	; 1
      f0:	43 2f       	mov	r20, r19
      f2:	69 2f       	mov	r22, r25
      f4:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				break;
      f8:	18 c0       	rjmp	.+48     	; 0x12a <checkIfToSwitchToNextLed+0x98>

			case CAR_YELLOW_LED:
				led_Write(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber, carsYellow_t.args_u8LedType, LED_STATE_OFF);
      fa:	30 91 94 00 	lds	r19, 0x0094	; 0x800094 <carsYellow_t+0x2>
      fe:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     102:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     106:	21 e0       	ldi	r18, 0x01	; 1
     108:	43 2f       	mov	r20, r19
     10a:	69 2f       	mov	r22, r25
     10c:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				break;
     110:	0c c0       	rjmp	.+24     	; 0x12a <checkIfToSwitchToNextLed+0x98>
				
			case CAR_RED_LED:
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_OFF);
     112:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <carsRed_t+0x2>
     116:	90 91 86 00 	lds	r25, 0x0086	; 0x800086 <carsRed_t+0x1>
     11a:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <carsRed_t>
     11e:	21 e0       	ldi	r18, 0x01	; 1
     120:	43 2f       	mov	r20, r19
     122:	69 2f       	mov	r22, r25
     124:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				break;			
     128:	00 00       	nop
			default:
				break;				
		}
		
		/*go to the next led*/
		local_u32ArrIndex = (local_u32ArrIndex+1) % 4;
     12a:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <local_u32ArrIndex>
     12e:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <local_u32ArrIndex+0x1>
     132:	a0 91 6d 00 	lds	r26, 0x006D	; 0x80006d <local_u32ArrIndex+0x2>
     136:	b0 91 6e 00 	lds	r27, 0x006E	; 0x80006e <local_u32ArrIndex+0x3>
     13a:	01 96       	adiw	r24, 0x01	; 1
     13c:	a1 1d       	adc	r26, r1
     13e:	b1 1d       	adc	r27, r1
     140:	83 70       	andi	r24, 0x03	; 3
     142:	99 27       	eor	r25, r25
     144:	aa 27       	eor	r26, r26
     146:	bb 27       	eor	r27, r27
     148:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <local_u32ArrIndex>
     14c:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <local_u32ArrIndex+0x1>
     150:	a0 93 6d 00 	sts	0x006D, r26	; 0x80006d <local_u32ArrIndex+0x2>
     154:	b0 93 6e 00 	sts	0x006E, r27	; 0x80006e <local_u32ArrIndex+0x3>

		global_u8ActiveLed = global_u8ArrTurns[local_u32ArrIndex];
     158:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <local_u32ArrIndex>
     15c:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <local_u32ArrIndex+0x1>
     160:	a0 91 6d 00 	lds	r26, 0x006D	; 0x80006d <local_u32ArrIndex+0x2>
     164:	b0 91 6e 00 	lds	r27, 0x006E	; 0x80006e <local_u32ArrIndex+0x3>
     168:	8c 59       	subi	r24, 0x9C	; 156
     16a:	9f 4f       	sbci	r25, 0xFF	; 255
     16c:	fc 01       	movw	r30, r24
     16e:	80 81       	ld	r24, Z
     170:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <global_u8ActiveLed>

		/*turn on the next led*/
		switch(global_u8ActiveLed)
     174:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <global_u8ActiveLed>
     178:	88 2f       	mov	r24, r24
     17a:	90 e0       	ldi	r25, 0x00	; 0
     17c:	81 30       	cpi	r24, 0x01	; 1
     17e:	91 05       	cpc	r25, r1
     180:	41 f1       	breq	.+80     	; 0x1d2 <checkIfToSwitchToNextLed+0x140>
     182:	82 30       	cpi	r24, 0x02	; 2
     184:	91 05       	cpc	r25, r1
     186:	89 f1       	breq	.+98     	; 0x1ea <checkIfToSwitchToNextLed+0x158>
     188:	89 2b       	or	r24, r25
     18a:	09 f0       	breq	.+2      	; 0x18e <checkIfToSwitchToNextLed+0xfc>
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_ON);
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_OFF);
				break;
					
			default:
				break;
     18c:	50 c0       	rjmp	.+160    	; 0x22e <checkIfToSwitchToNextLed+0x19c>

		/*turn on the next led*/
		switch(global_u8ActiveLed)
		{
			case CAR_GREEN_LED:
				led_Write(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber, carsGreen_t.args_u8LedType, LED_STATE_ON);
     18e:	30 91 98 00 	lds	r19, 0x0098	; 0x800098 <carsGreen_t+0x2>
     192:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <carsGreen_t+0x1>
     196:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <carsGreen_t>
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	43 2f       	mov	r20, r19
     19e:	69 2f       	mov	r22, r25
     1a0:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_ON);
     1a4:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     1a8:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     1ac:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	43 2f       	mov	r20, r19
     1b4:	69 2f       	mov	r22, r25
     1b6:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_OFF);
     1ba:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     1be:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     1c2:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     1c6:	21 e0       	ldi	r18, 0x01	; 1
     1c8:	43 2f       	mov	r20, r19
     1ca:	69 2f       	mov	r22, r25
     1cc:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				break;
     1d0:	2e c0       	rjmp	.+92     	; 0x22e <checkIfToSwitchToNextLed+0x19c>

			case CAR_YELLOW_LED:
				led_Write(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber, carsYellow_t.args_u8LedType, LED_STATE_ON);
     1d2:	30 91 94 00 	lds	r19, 0x0094	; 0x800094 <carsYellow_t+0x2>
     1d6:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     1da:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	43 2f       	mov	r20, r19
     1e2:	69 2f       	mov	r22, r25
     1e4:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				break;
     1e8:	22 c0       	rjmp	.+68     	; 0x22e <checkIfToSwitchToNextLed+0x19c>
					
			case CAR_RED_LED:
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
     1ea:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <carsRed_t+0x2>
     1ee:	90 91 86 00 	lds	r25, 0x0086	; 0x800086 <carsRed_t+0x1>
     1f2:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <carsRed_t>
     1f6:	20 e0       	ldi	r18, 0x00	; 0
     1f8:	43 2f       	mov	r20, r19
     1fa:	69 2f       	mov	r22, r25
     1fc:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_ON);
     200:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     204:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     208:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	43 2f       	mov	r20, r19
     210:	69 2f       	mov	r22, r25
     212:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_OFF);
     216:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     21a:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     21e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     222:	21 e0       	ldi	r18, 0x01	; 1
     224:	43 2f       	mov	r20, r19
     226:	69 2f       	mov	r22, r25
     228:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				break;
     22c:	00 00       	nop
					
			default:
				break;
		}
	}
}
     22e:	00 00       	nop
     230:	df 91       	pop	r29
     232:	cf 91       	pop	r28
     234:	08 95       	ret

00000236 <padestrianModeLedPateern>:


void padestrianModeLedPateern(void)
{
     236:	cf 93       	push	r28
     238:	df 93       	push	r29
     23a:	cd b7       	in	r28, 0x3d	; 61
     23c:	de b7       	in	r29, 0x3e	; 62
	static uint8_t local_u8Count = 0;

	/*increase the time by 1*/
	local_u8Count++;
     23e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     242:	8f 5f       	subi	r24, 0xFF	; 255
     244:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <local_u8Count.1734>

	/*check the active led*/
	switch(global_u8ActiveLed)
     248:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <global_u8ActiveLed>
     24c:	88 2f       	mov	r24, r24
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	99 23       	and	r25, r25
     252:	0c f4       	brge	.+2      	; 0x256 <padestrianModeLedPateern+0x20>
     254:	6e c1       	rjmp	.+732    	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
     256:	82 30       	cpi	r24, 0x02	; 2
     258:	91 05       	cpc	r25, r1
     25a:	24 f0       	brlt	.+8      	; 0x264 <padestrianModeLedPateern+0x2e>
     25c:	02 97       	sbiw	r24, 0x02	; 2
     25e:	09 f4       	brne	.+2      	; 0x262 <padestrianModeLedPateern+0x2c>
     260:	dc c0       	rjmp	.+440    	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     262:	67 c1       	rjmp	.+718    	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
		case CAR_GREEN_LED:
		case CAR_YELLOW_LED:
		{	

			/*turn on the pedestrian red led*/
			if(local_u8Count == 0)
     264:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     268:	88 23       	and	r24, r24
     26a:	61 f4       	brne	.+24     	; 0x284 <padestrianModeLedPateern+0x4e>
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_ON);
     26c:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     270:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     274:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	43 2f       	mov	r20, r19
     27c:	69 2f       	mov	r22, r25
     27e:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
	
				global_u8Mode = APP_MODE_NORM;

				local_u8Count = 0;
			}
			break;
     282:	5a c1       	rjmp	.+692    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>

			/*turn on the pedestrian red led*/
			if(local_u8Count == 0)
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_ON);
			/*turn off all leds*/
			else if(local_u8Count == 5)
     284:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     288:	85 30       	cpi	r24, 0x05	; 5
     28a:	b9 f4       	brne	.+46     	; 0x2ba <padestrianModeLedPateern+0x84>
			{
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_OFF);
     28c:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     290:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     294:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     298:	21 e0       	ldi	r18, 0x01	; 1
     29a:	43 2f       	mov	r20, r19
     29c:	69 2f       	mov	r22, r25
     29e:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber, carsGreen_t.args_u8LedType, LED_STATE_OFF);
     2a2:	30 91 98 00 	lds	r19, 0x0098	; 0x800098 <carsGreen_t+0x2>
     2a6:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <carsGreen_t+0x1>
     2aa:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <carsGreen_t>
     2ae:	21 e0       	ldi	r18, 0x01	; 1
     2b0:	43 2f       	mov	r20, r19
     2b2:	69 2f       	mov	r22, r25
     2b4:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
	
				global_u8Mode = APP_MODE_NORM;

				local_u8Count = 0;
			}
			break;
     2b8:	3f c1       	rjmp	.+638    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
			{
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_OFF);
				led_Write(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber, carsGreen_t.args_u8LedType, LED_STATE_OFF);
			}
			/*blink the yellow leds*/
			else if(local_u8Count >= 5 && local_u8Count < 10)
     2ba:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     2be:	85 30       	cpi	r24, 0x05	; 5
     2c0:	98 f0       	brcs	.+38     	; 0x2e8 <padestrianModeLedPateern+0xb2>
     2c2:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     2c6:	8a 30       	cpi	r24, 0x0A	; 10
     2c8:	78 f4       	brcc	.+30     	; 0x2e8 <padestrianModeLedPateern+0xb2>
			{
				led_Toggle(peopleYellow_t.args_u8PortNumber, peopleYellow_t.args_u8PinNumber);
     2ca:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <peopleYellow_t+0x1>
     2ce:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <peopleYellow_t>
     2d2:	69 2f       	mov	r22, r25
     2d4:	0e 94 8a 05 	call	0xb14	; 0xb14 <led_Toggle>
				led_Toggle(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber);
     2d8:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     2dc:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     2e0:	69 2f       	mov	r22, r25
     2e2:	0e 94 8a 05 	call	0xb14	; 0xb14 <led_Toggle>
     2e6:	98 c0       	rjmp	.+304    	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
			}
			/*turn off all yellow leds*/
			else if(local_u8Count == 10)
     2e8:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     2ec:	8a 30       	cpi	r24, 0x0A	; 10
     2ee:	69 f5       	brne	.+90     	; 0x34a <padestrianModeLedPateern+0x114>
			{
				led_Write(peopleYellow_t.args_u8PortNumber, peopleYellow_t.args_u8PinNumber, peopleYellow_t.args_u8LedType, LED_STATE_OFF);
     2f0:	30 91 7f 00 	lds	r19, 0x007F	; 0x80007f <peopleYellow_t+0x2>
     2f4:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <peopleYellow_t+0x1>
     2f8:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <peopleYellow_t>
     2fc:	21 e0       	ldi	r18, 0x01	; 1
     2fe:	43 2f       	mov	r20, r19
     300:	69 2f       	mov	r22, r25
     302:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber, carsYellow_t.args_u8LedType, LED_STATE_OFF);
     306:	30 91 94 00 	lds	r19, 0x0094	; 0x800094 <carsYellow_t+0x2>
     30a:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     30e:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     312:	21 e0       	ldi	r18, 0x01	; 1
     314:	43 2f       	mov	r20, r19
     316:	69 2f       	mov	r22, r25
     318:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_ON);
     31c:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     320:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     324:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     328:	20 e0       	ldi	r18, 0x00	; 0
     32a:	43 2f       	mov	r20, r19
     32c:	69 2f       	mov	r22, r25
     32e:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
     332:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <carsRed_t+0x2>
     336:	90 91 86 00 	lds	r25, 0x0086	; 0x800086 <carsRed_t+0x1>
     33a:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <carsRed_t>
     33e:	20 e0       	ldi	r18, 0x00	; 0
     340:	43 2f       	mov	r20, r19
     342:	69 2f       	mov	r22, r25
     344:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
	
				global_u8Mode = APP_MODE_NORM;

				local_u8Count = 0;
			}
			break;
     348:	f7 c0       	rjmp	.+494    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
				led_Write(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber, carsYellow_t.args_u8LedType, LED_STATE_OFF);
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_ON);
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
			}
			/*turn of red led*/
			else if(local_u8Count == 15)
     34a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     34e:	8f 30       	cpi	r24, 0x0F	; 15
     350:	b9 f4       	brne	.+46     	; 0x380 <padestrianModeLedPateern+0x14a>
			{
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_OFF);
     352:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     356:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     35a:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     35e:	21 e0       	ldi	r18, 0x01	; 1
     360:	43 2f       	mov	r20, r19
     362:	69 2f       	mov	r22, r25
     364:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_OFF);
     368:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <carsRed_t+0x2>
     36c:	90 91 86 00 	lds	r25, 0x0086	; 0x800086 <carsRed_t+0x1>
     370:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <carsRed_t>
     374:	21 e0       	ldi	r18, 0x01	; 1
     376:	43 2f       	mov	r20, r19
     378:	69 2f       	mov	r22, r25
     37a:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
	
				global_u8Mode = APP_MODE_NORM;

				local_u8Count = 0;
			}
			break;
     37e:	dc c0       	rjmp	.+440    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
			{
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_OFF);
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_OFF);
			}
			/*toggle the yellow leds of the car*/
			else if(local_u8Count >= 15 && local_u8Count < 20)
     380:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     384:	8f 30       	cpi	r24, 0x0F	; 15
     386:	98 f0       	brcs	.+38     	; 0x3ae <padestrianModeLedPateern+0x178>
     388:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     38c:	84 31       	cpi	r24, 0x14	; 20
     38e:	78 f4       	brcc	.+30     	; 0x3ae <padestrianModeLedPateern+0x178>
			{
				led_Toggle(peopleYellow_t.args_u8PortNumber, peopleYellow_t.args_u8PinNumber);
     390:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <peopleYellow_t+0x1>
     394:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <peopleYellow_t>
     398:	69 2f       	mov	r22, r25
     39a:	0e 94 8a 05 	call	0xb14	; 0xb14 <led_Toggle>
				led_Toggle(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber);
     39e:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     3a2:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     3a6:	69 2f       	mov	r22, r25
     3a8:	0e 94 8a 05 	call	0xb14	; 0xb14 <led_Toggle>
     3ac:	35 c0       	rjmp	.+106    	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
			}
			/*go back to normal mode*/
			else if(local_u8Count == 20)
     3ae:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     3b2:	84 31       	cpi	r24, 0x14	; 20
     3b4:	09 f0       	breq	.+2      	; 0x3b8 <padestrianModeLedPateern+0x182>
     3b6:	c0 c0       	rjmp	.+384    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
			{
				global_u8ActiveLed = CAR_GREEN_LED;
     3b8:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <global_u8ActiveLed>
				local_u32ArrIndex = 0;
     3bc:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <local_u32ArrIndex>
     3c0:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <local_u32ArrIndex+0x1>
     3c4:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <local_u32ArrIndex+0x2>
     3c8:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <local_u32ArrIndex+0x3>

				/*go back to normal mode*/
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_OFF);
     3cc:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     3d0:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     3d4:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     3d8:	21 e0       	ldi	r18, 0x01	; 1
     3da:	43 2f       	mov	r20, r19
     3dc:	69 2f       	mov	r22, r25
     3de:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_ON);
     3e2:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     3e6:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     3ea:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	43 2f       	mov	r20, r19
     3f2:	69 2f       	mov	r22, r25
     3f4:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber, carsGreen_t.args_u8LedType, LED_STATE_ON);
     3f8:	30 91 98 00 	lds	r19, 0x0098	; 0x800098 <carsGreen_t+0x2>
     3fc:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <carsGreen_t+0x1>
     400:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <carsGreen_t>
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	43 2f       	mov	r20, r19
     408:	69 2f       	mov	r22, r25
     40a:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
	
				global_u8Mode = APP_MODE_NORM;
     40e:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end>

				local_u8Count = 0;
     412:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <local_u8Count.1734>
			}
			break;
     416:	90 c0       	rjmp	.+288    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
     418:	8f c0       	rjmp	.+286    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
		}
		case CAR_RED_LED:
		{	
			/*the pedestrian's Green LED and the cars' Red LEDs will be on for five seconds*/
			if(local_u8Count == 1)
     41a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     41e:	81 30       	cpi	r24, 0x01	; 1
     420:	11 f5       	brne	.+68     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
			{	
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_OFF);
     422:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     426:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     42a:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     42e:	21 e0       	ldi	r18, 0x01	; 1
     430:	43 2f       	mov	r20, r19
     432:	69 2f       	mov	r22, r25
     434:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_ON);
     438:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     43c:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     440:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     444:	20 e0       	ldi	r18, 0x00	; 0
     446:	43 2f       	mov	r20, r19
     448:	69 2f       	mov	r22, r25
     44a:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
     44e:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <carsRed_t+0x2>
     452:	90 91 86 00 	lds	r25, 0x0086	; 0x800086 <carsRed_t+0x1>
     456:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <carsRed_t>
     45a:	20 e0       	ldi	r18, 0x00	; 0
     45c:	43 2f       	mov	r20, r19
     45e:	69 2f       	mov	r22, r25
     460:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>

				local_u8Count = 0;
			}

			//led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
			break;
     464:	6b c0       	rjmp	.+214    	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
			{	
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_OFF);
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_ON);
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
			}
			else if(local_u8Count == 5)
     466:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     46a:	85 30       	cpi	r24, 0x05	; 5
     46c:	b9 f4       	brne	.+46     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
			{
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_OFF);
     46e:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     472:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     476:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     47a:	21 e0       	ldi	r18, 0x01	; 1
     47c:	43 2f       	mov	r20, r19
     47e:	69 2f       	mov	r22, r25
     480:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_OFF);
     484:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <carsRed_t+0x2>
     488:	90 91 86 00 	lds	r25, 0x0086	; 0x800086 <carsRed_t+0x1>
     48c:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <carsRed_t>
     490:	21 e0       	ldi	r18, 0x01	; 1
     492:	43 2f       	mov	r20, r19
     494:	69 2f       	mov	r22, r25
     496:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>

				local_u8Count = 0;
			}

			//led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
			break;
     49a:	50 c0       	rjmp	.+160    	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
			{
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_OFF);
				led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_OFF);
			}
			/*toggle the yellow leds of the car*/
			else if(local_u8Count >= 5 && local_u8Count < 10)
     49c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     4a0:	85 30       	cpi	r24, 0x05	; 5
     4a2:	98 f0       	brcs	.+38     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
     4a4:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     4a8:	8a 30       	cpi	r24, 0x0A	; 10
     4aa:	78 f4       	brcc	.+30     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
			{
				led_Toggle(peopleYellow_t.args_u8PortNumber, peopleYellow_t.args_u8PinNumber);
     4ac:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <peopleYellow_t+0x1>
     4b0:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <peopleYellow_t>
     4b4:	69 2f       	mov	r22, r25
     4b6:	0e 94 8a 05 	call	0xb14	; 0xb14 <led_Toggle>
				led_Toggle(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber);
     4ba:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     4be:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     4c2:	69 2f       	mov	r22, r25
     4c4:	0e 94 8a 05 	call	0xb14	; 0xb14 <led_Toggle>

				local_u8Count = 0;
			}

			//led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
			break;
     4c8:	39 c0       	rjmp	.+114    	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
			{
				led_Toggle(peopleYellow_t.args_u8PortNumber, peopleYellow_t.args_u8PinNumber);
				led_Toggle(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber);
			}
			/*go back to normal mode*/
			else if(local_u8Count == 10)
     4ca:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <local_u8Count.1734>
     4ce:	8a 30       	cpi	r24, 0x0A	; 10
     4d0:	a9 f5       	brne	.+106    	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
			{
				global_u8ActiveLed = CAR_GREEN_LED;
     4d2:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <global_u8ActiveLed>
				local_u32ArrIndex = 0;
     4d6:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <local_u32ArrIndex>
     4da:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <local_u32ArrIndex+0x1>
     4de:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <local_u32ArrIndex+0x2>
     4e2:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <local_u32ArrIndex+0x3>

				/*go back to normal mode*/
				led_Write(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber, peopleGreen_t.args_u8LedType, LED_STATE_OFF);
     4e6:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <peopleGreen_t+0x2>
     4ea:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     4ee:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     4f2:	21 e0       	ldi	r18, 0x01	; 1
     4f4:	43 2f       	mov	r20, r19
     4f6:	69 2f       	mov	r22, r25
     4f8:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_ON);
     4fc:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     500:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     504:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     508:	20 e0       	ldi	r18, 0x00	; 0
     50a:	43 2f       	mov	r20, r19
     50c:	69 2f       	mov	r22, r25
     50e:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				led_Write(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber, carsGreen_t.args_u8LedType, LED_STATE_ON);
     512:	30 91 98 00 	lds	r19, 0x0098	; 0x800098 <carsGreen_t+0x2>
     516:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <carsGreen_t+0x1>
     51a:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <carsGreen_t>
     51e:	20 e0       	ldi	r18, 0x00	; 0
     520:	43 2f       	mov	r20, r19
     522:	69 2f       	mov	r22, r25
     524:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
				
				global_u8Mode = APP_MODE_NORM;
     528:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end>

				local_u8Count = 0;
     52c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <local_u8Count.1734>
			}

			//led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
			break;
     530:	05 c0       	rjmp	.+10     	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
		}
				
		default:
			/*go back to normal mode*/
			global_u8Mode = APP_MODE_NORM;
     532:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end>
			break;
     536:	03 c0       	rjmp	.+6      	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
	
				global_u8Mode = APP_MODE_NORM;

				local_u8Count = 0;
			}
			break;
     538:	00 00       	nop
     53a:	01 c0       	rjmp	.+2      	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>

				local_u8Count = 0;
			}

			//led_Write(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber, carsRed_t.args_u8LedType, LED_STATE_ON);
			break;
     53c:	00 00       	nop
			global_u8Mode = APP_MODE_NORM;
			break;
	}	


}
     53e:	00 00       	nop
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	08 95       	ret

00000546 <timerOverFlowCallBack>:

 void timerOverFlowCallBack(void)
 {
     546:	cf 93       	push	r28
     548:	df 93       	push	r29
     54a:	cd b7       	in	r28, 0x3d	; 61
     54c:	de b7       	in	r29, 0x3e	; 62
	/*increment number of seconds*/
	global_u32Seconds++;
     54e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     552:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     556:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     55a:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     55e:	01 96       	adiw	r24, 0x01	; 1
     560:	a1 1d       	adc	r26, r1
     562:	b1 1d       	adc	r27, r1
     564:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     568:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     56c:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     570:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>

	/*check if we are in normal mode or not*/
	if (global_u8Mode == APP_MODE_NORM)
     574:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
     578:	88 23       	and	r24, r24
     57a:	71 f4       	brne	.+28     	; 0x598 <timerOverFlowCallBack+0x52>
	{
		/*the yellow led will always blink*/
		if (global_u8ActiveLed == CAR_YELLOW_LED)
     57c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <global_u8ActiveLed>
     580:	81 30       	cpi	r24, 0x01	; 1
     582:	39 f4       	brne	.+14     	; 0x592 <timerOverFlowCallBack+0x4c>
		{
			led_Toggle(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber);
     584:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     588:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     58c:	69 2f       	mov	r22, r25
     58e:	0e 94 8a 05 	call	0xb14	; 0xb14 <led_Toggle>
		}

		/*check if we to switch to the next led or not*/
		checkIfToSwitchToNextLed();
     592:	0e 94 49 00 	call	0x92	; 0x92 <checkIfToSwitchToNextLed>
	/*go back to normal mode*/
	else
	{
		global_u8Mode = APP_MODE_NORM;
	}
 }
     596:	24 c0       	rjmp	.+72     	; 0x5e0 <timerOverFlowCallBack+0x9a>
		/*check if we to switch to the next led or not*/
		checkIfToSwitchToNextLed();
	
	}
	/*check if we are in pedestrian mode or not*/
	else if(global_u8Mode == APP_MODE_PAD)
     598:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
     59c:	81 30       	cpi	r24, 0x01	; 1
     59e:	f1 f4       	brne	.+60     	; 0x5dc <timerOverFlowCallBack+0x96>
	{
		/*check if the button is still pressed then it's a long press*/
		if (global_u8CheckForLongPress == 0)
     5a0:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <global_u8CheckForLongPress>
     5a4:	88 23       	and	r24, r24
     5a6:	71 f4       	brne	.+28     	; 0x5c4 <timerOverFlowCallBack+0x7e>
		{
			button_read(userButton_t.args_u8PortNumber, userButton_t.args_u8PinNumber, (uint8_t*)&userButton_t.args_u8Input, userButton_t.args_u8ButtonType);
     5a8:	20 91 91 00 	lds	r18, 0x0091	; 0x800091 <userButton_t+0x8>
     5ac:	90 91 8a 00 	lds	r25, 0x008A	; 0x80008a <userButton_t+0x1>
     5b0:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <userButton_t>
     5b4:	40 e9       	ldi	r20, 0x90	; 144
     5b6:	50 e0       	ldi	r21, 0x00	; 0
     5b8:	69 2f       	mov	r22, r25
     5ba:	0e 94 ba 04 	call	0x974	; 0x974 <button_read>
			global_u8CheckForLongPress = 1;
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <global_u8CheckForLongPress>
		}

		if(userButton_t.args_u8Input == BUTTON_STATE_PRESSED)
     5c4:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <userButton_t+0x7>
     5c8:	88 23       	and	r24, r24
     5ca:	29 f4       	brne	.+10     	; 0x5d6 <timerOverFlowCallBack+0x90>
		{
			/*go back to normal mode*/
			global_u8Mode = APP_MODE_NORM;
     5cc:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end>

			global_u8CheckForLongPress = 0;
     5d0:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <global_u8CheckForLongPress>
	/*go back to normal mode*/
	else
	{
		global_u8Mode = APP_MODE_NORM;
	}
 }
     5d4:	05 c0       	rjmp	.+10     	; 0x5e0 <timerOverFlowCallBack+0x9a>

		}
		else
		{
			/*switch to pedestrian mode*/
			padestrianModeLedPateern();
     5d6:	0e 94 1b 01 	call	0x236	; 0x236 <padestrianModeLedPateern>
	/*go back to normal mode*/
	else
	{
		global_u8Mode = APP_MODE_NORM;
	}
 }
     5da:	02 c0       	rjmp	.+4      	; 0x5e0 <timerOverFlowCallBack+0x9a>
		}
	}
	/*go back to normal mode*/
	else
	{
		global_u8Mode = APP_MODE_NORM;
     5dc:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end>
	}
 }
     5e0:	00 00       	nop
     5e2:	df 91       	pop	r29
     5e4:	cf 91       	pop	r28
     5e6:	08 95       	ret

000005e8 <INT0CallBack>:

void INT0CallBack(void)
{
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	00 d0       	rcall	.+0      	; 0x5ee <INT0CallBack+0x6>
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62
	/*software delay for button debouncing*/
	for(int i = 0; i < 5000; i++);
     5f2:	1a 82       	std	Y+2, r1	; 0x02
     5f4:	19 82       	std	Y+1, r1	; 0x01
     5f6:	05 c0       	rjmp	.+10     	; 0x602 <INT0CallBack+0x1a>
     5f8:	89 81       	ldd	r24, Y+1	; 0x01
     5fa:	9a 81       	ldd	r25, Y+2	; 0x02
     5fc:	01 96       	adiw	r24, 0x01	; 1
     5fe:	9a 83       	std	Y+2, r25	; 0x02
     600:	89 83       	std	Y+1, r24	; 0x01
     602:	89 81       	ldd	r24, Y+1	; 0x01
     604:	9a 81       	ldd	r25, Y+2	; 0x02
     606:	88 38       	cpi	r24, 0x88	; 136
     608:	93 41       	sbci	r25, 0x13	; 19
     60a:	b4 f3       	brlt	.-20     	; 0x5f8 <INT0CallBack+0x10>

	/*if user is in pedestrian mode then we switch to pedestrian mode*/
	if(global_u8Mode == APP_MODE_NORM && global_u8ActiveLed != CAR_RED_LED)
     60c:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
     610:	88 23       	and	r24, r24
     612:	39 f4       	brne	.+14     	; 0x622 <INT0CallBack+0x3a>
     614:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <global_u8ActiveLed>
     618:	82 30       	cpi	r24, 0x02	; 2
     61a:	19 f0       	breq	.+6      	; 0x622 <INT0CallBack+0x3a>
	{
		global_u8Mode = APP_MODE_PAD;
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__data_end>
	}

}
     622:	00 00       	nop
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <appSetup>:

 void appSetup()
 {
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
     632:	cd b7       	in	r28, 0x3d	; 61
     634:	de b7       	in	r29, 0x3e	; 62
	/*setup Leds Type*/
	carsGreen_t.args_u8LedType = LED_TYPE_ANODE;
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <carsGreen_t+0x2>
	carsYellow_t.args_u8LedType = LED_TYPE_ANODE;
     63c:	81 e0       	ldi	r24, 0x01	; 1
     63e:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <carsYellow_t+0x2>
	carsRed_t.args_u8LedType = LED_TYPE_ANODE;
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <carsRed_t+0x2>

	peopleGreen_t.args_u8LedType = LED_TYPE_ANODE;
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <peopleGreen_t+0x2>
	peopleYellow_t.args_u8LedType = LED_TYPE_ANODE;
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <peopleYellow_t+0x2>
	peopleRed_t.args_u8LedType = LED_TYPE_ANODE;
     654:	81 e0       	ldi	r24, 0x01	; 1
     656:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <peopleRed_t+0x2>

	/*setup Leds port Number*/
	carsGreen_t.args_u8PortNumber = GPIO_PORTA;
     65a:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <carsGreen_t>
	carsYellow_t.args_u8PortNumber = GPIO_PORTA;
     65e:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <carsYellow_t>
	carsRed_t.args_u8PortNumber = GPIO_PORTA;
     662:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <carsRed_t>

	peopleGreen_t.args_u8PortNumber = GPIO_PORTB;
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <peopleGreen_t>
	peopleYellow_t.args_u8PortNumber = GPIO_PORTB;
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <peopleYellow_t>
	peopleRed_t.args_u8PortNumber = GPIO_PORTB;
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <peopleRed_t>

	/*setup Leds PinNumbers*/
	carsGreen_t.args_u8PinNumber = GPIO_PIN0;
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <carsGreen_t+0x1>
	carsYellow_t.args_u8PinNumber = GPIO_PIN1;
     67e:	82 e0       	ldi	r24, 0x02	; 2
     680:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <carsYellow_t+0x1>
	carsRed_t.args_u8PinNumber = GPIO_PIN2;
     684:	84 e0       	ldi	r24, 0x04	; 4
     686:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <carsRed_t+0x1>

	peopleGreen_t.args_u8PinNumber = GPIO_PIN0;
     68a:	81 e0       	ldi	r24, 0x01	; 1
     68c:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <peopleGreen_t+0x1>
	peopleYellow_t.args_u8PinNumber = GPIO_PIN1;
     690:	82 e0       	ldi	r24, 0x02	; 2
     692:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <peopleYellow_t+0x1>
	peopleRed_t.args_u8PinNumber = GPIO_PIN2;
     696:	84 e0       	ldi	r24, 0x04	; 4
     698:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <peopleRed_t+0x1>

	/*setup Leds init Values*/
	carsGreen_t.args_u8Value = LED_STATE_OFF;
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <carsGreen_t+0x3>
	carsYellow_t.args_u8Value = LED_STATE_OFF;
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <carsYellow_t+0x3>
	carsRed_t.args_u8Value = LED_STATE_OFF;
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <carsRed_t+0x3>

	peopleGreen_t.args_u8Value = LED_STATE_OFF;
     6ae:	81 e0       	ldi	r24, 0x01	; 1
     6b0:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <peopleGreen_t+0x3>
	peopleYellow_t.args_u8Value = LED_STATE_OFF;
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <peopleYellow_t+0x3>
	peopleRed_t.args_u8Value = LED_STATE_OFF;
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <peopleRed_t+0x3>

	/*setup button data*/
	userButton_t.args_u8PortNumber = GPIO_PORTD;
     6c0:	83 e0       	ldi	r24, 0x03	; 3
     6c2:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <userButton_t>
	userButton_t.args_u8PinNumber = GPIO_PIN2;
     6c6:	84 e0       	ldi	r24, 0x04	; 4
     6c8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <userButton_t+0x1>
	userButton_t.args_pvCallBack = INT0CallBack;
     6cc:	84 ef       	ldi	r24, 0xF4	; 244
     6ce:	92 e0       	ldi	r25, 0x02	; 2
     6d0:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <userButton_t+0x6>
     6d4:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <userButton_t+0x5>
	userButton_t.args_u8ButtonType = BUTTON_TYPE_PULL_UP;
     6d8:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <userButton_t+0x8>
	userButton_t.args_u8InternOrExternalRes = BUTTON_INTERNAL_PULL_UP;
     6dc:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <userButton_t+0x2>
	userButton_t.args_u8IntMode = GPIO_INT_MODE_FALL_EDGE;
     6e0:	82 e0       	ldi	r24, 0x02	; 2
     6e2:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <userButton_t+0x4>
	userButton_t.args_u8IntNum = GPIO_INT0;
     6e6:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <userButton_t+0x3>


	/*Setup timer0 initial data*/
	tim0_t.args_u32TimeInMilliSeconds = 1000;
     6ea:	88 ee       	ldi	r24, 0xE8	; 232
     6ec:	93 e0       	ldi	r25, 0x03	; 3
     6ee:	a0 e0       	ldi	r26, 0x00	; 0
     6f0:	b0 e0       	ldi	r27, 0x00	; 0
     6f2:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <tim0_t+0x2>
     6f6:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <tim0_t+0x3>
     6fa:	a0 93 9e 00 	sts	0x009E, r26	; 0x80009e <tim0_t+0x4>
     6fe:	b0 93 9f 00 	sts	0x009F, r27	; 0x80009f <tim0_t+0x5>
	tim0_t.args_pvCallBackFunc = timerOverFlowCallBack;
     702:	83 ea       	ldi	r24, 0xA3	; 163
     704:	92 e0       	ldi	r25, 0x02	; 2
     706:	90 93 a1 00 	sts	0x00A1, r25	; 0x8000a1 <tim0_t+0x7>
     70a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <tim0_t+0x6>


	/*initialize the all the Leds */
	led_init(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber);
     70e:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <carsGreen_t+0x1>
     712:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <carsGreen_t>
     716:	69 2f       	mov	r22, r25
     718:	0e 94 16 05 	call	0xa2c	; 0xa2c <led_init>
	led_init(carsYellow_t.args_u8PortNumber, carsYellow_t.args_u8PinNumber);
     71c:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <carsYellow_t+0x1>
     720:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <carsYellow_t>
     724:	69 2f       	mov	r22, r25
     726:	0e 94 16 05 	call	0xa2c	; 0xa2c <led_init>
	led_init(carsRed_t.args_u8PortNumber, carsRed_t.args_u8PinNumber);
     72a:	90 91 86 00 	lds	r25, 0x0086	; 0x800086 <carsRed_t+0x1>
     72e:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <carsRed_t>
     732:	69 2f       	mov	r22, r25
     734:	0e 94 16 05 	call	0xa2c	; 0xa2c <led_init>
	led_init(peopleGreen_t.args_u8PortNumber, peopleGreen_t.args_u8PinNumber);
     738:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <peopleGreen_t+0x1>
     73c:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <peopleGreen_t>
     740:	69 2f       	mov	r22, r25
     742:	0e 94 16 05 	call	0xa2c	; 0xa2c <led_init>
	led_init(peopleYellow_t.args_u8PortNumber, peopleYellow_t.args_u8PinNumber);
     746:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <peopleYellow_t+0x1>
     74a:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <peopleYellow_t>
     74e:	69 2f       	mov	r22, r25
     750:	0e 94 16 05 	call	0xa2c	; 0xa2c <led_init>
	led_init(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber);
     754:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     758:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     75c:	69 2f       	mov	r22, r25
     75e:	0e 94 16 05 	call	0xa2c	; 0xa2c <led_init>

	/*initialize the button*/
	button_init_IT(userButton_t.args_u8IntNum, userButton_t.args_u8IntMode, userButton_t.args_pvCallBack, userButton_t.args_u8InternOrExternalRes);
     762:	20 91 8b 00 	lds	r18, 0x008B	; 0x80008b <userButton_t+0x2>
     766:	80 91 8e 00 	lds	r24, 0x008E	; 0x80008e <userButton_t+0x5>
     76a:	90 91 8f 00 	lds	r25, 0x008F	; 0x80008f <userButton_t+0x6>
     76e:	60 91 8d 00 	lds	r22, 0x008D	; 0x80008d <userButton_t+0x4>
     772:	30 91 8c 00 	lds	r19, 0x008C	; 0x80008c <userButton_t+0x3>
     776:	ac 01       	movw	r20, r24
     778:	83 2f       	mov	r24, r19
     77a:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <button_init_IT>

	/*turn on the green led*/
	led_Write(carsGreen_t.args_u8PortNumber, carsGreen_t.args_u8PinNumber, carsGreen_t.args_u8LedType, LED_STATE_ON);
     77e:	30 91 98 00 	lds	r19, 0x0098	; 0x800098 <carsGreen_t+0x2>
     782:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <carsGreen_t+0x1>
     786:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <carsGreen_t>
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	43 2f       	mov	r20, r19
     78e:	69 2f       	mov	r22, r25
     790:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>
	/*people red led*/
	led_Write(peopleRed_t.args_u8PortNumber, peopleRed_t.args_u8PinNumber, peopleRed_t.args_u8LedType, LED_STATE_ON);
     794:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <peopleRed_t+0x2>
     798:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <peopleRed_t+0x1>
     79c:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <peopleRed_t>
     7a0:	20 e0       	ldi	r18, 0x00	; 0
     7a2:	43 2f       	mov	r20, r19
     7a4:	69 2f       	mov	r22, r25
     7a6:	0e 94 2c 05 	call	0xa58	; 0xa58 <led_Write>

	/*setup the timer interrupt to be called every 1 second*/
	timer0_InterruptEvery(tim0_t.args_u32TimeInMilliSeconds, tim0_t.args_pvCallBackFunc);
     7aa:	20 91 a0 00 	lds	r18, 0x00A0	; 0x8000a0 <tim0_t+0x6>
     7ae:	30 91 a1 00 	lds	r19, 0x00A1	; 0x8000a1 <tim0_t+0x7>
     7b2:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <tim0_t+0x2>
     7b6:	90 91 9d 00 	lds	r25, 0x009D	; 0x80009d <tim0_t+0x3>
     7ba:	a0 91 9e 00 	lds	r26, 0x009E	; 0x80009e <tim0_t+0x4>
     7be:	b0 91 9f 00 	lds	r27, 0x009F	; 0x80009f <tim0_t+0x5>
     7c2:	a9 01       	movw	r20, r18
     7c4:	bc 01       	movw	r22, r24
     7c6:	cd 01       	movw	r24, r26
     7c8:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <timer0_InterruptEvery>


 }
     7cc:	00 00       	nop
     7ce:	df 91       	pop	r29
     7d0:	cf 91       	pop	r28
     7d2:	08 95       	ret

000007d4 <appStart>:

 void __attribute__((noreturn)) appStart()
 {
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	cd b7       	in	r28, 0x3d	; 61
     7da:	de b7       	in	r29, 0x3e	; 62
	/*entering the sleep mode*/
	while(1){
		enterSleepMode(SM_IDLE);
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	0e 94 14 0a 	call	0x1428	; 0x1428 <enterSleepMode>
	};
     7e2:	fc cf       	rjmp	.-8      	; 0x7dc <appStart+0x8>

000007e4 <button_init_IT>:
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	00 d0       	rcall	.+0      	; 0x7ea <button_init_IT+0x6>
     7ea:	00 d0       	rcall	.+0      	; 0x7ec <button_init_IT+0x8>
     7ec:	00 d0       	rcall	.+0      	; 0x7ee <button_init_IT+0xa>
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
     7f2:	8a 83       	std	Y+2, r24	; 0x02
     7f4:	6b 83       	std	Y+3, r22	; 0x03
     7f6:	5d 83       	std	Y+5, r21	; 0x05
     7f8:	4c 83       	std	Y+4, r20	; 0x04
     7fa:	2e 83       	std	Y+6, r18	; 0x06
     7fc:	19 82       	std	Y+1, r1	; 0x01
     7fe:	8e 81       	ldd	r24, Y+6	; 0x06
     800:	82 30       	cpi	r24, 0x02	; 2
     802:	18 f0       	brcs	.+6      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	ab c0       	rjmp	.+342    	; 0x960 <__stack+0x101>
     80a:	8a 81       	ldd	r24, Y+2	; 0x02
     80c:	88 2f       	mov	r24, r24
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	81 30       	cpi	r24, 0x01	; 1
     812:	91 05       	cpc	r25, r1
     814:	d1 f1       	breq	.+116    	; 0x88a <__stack+0x2b>
     816:	82 30       	cpi	r24, 0x02	; 2
     818:	91 05       	cpc	r25, r1
     81a:	09 f4       	brne	.+2      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     81c:	68 c0       	rjmp	.+208    	; 0x8ee <__stack+0x8f>
     81e:	89 2b       	or	r24, r25
     820:	09 f0       	breq	.+2      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     822:	96 c0       	rjmp	.+300    	; 0x950 <__stack+0xf1>
     824:	8e 81       	ldd	r24, Y+6	; 0x06
     826:	81 30       	cpi	r24, 0x01	; 1
     828:	19 f0       	breq	.+6      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     82a:	8e 81       	ldd	r24, Y+6	; 0x06
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	99 f4       	brne	.+38     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     830:	40 e0       	ldi	r20, 0x00	; 0
     832:	64 e0       	ldi	r22, 0x04	; 4
     834:	83 e0       	ldi	r24, 0x03	; 3
     836:	0e 94 a7 05 	call	0xb4e	; 0xb4e <GPIO_PinInit>
     83a:	88 23       	and	r24, r24
     83c:	49 f4       	brne	.+18     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
     83e:	8c 81       	ldd	r24, Y+4	; 0x04
     840:	9d 81       	ldd	r25, Y+5	; 0x05
     842:	ac 01       	movw	r20, r24
     844:	6b 81       	ldd	r22, Y+3	; 0x03
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	0e 94 c6 08 	call	0x118c	; 0x118c <GPIO_EnableExtInterrupt>
     84c:	88 23       	and	r24, r24
     84e:	d9 f0       	breq	.+54     	; 0x886 <__stack+0x27>
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	89 83       	std	Y+1, r24	; 0x01
     854:	18 c0       	rjmp	.+48     	; 0x886 <__stack+0x27>
     856:	8e 81       	ldd	r24, Y+6	; 0x06
     858:	88 23       	and	r24, r24
     85a:	09 f0       	breq	.+2      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     85c:	7c c0       	rjmp	.+248    	; 0x956 <__stack+0xf7>
     85e:	42 e0       	ldi	r20, 0x02	; 2
     860:	64 e0       	ldi	r22, 0x04	; 4
     862:	83 e0       	ldi	r24, 0x03	; 3
     864:	0e 94 a7 05 	call	0xb4e	; 0xb4e <GPIO_PinInit>
     868:	88 23       	and	r24, r24
     86a:	51 f4       	brne	.+20     	; 0x880 <__stack+0x21>
     86c:	8c 81       	ldd	r24, Y+4	; 0x04
     86e:	9d 81       	ldd	r25, Y+5	; 0x05
     870:	ac 01       	movw	r20, r24
     872:	6b 81       	ldd	r22, Y+3	; 0x03
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	0e 94 c6 08 	call	0x118c	; 0x118c <GPIO_EnableExtInterrupt>
     87a:	88 23       	and	r24, r24
     87c:	09 f4       	brne	.+2      	; 0x880 <__stack+0x21>
     87e:	6b c0       	rjmp	.+214    	; 0x956 <__stack+0xf7>
     880:	81 e0       	ldi	r24, 0x01	; 1
     882:	89 83       	std	Y+1, r24	; 0x01
     884:	68 c0       	rjmp	.+208    	; 0x956 <__stack+0xf7>
     886:	00 00       	nop
     888:	66 c0       	rjmp	.+204    	; 0x956 <__stack+0xf7>
     88a:	8e 81       	ldd	r24, Y+6	; 0x06
     88c:	81 30       	cpi	r24, 0x01	; 1
     88e:	19 f0       	breq	.+6      	; 0x896 <__stack+0x37>
     890:	8e 81       	ldd	r24, Y+6	; 0x06
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	99 f4       	brne	.+38     	; 0x8bc <__stack+0x5d>
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	68 e0       	ldi	r22, 0x08	; 8
     89a:	83 e0       	ldi	r24, 0x03	; 3
     89c:	0e 94 a7 05 	call	0xb4e	; 0xb4e <GPIO_PinInit>
     8a0:	88 23       	and	r24, r24
     8a2:	49 f4       	brne	.+18     	; 0x8b6 <__stack+0x57>
     8a4:	8c 81       	ldd	r24, Y+4	; 0x04
     8a6:	9d 81       	ldd	r25, Y+5	; 0x05
     8a8:	ac 01       	movw	r20, r24
     8aa:	6b 81       	ldd	r22, Y+3	; 0x03
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	0e 94 c6 08 	call	0x118c	; 0x118c <GPIO_EnableExtInterrupt>
     8b2:	88 23       	and	r24, r24
     8b4:	d1 f0       	breq	.+52     	; 0x8ea <__stack+0x8b>
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	89 83       	std	Y+1, r24	; 0x01
     8ba:	17 c0       	rjmp	.+46     	; 0x8ea <__stack+0x8b>
     8bc:	8e 81       	ldd	r24, Y+6	; 0x06
     8be:	88 23       	and	r24, r24
     8c0:	09 f0       	breq	.+2      	; 0x8c4 <__stack+0x65>
     8c2:	4b c0       	rjmp	.+150    	; 0x95a <__stack+0xfb>
     8c4:	42 e0       	ldi	r20, 0x02	; 2
     8c6:	68 e0       	ldi	r22, 0x08	; 8
     8c8:	83 e0       	ldi	r24, 0x03	; 3
     8ca:	0e 94 a7 05 	call	0xb4e	; 0xb4e <GPIO_PinInit>
     8ce:	88 23       	and	r24, r24
     8d0:	49 f4       	brne	.+18     	; 0x8e4 <__stack+0x85>
     8d2:	8c 81       	ldd	r24, Y+4	; 0x04
     8d4:	9d 81       	ldd	r25, Y+5	; 0x05
     8d6:	ac 01       	movw	r20, r24
     8d8:	6b 81       	ldd	r22, Y+3	; 0x03
     8da:	81 e0       	ldi	r24, 0x01	; 1
     8dc:	0e 94 c6 08 	call	0x118c	; 0x118c <GPIO_EnableExtInterrupt>
     8e0:	88 23       	and	r24, r24
     8e2:	d9 f1       	breq	.+118    	; 0x95a <__stack+0xfb>
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	89 83       	std	Y+1, r24	; 0x01
     8e8:	38 c0       	rjmp	.+112    	; 0x95a <__stack+0xfb>
     8ea:	00 00       	nop
     8ec:	36 c0       	rjmp	.+108    	; 0x95a <__stack+0xfb>
     8ee:	8e 81       	ldd	r24, Y+6	; 0x06
     8f0:	81 30       	cpi	r24, 0x01	; 1
     8f2:	19 f0       	breq	.+6      	; 0x8fa <__stack+0x9b>
     8f4:	8e 81       	ldd	r24, Y+6	; 0x06
     8f6:	82 30       	cpi	r24, 0x02	; 2
     8f8:	99 f4       	brne	.+38     	; 0x920 <__stack+0xc1>
     8fa:	40 e0       	ldi	r20, 0x00	; 0
     8fc:	64 e0       	ldi	r22, 0x04	; 4
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	0e 94 a7 05 	call	0xb4e	; 0xb4e <GPIO_PinInit>
     904:	88 23       	and	r24, r24
     906:	49 f4       	brne	.+18     	; 0x91a <__stack+0xbb>
     908:	8c 81       	ldd	r24, Y+4	; 0x04
     90a:	9d 81       	ldd	r25, Y+5	; 0x05
     90c:	ac 01       	movw	r20, r24
     90e:	6b 81       	ldd	r22, Y+3	; 0x03
     910:	82 e0       	ldi	r24, 0x02	; 2
     912:	0e 94 c6 08 	call	0x118c	; 0x118c <GPIO_EnableExtInterrupt>
     916:	88 23       	and	r24, r24
     918:	c9 f0       	breq	.+50     	; 0x94c <__stack+0xed>
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	89 83       	std	Y+1, r24	; 0x01
     91e:	16 c0       	rjmp	.+44     	; 0x94c <__stack+0xed>
     920:	8e 81       	ldd	r24, Y+6	; 0x06
     922:	88 23       	and	r24, r24
     924:	e1 f4       	brne	.+56     	; 0x95e <__stack+0xff>
     926:	42 e0       	ldi	r20, 0x02	; 2
     928:	64 e0       	ldi	r22, 0x04	; 4
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	0e 94 a7 05 	call	0xb4e	; 0xb4e <GPIO_PinInit>
     930:	88 23       	and	r24, r24
     932:	49 f4       	brne	.+18     	; 0x946 <__stack+0xe7>
     934:	8c 81       	ldd	r24, Y+4	; 0x04
     936:	9d 81       	ldd	r25, Y+5	; 0x05
     938:	ac 01       	movw	r20, r24
     93a:	6b 81       	ldd	r22, Y+3	; 0x03
     93c:	82 e0       	ldi	r24, 0x02	; 2
     93e:	0e 94 c6 08 	call	0x118c	; 0x118c <GPIO_EnableExtInterrupt>
     942:	88 23       	and	r24, r24
     944:	61 f0       	breq	.+24     	; 0x95e <__stack+0xff>
     946:	81 e0       	ldi	r24, 0x01	; 1
     948:	89 83       	std	Y+1, r24	; 0x01
     94a:	09 c0       	rjmp	.+18     	; 0x95e <__stack+0xff>
     94c:	00 00       	nop
     94e:	07 c0       	rjmp	.+14     	; 0x95e <__stack+0xff>
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	89 83       	std	Y+1, r24	; 0x01
     954:	05 c0       	rjmp	.+10     	; 0x960 <__stack+0x101>
     956:	00 00       	nop
     958:	03 c0       	rjmp	.+6      	; 0x960 <__stack+0x101>
     95a:	00 00       	nop
     95c:	01 c0       	rjmp	.+2      	; 0x960 <__stack+0x101>
     95e:	00 00       	nop
     960:	89 81       	ldd	r24, Y+1	; 0x01
     962:	26 96       	adiw	r28, 0x06	; 6
     964:	0f b6       	in	r0, 0x3f	; 63
     966:	f8 94       	cli
     968:	de bf       	out	0x3e, r29	; 62
     96a:	0f be       	out	0x3f, r0	; 63
     96c:	cd bf       	out	0x3d, r28	; 61
     96e:	df 91       	pop	r29
     970:	cf 91       	pop	r28
     972:	08 95       	ret

00000974 <button_read>:
     974:	cf 93       	push	r28
     976:	df 93       	push	r29
     978:	00 d0       	rcall	.+0      	; 0x97a <button_read+0x6>
     97a:	00 d0       	rcall	.+0      	; 0x97c <button_read+0x8>
     97c:	1f 92       	push	r1
     97e:	cd b7       	in	r28, 0x3d	; 61
     980:	de b7       	in	r29, 0x3e	; 62
     982:	89 83       	std	Y+1, r24	; 0x01
     984:	6a 83       	std	Y+2, r22	; 0x02
     986:	5c 83       	std	Y+4, r21	; 0x04
     988:	4b 83       	std	Y+3, r20	; 0x03
     98a:	2d 83       	std	Y+5, r18	; 0x05
     98c:	8b 81       	ldd	r24, Y+3	; 0x03
     98e:	9c 81       	ldd	r25, Y+4	; 0x04
     990:	ac 01       	movw	r20, r24
     992:	6a 81       	ldd	r22, Y+2	; 0x02
     994:	89 81       	ldd	r24, Y+1	; 0x01
     996:	0e 94 d7 07 	call	0xfae	; 0xfae <GPIO_PinRead>
     99a:	88 23       	and	r24, r24
     99c:	19 f4       	brne	.+6      	; 0x9a4 <button_read+0x30>
     99e:	8d 81       	ldd	r24, Y+5	; 0x05
     9a0:	82 30       	cpi	r24, 0x02	; 2
     9a2:	10 f0       	brcs	.+4      	; 0x9a8 <button_read+0x34>
     9a4:	81 e0       	ldi	r24, 0x01	; 1
     9a6:	3a c0       	rjmp	.+116    	; 0xa1c <button_read+0xa8>
     9a8:	8b 81       	ldd	r24, Y+3	; 0x03
     9aa:	9c 81       	ldd	r25, Y+4	; 0x04
     9ac:	fc 01       	movw	r30, r24
     9ae:	80 81       	ld	r24, Z
     9b0:	81 30       	cpi	r24, 0x01	; 1
     9b2:	49 f4       	brne	.+18     	; 0x9c6 <button_read+0x52>
     9b4:	8d 81       	ldd	r24, Y+5	; 0x05
     9b6:	88 23       	and	r24, r24
     9b8:	31 f4       	brne	.+12     	; 0x9c6 <button_read+0x52>
     9ba:	8b 81       	ldd	r24, Y+3	; 0x03
     9bc:	9c 81       	ldd	r25, Y+4	; 0x04
     9be:	21 e0       	ldi	r18, 0x01	; 1
     9c0:	fc 01       	movw	r30, r24
     9c2:	20 83       	st	Z, r18
     9c4:	2a c0       	rjmp	.+84     	; 0xa1a <button_read+0xa6>
     9c6:	8b 81       	ldd	r24, Y+3	; 0x03
     9c8:	9c 81       	ldd	r25, Y+4	; 0x04
     9ca:	fc 01       	movw	r30, r24
     9cc:	80 81       	ld	r24, Z
     9ce:	88 23       	and	r24, r24
     9d0:	41 f4       	brne	.+16     	; 0x9e2 <button_read+0x6e>
     9d2:	8d 81       	ldd	r24, Y+5	; 0x05
     9d4:	88 23       	and	r24, r24
     9d6:	29 f4       	brne	.+10     	; 0x9e2 <button_read+0x6e>
     9d8:	8b 81       	ldd	r24, Y+3	; 0x03
     9da:	9c 81       	ldd	r25, Y+4	; 0x04
     9dc:	fc 01       	movw	r30, r24
     9de:	10 82       	st	Z, r1
     9e0:	1c c0       	rjmp	.+56     	; 0xa1a <button_read+0xa6>
     9e2:	8b 81       	ldd	r24, Y+3	; 0x03
     9e4:	9c 81       	ldd	r25, Y+4	; 0x04
     9e6:	fc 01       	movw	r30, r24
     9e8:	80 81       	ld	r24, Z
     9ea:	81 30       	cpi	r24, 0x01	; 1
     9ec:	41 f4       	brne	.+16     	; 0x9fe <button_read+0x8a>
     9ee:	8d 81       	ldd	r24, Y+5	; 0x05
     9f0:	81 30       	cpi	r24, 0x01	; 1
     9f2:	29 f4       	brne	.+10     	; 0x9fe <button_read+0x8a>
     9f4:	8b 81       	ldd	r24, Y+3	; 0x03
     9f6:	9c 81       	ldd	r25, Y+4	; 0x04
     9f8:	fc 01       	movw	r30, r24
     9fa:	10 82       	st	Z, r1
     9fc:	0e c0       	rjmp	.+28     	; 0xa1a <button_read+0xa6>
     9fe:	8b 81       	ldd	r24, Y+3	; 0x03
     a00:	9c 81       	ldd	r25, Y+4	; 0x04
     a02:	fc 01       	movw	r30, r24
     a04:	80 81       	ld	r24, Z
     a06:	88 23       	and	r24, r24
     a08:	41 f4       	brne	.+16     	; 0xa1a <button_read+0xa6>
     a0a:	8d 81       	ldd	r24, Y+5	; 0x05
     a0c:	81 30       	cpi	r24, 0x01	; 1
     a0e:	29 f4       	brne	.+10     	; 0xa1a <button_read+0xa6>
     a10:	8b 81       	ldd	r24, Y+3	; 0x03
     a12:	9c 81       	ldd	r25, Y+4	; 0x04
     a14:	21 e0       	ldi	r18, 0x01	; 1
     a16:	fc 01       	movw	r30, r24
     a18:	20 83       	st	Z, r18
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	0f 90       	pop	r0
     a1e:	0f 90       	pop	r0
     a20:	0f 90       	pop	r0
     a22:	0f 90       	pop	r0
     a24:	0f 90       	pop	r0
     a26:	df 91       	pop	r29
     a28:	cf 91       	pop	r28
     a2a:	08 95       	ret

00000a2c <led_init>:
     a2c:	cf 93       	push	r28
     a2e:	df 93       	push	r29
     a30:	00 d0       	rcall	.+0      	; 0xa32 <led_init+0x6>
     a32:	cd b7       	in	r28, 0x3d	; 61
     a34:	de b7       	in	r29, 0x3e	; 62
     a36:	89 83       	std	Y+1, r24	; 0x01
     a38:	6a 83       	std	Y+2, r22	; 0x02
     a3a:	41 e0       	ldi	r20, 0x01	; 1
     a3c:	6a 81       	ldd	r22, Y+2	; 0x02
     a3e:	89 81       	ldd	r24, Y+1	; 0x01
     a40:	0e 94 a7 05 	call	0xb4e	; 0xb4e <GPIO_PinInit>
     a44:	88 23       	and	r24, r24
     a46:	11 f0       	breq	.+4      	; 0xa4c <led_init+0x20>
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	01 c0       	rjmp	.+2      	; 0xa4e <led_init+0x22>
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	0f 90       	pop	r0
     a50:	0f 90       	pop	r0
     a52:	df 91       	pop	r29
     a54:	cf 91       	pop	r28
     a56:	08 95       	ret

00000a58 <led_Write>:
     a58:	cf 93       	push	r28
     a5a:	df 93       	push	r29
     a5c:	00 d0       	rcall	.+0      	; 0xa5e <led_Write+0x6>
     a5e:	00 d0       	rcall	.+0      	; 0xa60 <led_Write+0x8>
     a60:	cd b7       	in	r28, 0x3d	; 61
     a62:	de b7       	in	r29, 0x3e	; 62
     a64:	89 83       	std	Y+1, r24	; 0x01
     a66:	6a 83       	std	Y+2, r22	; 0x02
     a68:	4b 83       	std	Y+3, r20	; 0x03
     a6a:	2c 83       	std	Y+4, r18	; 0x04
     a6c:	8b 81       	ldd	r24, Y+3	; 0x03
     a6e:	82 30       	cpi	r24, 0x02	; 2
     a70:	18 f4       	brcc	.+6      	; 0xa78 <led_Write+0x20>
     a72:	8c 81       	ldd	r24, Y+4	; 0x04
     a74:	82 30       	cpi	r24, 0x02	; 2
     a76:	10 f0       	brcs	.+4      	; 0xa7c <led_Write+0x24>
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	45 c0       	rjmp	.+138    	; 0xb06 <led_Write+0xae>
     a7c:	8b 81       	ldd	r24, Y+3	; 0x03
     a7e:	81 30       	cpi	r24, 0x01	; 1
     a80:	71 f4       	brne	.+28     	; 0xa9e <led_Write+0x46>
     a82:	8c 81       	ldd	r24, Y+4	; 0x04
     a84:	88 23       	and	r24, r24
     a86:	59 f4       	brne	.+22     	; 0xa9e <led_Write+0x46>
     a88:	41 e0       	ldi	r20, 0x01	; 1
     a8a:	6a 81       	ldd	r22, Y+2	; 0x02
     a8c:	89 81       	ldd	r24, Y+1	; 0x01
     a8e:	0e 94 24 07 	call	0xe48	; 0xe48 <GPIO_PinsWrite>
     a92:	88 23       	and	r24, r24
     a94:	11 f0       	breq	.+4      	; 0xa9a <led_Write+0x42>
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	36 c0       	rjmp	.+108    	; 0xb06 <led_Write+0xae>
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	34 c0       	rjmp	.+104    	; 0xb06 <led_Write+0xae>
     a9e:	8b 81       	ldd	r24, Y+3	; 0x03
     aa0:	81 30       	cpi	r24, 0x01	; 1
     aa2:	71 f4       	brne	.+28     	; 0xac0 <led_Write+0x68>
     aa4:	8c 81       	ldd	r24, Y+4	; 0x04
     aa6:	81 30       	cpi	r24, 0x01	; 1
     aa8:	59 f4       	brne	.+22     	; 0xac0 <led_Write+0x68>
     aaa:	40 e0       	ldi	r20, 0x00	; 0
     aac:	6a 81       	ldd	r22, Y+2	; 0x02
     aae:	89 81       	ldd	r24, Y+1	; 0x01
     ab0:	0e 94 24 07 	call	0xe48	; 0xe48 <GPIO_PinsWrite>
     ab4:	88 23       	and	r24, r24
     ab6:	11 f0       	breq	.+4      	; 0xabc <led_Write+0x64>
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	25 c0       	rjmp	.+74     	; 0xb06 <led_Write+0xae>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	23 c0       	rjmp	.+70     	; 0xb06 <led_Write+0xae>
     ac0:	8b 81       	ldd	r24, Y+3	; 0x03
     ac2:	88 23       	and	r24, r24
     ac4:	71 f4       	brne	.+28     	; 0xae2 <led_Write+0x8a>
     ac6:	8c 81       	ldd	r24, Y+4	; 0x04
     ac8:	88 23       	and	r24, r24
     aca:	59 f4       	brne	.+22     	; 0xae2 <led_Write+0x8a>
     acc:	40 e0       	ldi	r20, 0x00	; 0
     ace:	6a 81       	ldd	r22, Y+2	; 0x02
     ad0:	89 81       	ldd	r24, Y+1	; 0x01
     ad2:	0e 94 24 07 	call	0xe48	; 0xe48 <GPIO_PinsWrite>
     ad6:	88 23       	and	r24, r24
     ad8:	11 f0       	breq	.+4      	; 0xade <led_Write+0x86>
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	14 c0       	rjmp	.+40     	; 0xb06 <led_Write+0xae>
     ade:	80 e0       	ldi	r24, 0x00	; 0
     ae0:	12 c0       	rjmp	.+36     	; 0xb06 <led_Write+0xae>
     ae2:	8b 81       	ldd	r24, Y+3	; 0x03
     ae4:	88 23       	and	r24, r24
     ae6:	71 f4       	brne	.+28     	; 0xb04 <led_Write+0xac>
     ae8:	8c 81       	ldd	r24, Y+4	; 0x04
     aea:	81 30       	cpi	r24, 0x01	; 1
     aec:	59 f4       	brne	.+22     	; 0xb04 <led_Write+0xac>
     aee:	41 e0       	ldi	r20, 0x01	; 1
     af0:	6a 81       	ldd	r22, Y+2	; 0x02
     af2:	89 81       	ldd	r24, Y+1	; 0x01
     af4:	0e 94 24 07 	call	0xe48	; 0xe48 <GPIO_PinsWrite>
     af8:	88 23       	and	r24, r24
     afa:	11 f0       	breq	.+4      	; 0xb00 <led_Write+0xa8>
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	03 c0       	rjmp	.+6      	; 0xb06 <led_Write+0xae>
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	01 c0       	rjmp	.+2      	; 0xb06 <led_Write+0xae>
     b04:	81 e0       	ldi	r24, 0x01	; 1
     b06:	0f 90       	pop	r0
     b08:	0f 90       	pop	r0
     b0a:	0f 90       	pop	r0
     b0c:	0f 90       	pop	r0
     b0e:	df 91       	pop	r29
     b10:	cf 91       	pop	r28
     b12:	08 95       	ret

00000b14 <led_Toggle>:
     b14:	cf 93       	push	r28
     b16:	df 93       	push	r29
     b18:	00 d0       	rcall	.+0      	; 0xb1a <led_Toggle+0x6>
     b1a:	cd b7       	in	r28, 0x3d	; 61
     b1c:	de b7       	in	r29, 0x3e	; 62
     b1e:	89 83       	std	Y+1, r24	; 0x01
     b20:	6a 83       	std	Y+2, r22	; 0x02
     b22:	6a 81       	ldd	r22, Y+2	; 0x02
     b24:	89 81       	ldd	r24, Y+1	; 0x01
     b26:	0e 94 6f 08 	call	0x10de	; 0x10de <GPIO_PinsToggle>
     b2a:	88 23       	and	r24, r24
     b2c:	11 f0       	breq	.+4      	; 0xb32 <led_Toggle+0x1e>
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	01 c0       	rjmp	.+2      	; 0xb34 <led_Toggle+0x20>
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	0f 90       	pop	r0
     b36:	0f 90       	pop	r0
     b38:	df 91       	pop	r29
     b3a:	cf 91       	pop	r28
     b3c:	08 95       	ret

00000b3e <main>:
     b3e:	cf 93       	push	r28
     b40:	df 93       	push	r29
     b42:	cd b7       	in	r28, 0x3d	; 61
     b44:	de b7       	in	r29, 0x3e	; 62
     b46:	0e 94 17 03 	call	0x62e	; 0x62e <appSetup>
     b4a:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <appStart>

00000b4e <GPIO_PinInit>:
     b4e:	cf 93       	push	r28
     b50:	df 93       	push	r29
     b52:	00 d0       	rcall	.+0      	; 0xb54 <GPIO_PinInit+0x6>
     b54:	00 d0       	rcall	.+0      	; 0xb56 <GPIO_PinInit+0x8>
     b56:	cd b7       	in	r28, 0x3d	; 61
     b58:	de b7       	in	r29, 0x3e	; 62
     b5a:	8a 83       	std	Y+2, r24	; 0x02
     b5c:	6b 83       	std	Y+3, r22	; 0x03
     b5e:	4c 83       	std	Y+4, r20	; 0x04
     b60:	19 82       	std	Y+1, r1	; 0x01
     b62:	8a 81       	ldd	r24, Y+2	; 0x02
     b64:	84 30       	cpi	r24, 0x04	; 4
     b66:	18 f4       	brcc	.+6      	; 0xb6e <GPIO_PinInit+0x20>
     b68:	8c 81       	ldd	r24, Y+4	; 0x04
     b6a:	83 30       	cpi	r24, 0x03	; 3
     b6c:	18 f0       	brcs	.+6      	; 0xb74 <GPIO_PinInit+0x26>
     b6e:	81 e0       	ldi	r24, 0x01	; 1
     b70:	89 83       	std	Y+1, r24	; 0x01
     b72:	62 c1       	rjmp	.+708    	; 0xe38 <GPIO_PinInit+0x2ea>
     b74:	8a 81       	ldd	r24, Y+2	; 0x02
     b76:	88 2f       	mov	r24, r24
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	91 05       	cpc	r25, r1
     b7e:	09 f4       	brne	.+2      	; 0xb82 <GPIO_PinInit+0x34>
     b80:	5f c0       	rjmp	.+190    	; 0xc40 <GPIO_PinInit+0xf2>
     b82:	82 30       	cpi	r24, 0x02	; 2
     b84:	91 05       	cpc	r25, r1
     b86:	1c f4       	brge	.+6      	; 0xb8e <GPIO_PinInit+0x40>
     b88:	89 2b       	or	r24, r25
     b8a:	49 f0       	breq	.+18     	; 0xb9e <GPIO_PinInit+0x50>
     b8c:	4b c1       	rjmp	.+662    	; 0xe24 <GPIO_PinInit+0x2d6>
     b8e:	82 30       	cpi	r24, 0x02	; 2
     b90:	91 05       	cpc	r25, r1
     b92:	09 f4       	brne	.+2      	; 0xb96 <GPIO_PinInit+0x48>
     b94:	a6 c0       	rjmp	.+332    	; 0xce2 <GPIO_PinInit+0x194>
     b96:	03 97       	sbiw	r24, 0x03	; 3
     b98:	09 f4       	brne	.+2      	; 0xb9c <GPIO_PinInit+0x4e>
     b9a:	f4 c0       	rjmp	.+488    	; 0xd84 <GPIO_PinInit+0x236>
     b9c:	43 c1       	rjmp	.+646    	; 0xe24 <GPIO_PinInit+0x2d6>
     b9e:	8c 81       	ldd	r24, Y+4	; 0x04
     ba0:	88 23       	and	r24, r24
     ba2:	c9 f4       	brne	.+50     	; 0xbd6 <GPIO_PinInit+0x88>
     ba4:	8a e3       	ldi	r24, 0x3A	; 58
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	2a e3       	ldi	r18, 0x3A	; 58
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	f9 01       	movw	r30, r18
     bae:	20 81       	ld	r18, Z
     bb0:	32 2f       	mov	r19, r18
     bb2:	2b 81       	ldd	r18, Y+3	; 0x03
     bb4:	20 95       	com	r18
     bb6:	23 23       	and	r18, r19
     bb8:	fc 01       	movw	r30, r24
     bba:	20 83       	st	Z, r18
     bbc:	8b e3       	ldi	r24, 0x3B	; 59
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	2b e3       	ldi	r18, 0x3B	; 59
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	f9 01       	movw	r30, r18
     bc6:	20 81       	ld	r18, Z
     bc8:	32 2f       	mov	r19, r18
     bca:	2b 81       	ldd	r18, Y+3	; 0x03
     bcc:	20 95       	com	r18
     bce:	23 23       	and	r18, r19
     bd0:	fc 01       	movw	r30, r24
     bd2:	20 83       	st	Z, r18
     bd4:	2a c1       	rjmp	.+596    	; 0xe2a <GPIO_PinInit+0x2dc>
     bd6:	8c 81       	ldd	r24, Y+4	; 0x04
     bd8:	81 30       	cpi	r24, 0x01	; 1
     bda:	59 f4       	brne	.+22     	; 0xbf2 <GPIO_PinInit+0xa4>
     bdc:	8a e3       	ldi	r24, 0x3A	; 58
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	2a e3       	ldi	r18, 0x3A	; 58
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	f9 01       	movw	r30, r18
     be6:	30 81       	ld	r19, Z
     be8:	2b 81       	ldd	r18, Y+3	; 0x03
     bea:	23 2b       	or	r18, r19
     bec:	fc 01       	movw	r30, r24
     bee:	20 83       	st	Z, r18
     bf0:	1c c1       	rjmp	.+568    	; 0xe2a <GPIO_PinInit+0x2dc>
     bf2:	8c 81       	ldd	r24, Y+4	; 0x04
     bf4:	82 30       	cpi	r24, 0x02	; 2
     bf6:	09 f0       	breq	.+2      	; 0xbfa <GPIO_PinInit+0xac>
     bf8:	18 c1       	rjmp	.+560    	; 0xe2a <GPIO_PinInit+0x2dc>
     bfa:	8a e3       	ldi	r24, 0x3A	; 58
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	2a e3       	ldi	r18, 0x3A	; 58
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	f9 01       	movw	r30, r18
     c04:	20 81       	ld	r18, Z
     c06:	32 2f       	mov	r19, r18
     c08:	2b 81       	ldd	r18, Y+3	; 0x03
     c0a:	20 95       	com	r18
     c0c:	23 23       	and	r18, r19
     c0e:	fc 01       	movw	r30, r24
     c10:	20 83       	st	Z, r18
     c12:	8b e3       	ldi	r24, 0x3B	; 59
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	2b e3       	ldi	r18, 0x3B	; 59
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	f9 01       	movw	r30, r18
     c1c:	30 81       	ld	r19, Z
     c1e:	2b 81       	ldd	r18, Y+3	; 0x03
     c20:	23 2b       	or	r18, r19
     c22:	fc 01       	movw	r30, r24
     c24:	20 83       	st	Z, r18
     c26:	89 e3       	ldi	r24, 0x39	; 57
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	29 e3       	ldi	r18, 0x39	; 57
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	f9 01       	movw	r30, r18
     c30:	20 81       	ld	r18, Z
     c32:	32 2f       	mov	r19, r18
     c34:	2b 81       	ldd	r18, Y+3	; 0x03
     c36:	20 95       	com	r18
     c38:	23 23       	and	r18, r19
     c3a:	fc 01       	movw	r30, r24
     c3c:	20 83       	st	Z, r18
     c3e:	f5 c0       	rjmp	.+490    	; 0xe2a <GPIO_PinInit+0x2dc>
     c40:	8c 81       	ldd	r24, Y+4	; 0x04
     c42:	88 23       	and	r24, r24
     c44:	c9 f4       	brne	.+50     	; 0xc78 <GPIO_PinInit+0x12a>
     c46:	87 e3       	ldi	r24, 0x37	; 55
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	27 e3       	ldi	r18, 0x37	; 55
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	f9 01       	movw	r30, r18
     c50:	20 81       	ld	r18, Z
     c52:	32 2f       	mov	r19, r18
     c54:	2b 81       	ldd	r18, Y+3	; 0x03
     c56:	20 95       	com	r18
     c58:	23 23       	and	r18, r19
     c5a:	fc 01       	movw	r30, r24
     c5c:	20 83       	st	Z, r18
     c5e:	88 e3       	ldi	r24, 0x38	; 56
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	28 e3       	ldi	r18, 0x38	; 56
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	f9 01       	movw	r30, r18
     c68:	20 81       	ld	r18, Z
     c6a:	32 2f       	mov	r19, r18
     c6c:	2b 81       	ldd	r18, Y+3	; 0x03
     c6e:	20 95       	com	r18
     c70:	23 23       	and	r18, r19
     c72:	fc 01       	movw	r30, r24
     c74:	20 83       	st	Z, r18
     c76:	db c0       	rjmp	.+438    	; 0xe2e <GPIO_PinInit+0x2e0>
     c78:	8c 81       	ldd	r24, Y+4	; 0x04
     c7a:	81 30       	cpi	r24, 0x01	; 1
     c7c:	59 f4       	brne	.+22     	; 0xc94 <GPIO_PinInit+0x146>
     c7e:	87 e3       	ldi	r24, 0x37	; 55
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	27 e3       	ldi	r18, 0x37	; 55
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	f9 01       	movw	r30, r18
     c88:	30 81       	ld	r19, Z
     c8a:	2b 81       	ldd	r18, Y+3	; 0x03
     c8c:	23 2b       	or	r18, r19
     c8e:	fc 01       	movw	r30, r24
     c90:	20 83       	st	Z, r18
     c92:	cd c0       	rjmp	.+410    	; 0xe2e <GPIO_PinInit+0x2e0>
     c94:	8c 81       	ldd	r24, Y+4	; 0x04
     c96:	82 30       	cpi	r24, 0x02	; 2
     c98:	09 f0       	breq	.+2      	; 0xc9c <GPIO_PinInit+0x14e>
     c9a:	c9 c0       	rjmp	.+402    	; 0xe2e <GPIO_PinInit+0x2e0>
     c9c:	87 e3       	ldi	r24, 0x37	; 55
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	27 e3       	ldi	r18, 0x37	; 55
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	f9 01       	movw	r30, r18
     ca6:	20 81       	ld	r18, Z
     ca8:	32 2f       	mov	r19, r18
     caa:	2b 81       	ldd	r18, Y+3	; 0x03
     cac:	20 95       	com	r18
     cae:	23 23       	and	r18, r19
     cb0:	fc 01       	movw	r30, r24
     cb2:	20 83       	st	Z, r18
     cb4:	88 e3       	ldi	r24, 0x38	; 56
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	28 e3       	ldi	r18, 0x38	; 56
     cba:	30 e0       	ldi	r19, 0x00	; 0
     cbc:	f9 01       	movw	r30, r18
     cbe:	30 81       	ld	r19, Z
     cc0:	2b 81       	ldd	r18, Y+3	; 0x03
     cc2:	23 2b       	or	r18, r19
     cc4:	fc 01       	movw	r30, r24
     cc6:	20 83       	st	Z, r18
     cc8:	86 e3       	ldi	r24, 0x36	; 54
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	26 e3       	ldi	r18, 0x36	; 54
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	f9 01       	movw	r30, r18
     cd2:	20 81       	ld	r18, Z
     cd4:	32 2f       	mov	r19, r18
     cd6:	2b 81       	ldd	r18, Y+3	; 0x03
     cd8:	20 95       	com	r18
     cda:	23 23       	and	r18, r19
     cdc:	fc 01       	movw	r30, r24
     cde:	20 83       	st	Z, r18
     ce0:	a6 c0       	rjmp	.+332    	; 0xe2e <GPIO_PinInit+0x2e0>
     ce2:	8c 81       	ldd	r24, Y+4	; 0x04
     ce4:	88 23       	and	r24, r24
     ce6:	c9 f4       	brne	.+50     	; 0xd1a <GPIO_PinInit+0x1cc>
     ce8:	84 e3       	ldi	r24, 0x34	; 52
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	24 e3       	ldi	r18, 0x34	; 52
     cee:	30 e0       	ldi	r19, 0x00	; 0
     cf0:	f9 01       	movw	r30, r18
     cf2:	20 81       	ld	r18, Z
     cf4:	32 2f       	mov	r19, r18
     cf6:	2b 81       	ldd	r18, Y+3	; 0x03
     cf8:	20 95       	com	r18
     cfa:	23 23       	and	r18, r19
     cfc:	fc 01       	movw	r30, r24
     cfe:	20 83       	st	Z, r18
     d00:	85 e3       	ldi	r24, 0x35	; 53
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	25 e3       	ldi	r18, 0x35	; 53
     d06:	30 e0       	ldi	r19, 0x00	; 0
     d08:	f9 01       	movw	r30, r18
     d0a:	20 81       	ld	r18, Z
     d0c:	32 2f       	mov	r19, r18
     d0e:	2b 81       	ldd	r18, Y+3	; 0x03
     d10:	20 95       	com	r18
     d12:	23 23       	and	r18, r19
     d14:	fc 01       	movw	r30, r24
     d16:	20 83       	st	Z, r18
     d18:	8c c0       	rjmp	.+280    	; 0xe32 <GPIO_PinInit+0x2e4>
     d1a:	8c 81       	ldd	r24, Y+4	; 0x04
     d1c:	81 30       	cpi	r24, 0x01	; 1
     d1e:	59 f4       	brne	.+22     	; 0xd36 <GPIO_PinInit+0x1e8>
     d20:	84 e3       	ldi	r24, 0x34	; 52
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	24 e3       	ldi	r18, 0x34	; 52
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	f9 01       	movw	r30, r18
     d2a:	30 81       	ld	r19, Z
     d2c:	2b 81       	ldd	r18, Y+3	; 0x03
     d2e:	23 2b       	or	r18, r19
     d30:	fc 01       	movw	r30, r24
     d32:	20 83       	st	Z, r18
     d34:	7e c0       	rjmp	.+252    	; 0xe32 <GPIO_PinInit+0x2e4>
     d36:	8c 81       	ldd	r24, Y+4	; 0x04
     d38:	82 30       	cpi	r24, 0x02	; 2
     d3a:	09 f0       	breq	.+2      	; 0xd3e <GPIO_PinInit+0x1f0>
     d3c:	7a c0       	rjmp	.+244    	; 0xe32 <GPIO_PinInit+0x2e4>
     d3e:	84 e3       	ldi	r24, 0x34	; 52
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	24 e3       	ldi	r18, 0x34	; 52
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	f9 01       	movw	r30, r18
     d48:	20 81       	ld	r18, Z
     d4a:	32 2f       	mov	r19, r18
     d4c:	2b 81       	ldd	r18, Y+3	; 0x03
     d4e:	20 95       	com	r18
     d50:	23 23       	and	r18, r19
     d52:	fc 01       	movw	r30, r24
     d54:	20 83       	st	Z, r18
     d56:	85 e3       	ldi	r24, 0x35	; 53
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	25 e3       	ldi	r18, 0x35	; 53
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	f9 01       	movw	r30, r18
     d60:	30 81       	ld	r19, Z
     d62:	2b 81       	ldd	r18, Y+3	; 0x03
     d64:	23 2b       	or	r18, r19
     d66:	fc 01       	movw	r30, r24
     d68:	20 83       	st	Z, r18
     d6a:	83 e3       	ldi	r24, 0x33	; 51
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	23 e3       	ldi	r18, 0x33	; 51
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	f9 01       	movw	r30, r18
     d74:	20 81       	ld	r18, Z
     d76:	32 2f       	mov	r19, r18
     d78:	2b 81       	ldd	r18, Y+3	; 0x03
     d7a:	20 95       	com	r18
     d7c:	23 23       	and	r18, r19
     d7e:	fc 01       	movw	r30, r24
     d80:	20 83       	st	Z, r18
     d82:	57 c0       	rjmp	.+174    	; 0xe32 <GPIO_PinInit+0x2e4>
     d84:	8c 81       	ldd	r24, Y+4	; 0x04
     d86:	88 23       	and	r24, r24
     d88:	c9 f4       	brne	.+50     	; 0xdbc <GPIO_PinInit+0x26e>
     d8a:	81 e3       	ldi	r24, 0x31	; 49
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	21 e3       	ldi	r18, 0x31	; 49
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	f9 01       	movw	r30, r18
     d94:	20 81       	ld	r18, Z
     d96:	32 2f       	mov	r19, r18
     d98:	2b 81       	ldd	r18, Y+3	; 0x03
     d9a:	20 95       	com	r18
     d9c:	23 23       	and	r18, r19
     d9e:	fc 01       	movw	r30, r24
     da0:	20 83       	st	Z, r18
     da2:	82 e3       	ldi	r24, 0x32	; 50
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	22 e3       	ldi	r18, 0x32	; 50
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	f9 01       	movw	r30, r18
     dac:	20 81       	ld	r18, Z
     dae:	32 2f       	mov	r19, r18
     db0:	2b 81       	ldd	r18, Y+3	; 0x03
     db2:	20 95       	com	r18
     db4:	23 23       	and	r18, r19
     db6:	fc 01       	movw	r30, r24
     db8:	20 83       	st	Z, r18
     dba:	3d c0       	rjmp	.+122    	; 0xe36 <GPIO_PinInit+0x2e8>
     dbc:	8c 81       	ldd	r24, Y+4	; 0x04
     dbe:	81 30       	cpi	r24, 0x01	; 1
     dc0:	59 f4       	brne	.+22     	; 0xdd8 <GPIO_PinInit+0x28a>
     dc2:	81 e3       	ldi	r24, 0x31	; 49
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	21 e3       	ldi	r18, 0x31	; 49
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	f9 01       	movw	r30, r18
     dcc:	30 81       	ld	r19, Z
     dce:	2b 81       	ldd	r18, Y+3	; 0x03
     dd0:	23 2b       	or	r18, r19
     dd2:	fc 01       	movw	r30, r24
     dd4:	20 83       	st	Z, r18
     dd6:	2f c0       	rjmp	.+94     	; 0xe36 <GPIO_PinInit+0x2e8>
     dd8:	8c 81       	ldd	r24, Y+4	; 0x04
     dda:	82 30       	cpi	r24, 0x02	; 2
     ddc:	61 f5       	brne	.+88     	; 0xe36 <GPIO_PinInit+0x2e8>
     dde:	81 e3       	ldi	r24, 0x31	; 49
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	21 e3       	ldi	r18, 0x31	; 49
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	f9 01       	movw	r30, r18
     de8:	20 81       	ld	r18, Z
     dea:	32 2f       	mov	r19, r18
     dec:	2b 81       	ldd	r18, Y+3	; 0x03
     dee:	20 95       	com	r18
     df0:	23 23       	and	r18, r19
     df2:	fc 01       	movw	r30, r24
     df4:	20 83       	st	Z, r18
     df6:	82 e3       	ldi	r24, 0x32	; 50
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	22 e3       	ldi	r18, 0x32	; 50
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	f9 01       	movw	r30, r18
     e00:	30 81       	ld	r19, Z
     e02:	2b 81       	ldd	r18, Y+3	; 0x03
     e04:	23 2b       	or	r18, r19
     e06:	fc 01       	movw	r30, r24
     e08:	20 83       	st	Z, r18
     e0a:	80 e3       	ldi	r24, 0x30	; 48
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	20 e3       	ldi	r18, 0x30	; 48
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	f9 01       	movw	r30, r18
     e14:	20 81       	ld	r18, Z
     e16:	32 2f       	mov	r19, r18
     e18:	2b 81       	ldd	r18, Y+3	; 0x03
     e1a:	20 95       	com	r18
     e1c:	23 23       	and	r18, r19
     e1e:	fc 01       	movw	r30, r24
     e20:	20 83       	st	Z, r18
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <GPIO_PinInit+0x2e8>
     e24:	81 e0       	ldi	r24, 0x01	; 1
     e26:	89 83       	std	Y+1, r24	; 0x01
     e28:	07 c0       	rjmp	.+14     	; 0xe38 <GPIO_PinInit+0x2ea>
     e2a:	00 00       	nop
     e2c:	05 c0       	rjmp	.+10     	; 0xe38 <GPIO_PinInit+0x2ea>
     e2e:	00 00       	nop
     e30:	03 c0       	rjmp	.+6      	; 0xe38 <GPIO_PinInit+0x2ea>
     e32:	00 00       	nop
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <GPIO_PinInit+0x2ea>
     e36:	00 00       	nop
     e38:	89 81       	ldd	r24, Y+1	; 0x01
     e3a:	0f 90       	pop	r0
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	0f 90       	pop	r0
     e42:	df 91       	pop	r29
     e44:	cf 91       	pop	r28
     e46:	08 95       	ret

00000e48 <GPIO_PinsWrite>:
     e48:	cf 93       	push	r28
     e4a:	df 93       	push	r29
     e4c:	00 d0       	rcall	.+0      	; 0xe4e <GPIO_PinsWrite+0x6>
     e4e:	00 d0       	rcall	.+0      	; 0xe50 <GPIO_PinsWrite+0x8>
     e50:	cd b7       	in	r28, 0x3d	; 61
     e52:	de b7       	in	r29, 0x3e	; 62
     e54:	8a 83       	std	Y+2, r24	; 0x02
     e56:	6b 83       	std	Y+3, r22	; 0x03
     e58:	4c 83       	std	Y+4, r20	; 0x04
     e5a:	19 82       	std	Y+1, r1	; 0x01
     e5c:	8a 81       	ldd	r24, Y+2	; 0x02
     e5e:	84 30       	cpi	r24, 0x04	; 4
     e60:	18 f0       	brcs	.+6      	; 0xe68 <GPIO_PinsWrite+0x20>
     e62:	81 e0       	ldi	r24, 0x01	; 1
     e64:	89 83       	std	Y+1, r24	; 0x01
     e66:	9b c0       	rjmp	.+310    	; 0xf9e <GPIO_PinsWrite+0x156>
     e68:	8a 81       	ldd	r24, Y+2	; 0x02
     e6a:	88 2f       	mov	r24, r24
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	81 30       	cpi	r24, 0x01	; 1
     e70:	91 05       	cpc	r25, r1
     e72:	79 f1       	breq	.+94     	; 0xed2 <GPIO_PinsWrite+0x8a>
     e74:	82 30       	cpi	r24, 0x02	; 2
     e76:	91 05       	cpc	r25, r1
     e78:	1c f4       	brge	.+6      	; 0xe80 <GPIO_PinsWrite+0x38>
     e7a:	89 2b       	or	r24, r25
     e7c:	49 f0       	breq	.+18     	; 0xe90 <GPIO_PinsWrite+0x48>
     e7e:	8c c0       	rjmp	.+280    	; 0xf98 <GPIO_PinsWrite+0x150>
     e80:	82 30       	cpi	r24, 0x02	; 2
     e82:	91 05       	cpc	r25, r1
     e84:	09 f4       	brne	.+2      	; 0xe88 <GPIO_PinsWrite+0x40>
     e86:	46 c0       	rjmp	.+140    	; 0xf14 <GPIO_PinsWrite+0xcc>
     e88:	03 97       	sbiw	r24, 0x03	; 3
     e8a:	09 f4       	brne	.+2      	; 0xe8e <GPIO_PinsWrite+0x46>
     e8c:	64 c0       	rjmp	.+200    	; 0xf56 <GPIO_PinsWrite+0x10e>
     e8e:	84 c0       	rjmp	.+264    	; 0xf98 <GPIO_PinsWrite+0x150>
     e90:	8c 81       	ldd	r24, Y+4	; 0x04
     e92:	81 30       	cpi	r24, 0x01	; 1
     e94:	59 f4       	brne	.+22     	; 0xeac <GPIO_PinsWrite+0x64>
     e96:	8b e3       	ldi	r24, 0x3B	; 59
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	2b e3       	ldi	r18, 0x3B	; 59
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	f9 01       	movw	r30, r18
     ea0:	30 81       	ld	r19, Z
     ea2:	2b 81       	ldd	r18, Y+3	; 0x03
     ea4:	23 2b       	or	r18, r19
     ea6:	fc 01       	movw	r30, r24
     ea8:	20 83       	st	Z, r18
     eaa:	79 c0       	rjmp	.+242    	; 0xf9e <GPIO_PinsWrite+0x156>
     eac:	8c 81       	ldd	r24, Y+4	; 0x04
     eae:	88 23       	and	r24, r24
     eb0:	69 f4       	brne	.+26     	; 0xecc <GPIO_PinsWrite+0x84>
     eb2:	8b e3       	ldi	r24, 0x3B	; 59
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	2b e3       	ldi	r18, 0x3B	; 59
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	f9 01       	movw	r30, r18
     ebc:	20 81       	ld	r18, Z
     ebe:	32 2f       	mov	r19, r18
     ec0:	2b 81       	ldd	r18, Y+3	; 0x03
     ec2:	20 95       	com	r18
     ec4:	23 23       	and	r18, r19
     ec6:	fc 01       	movw	r30, r24
     ec8:	20 83       	st	Z, r18
     eca:	69 c0       	rjmp	.+210    	; 0xf9e <GPIO_PinsWrite+0x156>
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	89 83       	std	Y+1, r24	; 0x01
     ed0:	66 c0       	rjmp	.+204    	; 0xf9e <GPIO_PinsWrite+0x156>
     ed2:	8c 81       	ldd	r24, Y+4	; 0x04
     ed4:	81 30       	cpi	r24, 0x01	; 1
     ed6:	59 f4       	brne	.+22     	; 0xeee <GPIO_PinsWrite+0xa6>
     ed8:	88 e3       	ldi	r24, 0x38	; 56
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	28 e3       	ldi	r18, 0x38	; 56
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	f9 01       	movw	r30, r18
     ee2:	30 81       	ld	r19, Z
     ee4:	2b 81       	ldd	r18, Y+3	; 0x03
     ee6:	23 2b       	or	r18, r19
     ee8:	fc 01       	movw	r30, r24
     eea:	20 83       	st	Z, r18
     eec:	58 c0       	rjmp	.+176    	; 0xf9e <GPIO_PinsWrite+0x156>
     eee:	8c 81       	ldd	r24, Y+4	; 0x04
     ef0:	88 23       	and	r24, r24
     ef2:	69 f4       	brne	.+26     	; 0xf0e <GPIO_PinsWrite+0xc6>
     ef4:	88 e3       	ldi	r24, 0x38	; 56
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	28 e3       	ldi	r18, 0x38	; 56
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	f9 01       	movw	r30, r18
     efe:	20 81       	ld	r18, Z
     f00:	32 2f       	mov	r19, r18
     f02:	2b 81       	ldd	r18, Y+3	; 0x03
     f04:	20 95       	com	r18
     f06:	23 23       	and	r18, r19
     f08:	fc 01       	movw	r30, r24
     f0a:	20 83       	st	Z, r18
     f0c:	48 c0       	rjmp	.+144    	; 0xf9e <GPIO_PinsWrite+0x156>
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	89 83       	std	Y+1, r24	; 0x01
     f12:	45 c0       	rjmp	.+138    	; 0xf9e <GPIO_PinsWrite+0x156>
     f14:	8c 81       	ldd	r24, Y+4	; 0x04
     f16:	81 30       	cpi	r24, 0x01	; 1
     f18:	59 f4       	brne	.+22     	; 0xf30 <GPIO_PinsWrite+0xe8>
     f1a:	85 e3       	ldi	r24, 0x35	; 53
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	25 e3       	ldi	r18, 0x35	; 53
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	f9 01       	movw	r30, r18
     f24:	30 81       	ld	r19, Z
     f26:	2b 81       	ldd	r18, Y+3	; 0x03
     f28:	23 2b       	or	r18, r19
     f2a:	fc 01       	movw	r30, r24
     f2c:	20 83       	st	Z, r18
     f2e:	37 c0       	rjmp	.+110    	; 0xf9e <GPIO_PinsWrite+0x156>
     f30:	8c 81       	ldd	r24, Y+4	; 0x04
     f32:	88 23       	and	r24, r24
     f34:	69 f4       	brne	.+26     	; 0xf50 <GPIO_PinsWrite+0x108>
     f36:	85 e3       	ldi	r24, 0x35	; 53
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	25 e3       	ldi	r18, 0x35	; 53
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	f9 01       	movw	r30, r18
     f40:	20 81       	ld	r18, Z
     f42:	32 2f       	mov	r19, r18
     f44:	2b 81       	ldd	r18, Y+3	; 0x03
     f46:	20 95       	com	r18
     f48:	23 23       	and	r18, r19
     f4a:	fc 01       	movw	r30, r24
     f4c:	20 83       	st	Z, r18
     f4e:	27 c0       	rjmp	.+78     	; 0xf9e <GPIO_PinsWrite+0x156>
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	89 83       	std	Y+1, r24	; 0x01
     f54:	24 c0       	rjmp	.+72     	; 0xf9e <GPIO_PinsWrite+0x156>
     f56:	8c 81       	ldd	r24, Y+4	; 0x04
     f58:	81 30       	cpi	r24, 0x01	; 1
     f5a:	59 f4       	brne	.+22     	; 0xf72 <GPIO_PinsWrite+0x12a>
     f5c:	82 e3       	ldi	r24, 0x32	; 50
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	22 e3       	ldi	r18, 0x32	; 50
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	f9 01       	movw	r30, r18
     f66:	30 81       	ld	r19, Z
     f68:	2b 81       	ldd	r18, Y+3	; 0x03
     f6a:	23 2b       	or	r18, r19
     f6c:	fc 01       	movw	r30, r24
     f6e:	20 83       	st	Z, r18
     f70:	16 c0       	rjmp	.+44     	; 0xf9e <GPIO_PinsWrite+0x156>
     f72:	8c 81       	ldd	r24, Y+4	; 0x04
     f74:	88 23       	and	r24, r24
     f76:	69 f4       	brne	.+26     	; 0xf92 <GPIO_PinsWrite+0x14a>
     f78:	82 e3       	ldi	r24, 0x32	; 50
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	22 e3       	ldi	r18, 0x32	; 50
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	f9 01       	movw	r30, r18
     f82:	20 81       	ld	r18, Z
     f84:	32 2f       	mov	r19, r18
     f86:	2b 81       	ldd	r18, Y+3	; 0x03
     f88:	20 95       	com	r18
     f8a:	23 23       	and	r18, r19
     f8c:	fc 01       	movw	r30, r24
     f8e:	20 83       	st	Z, r18
     f90:	06 c0       	rjmp	.+12     	; 0xf9e <GPIO_PinsWrite+0x156>
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	89 83       	std	Y+1, r24	; 0x01
     f96:	03 c0       	rjmp	.+6      	; 0xf9e <GPIO_PinsWrite+0x156>
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	89 83       	std	Y+1, r24	; 0x01
     f9c:	00 00       	nop
     f9e:	89 81       	ldd	r24, Y+1	; 0x01
     fa0:	0f 90       	pop	r0
     fa2:	0f 90       	pop	r0
     fa4:	0f 90       	pop	r0
     fa6:	0f 90       	pop	r0
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	08 95       	ret

00000fae <GPIO_PinRead>:
     fae:	cf 93       	push	r28
     fb0:	df 93       	push	r29
     fb2:	cd b7       	in	r28, 0x3d	; 61
     fb4:	de b7       	in	r29, 0x3e	; 62
     fb6:	27 97       	sbiw	r28, 0x07	; 7
     fb8:	0f b6       	in	r0, 0x3f	; 63
     fba:	f8 94       	cli
     fbc:	de bf       	out	0x3e, r29	; 62
     fbe:	0f be       	out	0x3f, r0	; 63
     fc0:	cd bf       	out	0x3d, r28	; 61
     fc2:	8c 83       	std	Y+4, r24	; 0x04
     fc4:	6d 83       	std	Y+5, r22	; 0x05
     fc6:	5f 83       	std	Y+7, r21	; 0x07
     fc8:	4e 83       	std	Y+6, r20	; 0x06
     fca:	19 82       	std	Y+1, r1	; 0x01
     fcc:	1a 82       	std	Y+2, r1	; 0x02
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	8b 83       	std	Y+3, r24	; 0x03
     fd2:	06 c0       	rjmp	.+12     	; 0xfe0 <GPIO_PinRead+0x32>
     fd4:	8b 81       	ldd	r24, Y+3	; 0x03
     fd6:	88 0f       	add	r24, r24
     fd8:	8b 83       	std	Y+3, r24	; 0x03
     fda:	8a 81       	ldd	r24, Y+2	; 0x02
     fdc:	8f 5f       	subi	r24, 0xFF	; 255
     fde:	8a 83       	std	Y+2, r24	; 0x02
     fe0:	9b 81       	ldd	r25, Y+3	; 0x03
     fe2:	8d 81       	ldd	r24, Y+5	; 0x05
     fe4:	89 23       	and	r24, r25
     fe6:	88 23       	and	r24, r24
     fe8:	a9 f3       	breq	.-22     	; 0xfd4 <GPIO_PinRead+0x26>
     fea:	8c 81       	ldd	r24, Y+4	; 0x04
     fec:	84 30       	cpi	r24, 0x04	; 4
     fee:	18 f0       	brcs	.+6      	; 0xff6 <GPIO_PinRead+0x48>
     ff0:	81 e0       	ldi	r24, 0x01	; 1
     ff2:	89 83       	std	Y+1, r24	; 0x01
     ff4:	6a c0       	rjmp	.+212    	; 0x10ca <GPIO_PinRead+0x11c>
     ff6:	8c 81       	ldd	r24, Y+4	; 0x04
     ff8:	88 2f       	mov	r24, r24
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	81 30       	cpi	r24, 0x01	; 1
     ffe:	91 05       	cpc	r25, r1
    1000:	11 f1       	breq	.+68     	; 0x1046 <GPIO_PinRead+0x98>
    1002:	82 30       	cpi	r24, 0x02	; 2
    1004:	91 05       	cpc	r25, r1
    1006:	1c f4       	brge	.+6      	; 0x100e <GPIO_PinRead+0x60>
    1008:	89 2b       	or	r24, r25
    100a:	41 f0       	breq	.+16     	; 0x101c <GPIO_PinRead+0x6e>
    100c:	5b c0       	rjmp	.+182    	; 0x10c4 <GPIO_PinRead+0x116>
    100e:	82 30       	cpi	r24, 0x02	; 2
    1010:	91 05       	cpc	r25, r1
    1012:	71 f1       	breq	.+92     	; 0x1070 <GPIO_PinRead+0xc2>
    1014:	03 97       	sbiw	r24, 0x03	; 3
    1016:	09 f4       	brne	.+2      	; 0x101a <GPIO_PinRead+0x6c>
    1018:	40 c0       	rjmp	.+128    	; 0x109a <GPIO_PinRead+0xec>
    101a:	54 c0       	rjmp	.+168    	; 0x10c4 <GPIO_PinRead+0x116>
    101c:	89 e3       	ldi	r24, 0x39	; 57
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	fc 01       	movw	r30, r24
    1022:	80 81       	ld	r24, Z
    1024:	88 2f       	mov	r24, r24
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	2a 81       	ldd	r18, Y+2	; 0x02
    102a:	22 2f       	mov	r18, r18
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	02 c0       	rjmp	.+4      	; 0x1034 <GPIO_PinRead+0x86>
    1030:	95 95       	asr	r25
    1032:	87 95       	ror	r24
    1034:	2a 95       	dec	r18
    1036:	e2 f7       	brpl	.-8      	; 0x1030 <GPIO_PinRead+0x82>
    1038:	28 2f       	mov	r18, r24
    103a:	21 70       	andi	r18, 0x01	; 1
    103c:	8e 81       	ldd	r24, Y+6	; 0x06
    103e:	9f 81       	ldd	r25, Y+7	; 0x07
    1040:	fc 01       	movw	r30, r24
    1042:	20 83       	st	Z, r18
    1044:	42 c0       	rjmp	.+132    	; 0x10ca <GPIO_PinRead+0x11c>
    1046:	86 e3       	ldi	r24, 0x36	; 54
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	fc 01       	movw	r30, r24
    104c:	80 81       	ld	r24, Z
    104e:	88 2f       	mov	r24, r24
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	2a 81       	ldd	r18, Y+2	; 0x02
    1054:	22 2f       	mov	r18, r18
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	02 c0       	rjmp	.+4      	; 0x105e <GPIO_PinRead+0xb0>
    105a:	95 95       	asr	r25
    105c:	87 95       	ror	r24
    105e:	2a 95       	dec	r18
    1060:	e2 f7       	brpl	.-8      	; 0x105a <GPIO_PinRead+0xac>
    1062:	28 2f       	mov	r18, r24
    1064:	21 70       	andi	r18, 0x01	; 1
    1066:	8e 81       	ldd	r24, Y+6	; 0x06
    1068:	9f 81       	ldd	r25, Y+7	; 0x07
    106a:	fc 01       	movw	r30, r24
    106c:	20 83       	st	Z, r18
    106e:	2d c0       	rjmp	.+90     	; 0x10ca <GPIO_PinRead+0x11c>
    1070:	83 e3       	ldi	r24, 0x33	; 51
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	fc 01       	movw	r30, r24
    1076:	80 81       	ld	r24, Z
    1078:	88 2f       	mov	r24, r24
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	2a 81       	ldd	r18, Y+2	; 0x02
    107e:	22 2f       	mov	r18, r18
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <GPIO_PinRead+0xda>
    1084:	95 95       	asr	r25
    1086:	87 95       	ror	r24
    1088:	2a 95       	dec	r18
    108a:	e2 f7       	brpl	.-8      	; 0x1084 <GPIO_PinRead+0xd6>
    108c:	28 2f       	mov	r18, r24
    108e:	21 70       	andi	r18, 0x01	; 1
    1090:	8e 81       	ldd	r24, Y+6	; 0x06
    1092:	9f 81       	ldd	r25, Y+7	; 0x07
    1094:	fc 01       	movw	r30, r24
    1096:	20 83       	st	Z, r18
    1098:	18 c0       	rjmp	.+48     	; 0x10ca <GPIO_PinRead+0x11c>
    109a:	80 e3       	ldi	r24, 0x30	; 48
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	fc 01       	movw	r30, r24
    10a0:	80 81       	ld	r24, Z
    10a2:	88 2f       	mov	r24, r24
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	2a 81       	ldd	r18, Y+2	; 0x02
    10a8:	22 2f       	mov	r18, r18
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <GPIO_PinRead+0x104>
    10ae:	95 95       	asr	r25
    10b0:	87 95       	ror	r24
    10b2:	2a 95       	dec	r18
    10b4:	e2 f7       	brpl	.-8      	; 0x10ae <GPIO_PinRead+0x100>
    10b6:	28 2f       	mov	r18, r24
    10b8:	21 70       	andi	r18, 0x01	; 1
    10ba:	8e 81       	ldd	r24, Y+6	; 0x06
    10bc:	9f 81       	ldd	r25, Y+7	; 0x07
    10be:	fc 01       	movw	r30, r24
    10c0:	20 83       	st	Z, r18
    10c2:	03 c0       	rjmp	.+6      	; 0x10ca <GPIO_PinRead+0x11c>
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	89 83       	std	Y+1, r24	; 0x01
    10c8:	00 00       	nop
    10ca:	89 81       	ldd	r24, Y+1	; 0x01
    10cc:	27 96       	adiw	r28, 0x07	; 7
    10ce:	0f b6       	in	r0, 0x3f	; 63
    10d0:	f8 94       	cli
    10d2:	de bf       	out	0x3e, r29	; 62
    10d4:	0f be       	out	0x3f, r0	; 63
    10d6:	cd bf       	out	0x3d, r28	; 61
    10d8:	df 91       	pop	r29
    10da:	cf 91       	pop	r28
    10dc:	08 95       	ret

000010de <GPIO_PinsToggle>:
    10de:	cf 93       	push	r28
    10e0:	df 93       	push	r29
    10e2:	00 d0       	rcall	.+0      	; 0x10e4 <GPIO_PinsToggle+0x6>
    10e4:	1f 92       	push	r1
    10e6:	cd b7       	in	r28, 0x3d	; 61
    10e8:	de b7       	in	r29, 0x3e	; 62
    10ea:	8a 83       	std	Y+2, r24	; 0x02
    10ec:	6b 83       	std	Y+3, r22	; 0x03
    10ee:	19 82       	std	Y+1, r1	; 0x01
    10f0:	8a 81       	ldd	r24, Y+2	; 0x02
    10f2:	84 30       	cpi	r24, 0x04	; 4
    10f4:	18 f0       	brcs	.+6      	; 0x10fc <GPIO_PinsToggle+0x1e>
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	89 83       	std	Y+1, r24	; 0x01
    10fa:	41 c0       	rjmp	.+130    	; 0x117e <GPIO_PinsToggle+0xa0>
    10fc:	8a 81       	ldd	r24, Y+2	; 0x02
    10fe:	88 2f       	mov	r24, r24
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	81 30       	cpi	r24, 0x01	; 1
    1104:	91 05       	cpc	r25, r1
    1106:	b9 f0       	breq	.+46     	; 0x1136 <GPIO_PinsToggle+0x58>
    1108:	82 30       	cpi	r24, 0x02	; 2
    110a:	91 05       	cpc	r25, r1
    110c:	1c f4       	brge	.+6      	; 0x1114 <GPIO_PinsToggle+0x36>
    110e:	89 2b       	or	r24, r25
    1110:	39 f0       	breq	.+14     	; 0x1120 <GPIO_PinsToggle+0x42>
    1112:	32 c0       	rjmp	.+100    	; 0x1178 <GPIO_PinsToggle+0x9a>
    1114:	82 30       	cpi	r24, 0x02	; 2
    1116:	91 05       	cpc	r25, r1
    1118:	c9 f0       	breq	.+50     	; 0x114c <GPIO_PinsToggle+0x6e>
    111a:	03 97       	sbiw	r24, 0x03	; 3
    111c:	11 f1       	breq	.+68     	; 0x1162 <GPIO_PinsToggle+0x84>
    111e:	2c c0       	rjmp	.+88     	; 0x1178 <GPIO_PinsToggle+0x9a>
    1120:	8b e3       	ldi	r24, 0x3B	; 59
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	2b e3       	ldi	r18, 0x3B	; 59
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	f9 01       	movw	r30, r18
    112a:	30 81       	ld	r19, Z
    112c:	2b 81       	ldd	r18, Y+3	; 0x03
    112e:	23 27       	eor	r18, r19
    1130:	fc 01       	movw	r30, r24
    1132:	20 83       	st	Z, r18
    1134:	24 c0       	rjmp	.+72     	; 0x117e <GPIO_PinsToggle+0xa0>
    1136:	88 e3       	ldi	r24, 0x38	; 56
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	28 e3       	ldi	r18, 0x38	; 56
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	f9 01       	movw	r30, r18
    1140:	30 81       	ld	r19, Z
    1142:	2b 81       	ldd	r18, Y+3	; 0x03
    1144:	23 27       	eor	r18, r19
    1146:	fc 01       	movw	r30, r24
    1148:	20 83       	st	Z, r18
    114a:	19 c0       	rjmp	.+50     	; 0x117e <GPIO_PinsToggle+0xa0>
    114c:	85 e3       	ldi	r24, 0x35	; 53
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	25 e3       	ldi	r18, 0x35	; 53
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	f9 01       	movw	r30, r18
    1156:	30 81       	ld	r19, Z
    1158:	2b 81       	ldd	r18, Y+3	; 0x03
    115a:	23 27       	eor	r18, r19
    115c:	fc 01       	movw	r30, r24
    115e:	20 83       	st	Z, r18
    1160:	0e c0       	rjmp	.+28     	; 0x117e <GPIO_PinsToggle+0xa0>
    1162:	82 e3       	ldi	r24, 0x32	; 50
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	22 e3       	ldi	r18, 0x32	; 50
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	f9 01       	movw	r30, r18
    116c:	30 81       	ld	r19, Z
    116e:	2b 81       	ldd	r18, Y+3	; 0x03
    1170:	23 27       	eor	r18, r19
    1172:	fc 01       	movw	r30, r24
    1174:	20 83       	st	Z, r18
    1176:	03 c0       	rjmp	.+6      	; 0x117e <GPIO_PinsToggle+0xa0>
    1178:	81 e0       	ldi	r24, 0x01	; 1
    117a:	89 83       	std	Y+1, r24	; 0x01
    117c:	00 00       	nop
    117e:	89 81       	ldd	r24, Y+1	; 0x01
    1180:	0f 90       	pop	r0
    1182:	0f 90       	pop	r0
    1184:	0f 90       	pop	r0
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	08 95       	ret

0000118c <GPIO_EnableExtInterrupt>:
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	00 d0       	rcall	.+0      	; 0x1192 <GPIO_EnableExtInterrupt+0x6>
    1192:	00 d0       	rcall	.+0      	; 0x1194 <GPIO_EnableExtInterrupt+0x8>
    1194:	1f 92       	push	r1
    1196:	cd b7       	in	r28, 0x3d	; 61
    1198:	de b7       	in	r29, 0x3e	; 62
    119a:	8a 83       	std	Y+2, r24	; 0x02
    119c:	6b 83       	std	Y+3, r22	; 0x03
    119e:	5d 83       	std	Y+5, r21	; 0x05
    11a0:	4c 83       	std	Y+4, r20	; 0x04
    11a2:	19 82       	std	Y+1, r1	; 0x01
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	83 30       	cpi	r24, 0x03	; 3
    11a8:	60 f4       	brcc	.+24     	; 0x11c2 <GPIO_EnableExtInterrupt+0x36>
    11aa:	8b 81       	ldd	r24, Y+3	; 0x03
    11ac:	84 30       	cpi	r24, 0x04	; 4
    11ae:	48 f4       	brcc	.+18     	; 0x11c2 <GPIO_EnableExtInterrupt+0x36>
    11b0:	8a 81       	ldd	r24, Y+2	; 0x02
    11b2:	82 30       	cpi	r24, 0x02	; 2
    11b4:	49 f4       	brne	.+18     	; 0x11c8 <GPIO_EnableExtInterrupt+0x3c>
    11b6:	8b 81       	ldd	r24, Y+3	; 0x03
    11b8:	88 23       	and	r24, r24
    11ba:	19 f0       	breq	.+6      	; 0x11c2 <GPIO_EnableExtInterrupt+0x36>
    11bc:	8b 81       	ldd	r24, Y+3	; 0x03
    11be:	81 30       	cpi	r24, 0x01	; 1
    11c0:	19 f4       	brne	.+6      	; 0x11c8 <GPIO_EnableExtInterrupt+0x3c>
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	89 83       	std	Y+1, r24	; 0x01
    11c6:	76 c0       	rjmp	.+236    	; 0x12b4 <GPIO_EnableExtInterrupt+0x128>
    11c8:	78 94       	sei
    11ca:	8a 81       	ldd	r24, Y+2	; 0x02
    11cc:	88 2f       	mov	r24, r24
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	81 30       	cpi	r24, 0x01	; 1
    11d2:	91 05       	cpc	r25, r1
    11d4:	19 f1       	breq	.+70     	; 0x121c <GPIO_EnableExtInterrupt+0x90>
    11d6:	82 30       	cpi	r24, 0x02	; 2
    11d8:	91 05       	cpc	r25, r1
    11da:	09 f4       	brne	.+2      	; 0x11de <GPIO_EnableExtInterrupt+0x52>
    11dc:	41 c0       	rjmp	.+130    	; 0x1260 <GPIO_EnableExtInterrupt+0xd4>
    11de:	89 2b       	or	r24, r25
    11e0:	09 f0       	breq	.+2      	; 0x11e4 <GPIO_EnableExtInterrupt+0x58>
    11e2:	65 c0       	rjmp	.+202    	; 0x12ae <GPIO_EnableExtInterrupt+0x122>
    11e4:	85 e5       	ldi	r24, 0x55	; 85
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	25 e5       	ldi	r18, 0x55	; 85
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	f9 01       	movw	r30, r18
    11ee:	20 81       	ld	r18, Z
    11f0:	32 2f       	mov	r19, r18
    11f2:	3c 7f       	andi	r19, 0xFC	; 252
    11f4:	2b 81       	ldd	r18, Y+3	; 0x03
    11f6:	23 2b       	or	r18, r19
    11f8:	fc 01       	movw	r30, r24
    11fa:	20 83       	st	Z, r18
    11fc:	8c 81       	ldd	r24, Y+4	; 0x04
    11fe:	9d 81       	ldd	r25, Y+5	; 0x05
    1200:	90 93 ae 00 	sts	0x00AE, r25	; 0x8000ae <global_pvCallBackINT0+0x1>
    1204:	80 93 ad 00 	sts	0x00AD, r24	; 0x8000ad <global_pvCallBackINT0>
    1208:	8b e5       	ldi	r24, 0x5B	; 91
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	2b e5       	ldi	r18, 0x5B	; 91
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	f9 01       	movw	r30, r18
    1212:	20 81       	ld	r18, Z
    1214:	20 64       	ori	r18, 0x40	; 64
    1216:	fc 01       	movw	r30, r24
    1218:	20 83       	st	Z, r18
    121a:	4c c0       	rjmp	.+152    	; 0x12b4 <GPIO_EnableExtInterrupt+0x128>
    121c:	85 e5       	ldi	r24, 0x55	; 85
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	25 e5       	ldi	r18, 0x55	; 85
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	f9 01       	movw	r30, r18
    1226:	20 81       	ld	r18, Z
    1228:	42 2f       	mov	r20, r18
    122a:	43 7f       	andi	r20, 0xF3	; 243
    122c:	2b 81       	ldd	r18, Y+3	; 0x03
    122e:	22 2f       	mov	r18, r18
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	22 0f       	add	r18, r18
    1234:	33 1f       	adc	r19, r19
    1236:	22 0f       	add	r18, r18
    1238:	33 1f       	adc	r19, r19
    123a:	24 2b       	or	r18, r20
    123c:	fc 01       	movw	r30, r24
    123e:	20 83       	st	Z, r18
    1240:	8c 81       	ldd	r24, Y+4	; 0x04
    1242:	9d 81       	ldd	r25, Y+5	; 0x05
    1244:	90 93 ac 00 	sts	0x00AC, r25	; 0x8000ac <global_pvCallBackINT1+0x1>
    1248:	80 93 ab 00 	sts	0x00AB, r24	; 0x8000ab <global_pvCallBackINT1>
    124c:	8b e5       	ldi	r24, 0x5B	; 91
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	2b e5       	ldi	r18, 0x5B	; 91
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	f9 01       	movw	r30, r18
    1256:	20 81       	ld	r18, Z
    1258:	20 68       	ori	r18, 0x80	; 128
    125a:	fc 01       	movw	r30, r24
    125c:	20 83       	st	Z, r18
    125e:	2a c0       	rjmp	.+84     	; 0x12b4 <GPIO_EnableExtInterrupt+0x128>
    1260:	84 e5       	ldi	r24, 0x54	; 84
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	24 e5       	ldi	r18, 0x54	; 84
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	f9 01       	movw	r30, r18
    126a:	20 81       	ld	r18, Z
    126c:	42 2f       	mov	r20, r18
    126e:	4f 7b       	andi	r20, 0xBF	; 191
    1270:	2b 81       	ldd	r18, Y+3	; 0x03
    1272:	22 2f       	mov	r18, r18
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	00 24       	eor	r0, r0
    1278:	36 95       	lsr	r19
    127a:	27 95       	ror	r18
    127c:	07 94       	ror	r0
    127e:	36 95       	lsr	r19
    1280:	27 95       	ror	r18
    1282:	07 94       	ror	r0
    1284:	32 2f       	mov	r19, r18
    1286:	20 2d       	mov	r18, r0
    1288:	24 2b       	or	r18, r20
    128a:	fc 01       	movw	r30, r24
    128c:	20 83       	st	Z, r18
    128e:	8c 81       	ldd	r24, Y+4	; 0x04
    1290:	9d 81       	ldd	r25, Y+5	; 0x05
    1292:	90 93 aa 00 	sts	0x00AA, r25	; 0x8000aa <global_pvCallBackINT2+0x1>
    1296:	80 93 a9 00 	sts	0x00A9, r24	; 0x8000a9 <global_pvCallBackINT2>
    129a:	8b e5       	ldi	r24, 0x5B	; 91
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	2b e5       	ldi	r18, 0x5B	; 91
    12a0:	30 e0       	ldi	r19, 0x00	; 0
    12a2:	f9 01       	movw	r30, r18
    12a4:	20 81       	ld	r18, Z
    12a6:	20 62       	ori	r18, 0x20	; 32
    12a8:	fc 01       	movw	r30, r24
    12aa:	20 83       	st	Z, r18
    12ac:	03 c0       	rjmp	.+6      	; 0x12b4 <GPIO_EnableExtInterrupt+0x128>
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	89 83       	std	Y+1, r24	; 0x01
    12b2:	00 00       	nop
    12b4:	89 81       	ldd	r24, Y+1	; 0x01
    12b6:	0f 90       	pop	r0
    12b8:	0f 90       	pop	r0
    12ba:	0f 90       	pop	r0
    12bc:	0f 90       	pop	r0
    12be:	0f 90       	pop	r0
    12c0:	df 91       	pop	r29
    12c2:	cf 91       	pop	r28
    12c4:	08 95       	ret

000012c6 <__vector_1>:
    12c6:	1f 92       	push	r1
    12c8:	0f 92       	push	r0
    12ca:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    12ce:	0f 92       	push	r0
    12d0:	11 24       	eor	r1, r1
    12d2:	2f 93       	push	r18
    12d4:	3f 93       	push	r19
    12d6:	4f 93       	push	r20
    12d8:	5f 93       	push	r21
    12da:	6f 93       	push	r22
    12dc:	7f 93       	push	r23
    12de:	8f 93       	push	r24
    12e0:	9f 93       	push	r25
    12e2:	af 93       	push	r26
    12e4:	bf 93       	push	r27
    12e6:	ef 93       	push	r30
    12e8:	ff 93       	push	r31
    12ea:	cf 93       	push	r28
    12ec:	df 93       	push	r29
    12ee:	cd b7       	in	r28, 0x3d	; 61
    12f0:	de b7       	in	r29, 0x3e	; 62
    12f2:	80 91 ad 00 	lds	r24, 0x00AD	; 0x8000ad <global_pvCallBackINT0>
    12f6:	90 91 ae 00 	lds	r25, 0x00AE	; 0x8000ae <global_pvCallBackINT0+0x1>
    12fa:	fc 01       	movw	r30, r24
    12fc:	09 95       	icall
    12fe:	8a e5       	ldi	r24, 0x5A	; 90
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	2a e5       	ldi	r18, 0x5A	; 90
    1304:	30 e0       	ldi	r19, 0x00	; 0
    1306:	f9 01       	movw	r30, r18
    1308:	20 81       	ld	r18, Z
    130a:	20 64       	ori	r18, 0x40	; 64
    130c:	fc 01       	movw	r30, r24
    130e:	20 83       	st	Z, r18
    1310:	78 94       	sei
    1312:	00 00       	nop
    1314:	df 91       	pop	r29
    1316:	cf 91       	pop	r28
    1318:	ff 91       	pop	r31
    131a:	ef 91       	pop	r30
    131c:	bf 91       	pop	r27
    131e:	af 91       	pop	r26
    1320:	9f 91       	pop	r25
    1322:	8f 91       	pop	r24
    1324:	7f 91       	pop	r23
    1326:	6f 91       	pop	r22
    1328:	5f 91       	pop	r21
    132a:	4f 91       	pop	r20
    132c:	3f 91       	pop	r19
    132e:	2f 91       	pop	r18
    1330:	0f 90       	pop	r0
    1332:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1336:	0f 90       	pop	r0
    1338:	1f 90       	pop	r1
    133a:	18 95       	reti

0000133c <__vector_2>:
    133c:	1f 92       	push	r1
    133e:	0f 92       	push	r0
    1340:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1344:	0f 92       	push	r0
    1346:	11 24       	eor	r1, r1
    1348:	2f 93       	push	r18
    134a:	3f 93       	push	r19
    134c:	4f 93       	push	r20
    134e:	5f 93       	push	r21
    1350:	6f 93       	push	r22
    1352:	7f 93       	push	r23
    1354:	8f 93       	push	r24
    1356:	9f 93       	push	r25
    1358:	af 93       	push	r26
    135a:	bf 93       	push	r27
    135c:	ef 93       	push	r30
    135e:	ff 93       	push	r31
    1360:	cf 93       	push	r28
    1362:	df 93       	push	r29
    1364:	cd b7       	in	r28, 0x3d	; 61
    1366:	de b7       	in	r29, 0x3e	; 62
    1368:	80 91 ab 00 	lds	r24, 0x00AB	; 0x8000ab <global_pvCallBackINT1>
    136c:	90 91 ac 00 	lds	r25, 0x00AC	; 0x8000ac <global_pvCallBackINT1+0x1>
    1370:	fc 01       	movw	r30, r24
    1372:	09 95       	icall
    1374:	8a e5       	ldi	r24, 0x5A	; 90
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	2a e5       	ldi	r18, 0x5A	; 90
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	f9 01       	movw	r30, r18
    137e:	20 81       	ld	r18, Z
    1380:	20 68       	ori	r18, 0x80	; 128
    1382:	fc 01       	movw	r30, r24
    1384:	20 83       	st	Z, r18
    1386:	78 94       	sei
    1388:	00 00       	nop
    138a:	df 91       	pop	r29
    138c:	cf 91       	pop	r28
    138e:	ff 91       	pop	r31
    1390:	ef 91       	pop	r30
    1392:	bf 91       	pop	r27
    1394:	af 91       	pop	r26
    1396:	9f 91       	pop	r25
    1398:	8f 91       	pop	r24
    139a:	7f 91       	pop	r23
    139c:	6f 91       	pop	r22
    139e:	5f 91       	pop	r21
    13a0:	4f 91       	pop	r20
    13a2:	3f 91       	pop	r19
    13a4:	2f 91       	pop	r18
    13a6:	0f 90       	pop	r0
    13a8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    13ac:	0f 90       	pop	r0
    13ae:	1f 90       	pop	r1
    13b0:	18 95       	reti

000013b2 <__vector_3>:
    13b2:	1f 92       	push	r1
    13b4:	0f 92       	push	r0
    13b6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    13ba:	0f 92       	push	r0
    13bc:	11 24       	eor	r1, r1
    13be:	2f 93       	push	r18
    13c0:	3f 93       	push	r19
    13c2:	4f 93       	push	r20
    13c4:	5f 93       	push	r21
    13c6:	6f 93       	push	r22
    13c8:	7f 93       	push	r23
    13ca:	8f 93       	push	r24
    13cc:	9f 93       	push	r25
    13ce:	af 93       	push	r26
    13d0:	bf 93       	push	r27
    13d2:	ef 93       	push	r30
    13d4:	ff 93       	push	r31
    13d6:	cf 93       	push	r28
    13d8:	df 93       	push	r29
    13da:	cd b7       	in	r28, 0x3d	; 61
    13dc:	de b7       	in	r29, 0x3e	; 62
    13de:	80 91 a9 00 	lds	r24, 0x00A9	; 0x8000a9 <global_pvCallBackINT2>
    13e2:	90 91 aa 00 	lds	r25, 0x00AA	; 0x8000aa <global_pvCallBackINT2+0x1>
    13e6:	fc 01       	movw	r30, r24
    13e8:	09 95       	icall
    13ea:	8a e5       	ldi	r24, 0x5A	; 90
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	2a e5       	ldi	r18, 0x5A	; 90
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	f9 01       	movw	r30, r18
    13f4:	20 81       	ld	r18, Z
    13f6:	20 62       	ori	r18, 0x20	; 32
    13f8:	fc 01       	movw	r30, r24
    13fa:	20 83       	st	Z, r18
    13fc:	78 94       	sei
    13fe:	00 00       	nop
    1400:	df 91       	pop	r29
    1402:	cf 91       	pop	r28
    1404:	ff 91       	pop	r31
    1406:	ef 91       	pop	r30
    1408:	bf 91       	pop	r27
    140a:	af 91       	pop	r26
    140c:	9f 91       	pop	r25
    140e:	8f 91       	pop	r24
    1410:	7f 91       	pop	r23
    1412:	6f 91       	pop	r22
    1414:	5f 91       	pop	r21
    1416:	4f 91       	pop	r20
    1418:	3f 91       	pop	r19
    141a:	2f 91       	pop	r18
    141c:	0f 90       	pop	r0
    141e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1422:	0f 90       	pop	r0
    1424:	1f 90       	pop	r1
    1426:	18 95       	reti

00001428 <enterSleepMode>:
    1428:	cf 93       	push	r28
    142a:	df 93       	push	r29
    142c:	00 d0       	rcall	.+0      	; 0x142e <enterSleepMode+0x6>
    142e:	cd b7       	in	r28, 0x3d	; 61
    1430:	de b7       	in	r29, 0x3e	; 62
    1432:	8a 83       	std	Y+2, r24	; 0x02
    1434:	19 82       	std	Y+1, r1	; 0x01
    1436:	8a 81       	ldd	r24, Y+2	; 0x02
    1438:	88 23       	and	r24, r24
    143a:	79 f4       	brne	.+30     	; 0x145a <enterSleepMode+0x32>
    143c:	8a 81       	ldd	r24, Y+2	; 0x02
    143e:	81 30       	cpi	r24, 0x01	; 1
    1440:	61 f4       	brne	.+24     	; 0x145a <enterSleepMode+0x32>
    1442:	8a 81       	ldd	r24, Y+2	; 0x02
    1444:	82 30       	cpi	r24, 0x02	; 2
    1446:	49 f4       	brne	.+18     	; 0x145a <enterSleepMode+0x32>
    1448:	8a 81       	ldd	r24, Y+2	; 0x02
    144a:	83 30       	cpi	r24, 0x03	; 3
    144c:	31 f4       	brne	.+12     	; 0x145a <enterSleepMode+0x32>
    144e:	8a 81       	ldd	r24, Y+2	; 0x02
    1450:	86 30       	cpi	r24, 0x06	; 6
    1452:	19 f4       	brne	.+6      	; 0x145a <enterSleepMode+0x32>
    1454:	8a 81       	ldd	r24, Y+2	; 0x02
    1456:	87 30       	cpi	r24, 0x07	; 7
    1458:	19 f0       	breq	.+6      	; 0x1460 <enterSleepMode+0x38>
    145a:	81 e0       	ldi	r24, 0x01	; 1
    145c:	89 83       	std	Y+1, r24	; 0x01
    145e:	1e c0       	rjmp	.+60     	; 0x149c <enterSleepMode+0x74>
    1460:	85 e5       	ldi	r24, 0x55	; 85
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	25 e5       	ldi	r18, 0x55	; 85
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	f9 01       	movw	r30, r18
    146a:	20 81       	ld	r18, Z
    146c:	42 2f       	mov	r20, r18
    146e:	4f 78       	andi	r20, 0x8F	; 143
    1470:	2a 81       	ldd	r18, Y+2	; 0x02
    1472:	22 2f       	mov	r18, r18
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	22 95       	swap	r18
    1478:	32 95       	swap	r19
    147a:	30 7f       	andi	r19, 0xF0	; 240
    147c:	32 27       	eor	r19, r18
    147e:	20 7f       	andi	r18, 0xF0	; 240
    1480:	32 27       	eor	r19, r18
    1482:	24 2b       	or	r18, r20
    1484:	fc 01       	movw	r30, r24
    1486:	20 83       	st	Z, r18
    1488:	85 e5       	ldi	r24, 0x55	; 85
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	25 e5       	ldi	r18, 0x55	; 85
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	f9 01       	movw	r30, r18
    1492:	20 81       	ld	r18, Z
    1494:	20 68       	ori	r18, 0x80	; 128
    1496:	fc 01       	movw	r30, r24
    1498:	20 83       	st	Z, r18
    149a:	88 95       	sleep
    149c:	89 81       	ldd	r24, Y+1	; 0x01
    149e:	0f 90       	pop	r0
    14a0:	0f 90       	pop	r0
    14a2:	df 91       	pop	r29
    14a4:	cf 91       	pop	r28
    14a6:	08 95       	ret

000014a8 <timer0_init>:
    14a8:	0f 93       	push	r16
    14aa:	1f 93       	push	r17
    14ac:	cf 93       	push	r28
    14ae:	df 93       	push	r29
    14b0:	cd b7       	in	r28, 0x3d	; 61
    14b2:	de b7       	in	r29, 0x3e	; 62
    14b4:	28 97       	sbiw	r28, 0x08	; 8
    14b6:	0f b6       	in	r0, 0x3f	; 63
    14b8:	f8 94       	cli
    14ba:	de bf       	out	0x3e, r29	; 62
    14bc:	0f be       	out	0x3f, r0	; 63
    14be:	cd bf       	out	0x3d, r28	; 61
    14c0:	8a 83       	std	Y+2, r24	; 0x02
    14c2:	6b 83       	std	Y+3, r22	; 0x03
    14c4:	4c 83       	std	Y+4, r20	; 0x04
    14c6:	3e 83       	std	Y+6, r19	; 0x06
    14c8:	2d 83       	std	Y+5, r18	; 0x05
    14ca:	18 87       	std	Y+8, r17	; 0x08
    14cc:	0f 83       	std	Y+7, r16	; 0x07
    14ce:	19 82       	std	Y+1, r1	; 0x01
    14d0:	8b 81       	ldd	r24, Y+3	; 0x03
    14d2:	84 30       	cpi	r24, 0x04	; 4
    14d4:	60 f4       	brcc	.+24     	; 0x14ee <timer0_init+0x46>
    14d6:	8b 81       	ldd	r24, Y+3	; 0x03
    14d8:	88 23       	and	r24, r24
    14da:	19 f4       	brne	.+6      	; 0x14e2 <timer0_init+0x3a>
    14dc:	8c 81       	ldd	r24, Y+4	; 0x04
    14de:	84 30       	cpi	r24, 0x04	; 4
    14e0:	30 f4       	brcc	.+12     	; 0x14ee <timer0_init+0x46>
    14e2:	8b 81       	ldd	r24, Y+3	; 0x03
    14e4:	83 30       	cpi	r24, 0x03	; 3
    14e6:	30 f4       	brcc	.+12     	; 0x14f4 <timer0_init+0x4c>
    14e8:	8c 81       	ldd	r24, Y+4	; 0x04
    14ea:	81 30       	cpi	r24, 0x01	; 1
    14ec:	19 f4       	brne	.+6      	; 0x14f4 <timer0_init+0x4c>
    14ee:	81 e0       	ldi	r24, 0x01	; 1
    14f0:	89 83       	std	Y+1, r24	; 0x01
    14f2:	5e c0       	rjmp	.+188    	; 0x15b0 <timer0_init+0x108>
    14f4:	83 e5       	ldi	r24, 0x53	; 83
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	23 e5       	ldi	r18, 0x53	; 83
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	f9 01       	movw	r30, r18
    14fe:	20 81       	ld	r18, Z
    1500:	42 2f       	mov	r20, r18
    1502:	4f 7b       	andi	r20, 0xBF	; 191
    1504:	2b 81       	ldd	r18, Y+3	; 0x03
    1506:	22 2f       	mov	r18, r18
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	21 70       	andi	r18, 0x01	; 1
    150c:	33 27       	eor	r19, r19
    150e:	00 24       	eor	r0, r0
    1510:	36 95       	lsr	r19
    1512:	27 95       	ror	r18
    1514:	07 94       	ror	r0
    1516:	36 95       	lsr	r19
    1518:	27 95       	ror	r18
    151a:	07 94       	ror	r0
    151c:	32 2f       	mov	r19, r18
    151e:	20 2d       	mov	r18, r0
    1520:	24 2b       	or	r18, r20
    1522:	fc 01       	movw	r30, r24
    1524:	20 83       	st	Z, r18
    1526:	83 e5       	ldi	r24, 0x53	; 83
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	23 e5       	ldi	r18, 0x53	; 83
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	f9 01       	movw	r30, r18
    1530:	20 81       	ld	r18, Z
    1532:	42 2f       	mov	r20, r18
    1534:	47 7f       	andi	r20, 0xF7	; 247
    1536:	2b 81       	ldd	r18, Y+3	; 0x03
    1538:	26 95       	lsr	r18
    153a:	22 2f       	mov	r18, r18
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	21 70       	andi	r18, 0x01	; 1
    1540:	33 27       	eor	r19, r19
    1542:	22 0f       	add	r18, r18
    1544:	33 1f       	adc	r19, r19
    1546:	22 0f       	add	r18, r18
    1548:	33 1f       	adc	r19, r19
    154a:	22 0f       	add	r18, r18
    154c:	33 1f       	adc	r19, r19
    154e:	24 2b       	or	r18, r20
    1550:	fc 01       	movw	r30, r24
    1552:	20 83       	st	Z, r18
    1554:	8f 81       	ldd	r24, Y+7	; 0x07
    1556:	98 85       	ldd	r25, Y+8	; 0x08
    1558:	90 93 b4 00 	sts	0x00B4, r25	; 0x8000b4 <global_pvOutCmpCallBack+0x1>
    155c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <global_pvOutCmpCallBack>
    1560:	8d 81       	ldd	r24, Y+5	; 0x05
    1562:	9e 81       	ldd	r25, Y+6	; 0x06
    1564:	90 93 b2 00 	sts	0x00B2, r25	; 0x8000b2 <global_pvOverFlowCallBack+0x1>
    1568:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <global_pvOverFlowCallBack>
    156c:	83 e5       	ldi	r24, 0x53	; 83
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	23 e5       	ldi	r18, 0x53	; 83
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	f9 01       	movw	r30, r18
    1576:	20 81       	ld	r18, Z
    1578:	42 2f       	mov	r20, r18
    157a:	4f 7c       	andi	r20, 0xCF	; 207
    157c:	2c 81       	ldd	r18, Y+4	; 0x04
    157e:	22 2f       	mov	r18, r18
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	22 95       	swap	r18
    1584:	32 95       	swap	r19
    1586:	30 7f       	andi	r19, 0xF0	; 240
    1588:	32 27       	eor	r19, r18
    158a:	20 7f       	andi	r18, 0xF0	; 240
    158c:	32 27       	eor	r19, r18
    158e:	24 2b       	or	r18, r20
    1590:	fc 01       	movw	r30, r24
    1592:	20 83       	st	Z, r18
    1594:	82 e5       	ldi	r24, 0x52	; 82
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	2a 81       	ldd	r18, Y+2	; 0x02
    159a:	fc 01       	movw	r30, r24
    159c:	20 83       	st	Z, r18
    159e:	89 e5       	ldi	r24, 0x59	; 89
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	29 e5       	ldi	r18, 0x59	; 89
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	f9 01       	movw	r30, r18
    15a8:	20 81       	ld	r18, Z
    15aa:	21 60       	ori	r18, 0x01	; 1
    15ac:	fc 01       	movw	r30, r24
    15ae:	20 83       	st	Z, r18
    15b0:	89 81       	ldd	r24, Y+1	; 0x01
    15b2:	28 96       	adiw	r28, 0x08	; 8
    15b4:	0f b6       	in	r0, 0x3f	; 63
    15b6:	f8 94       	cli
    15b8:	de bf       	out	0x3e, r29	; 62
    15ba:	0f be       	out	0x3f, r0	; 63
    15bc:	cd bf       	out	0x3d, r28	; 61
    15be:	df 91       	pop	r29
    15c0:	cf 91       	pop	r28
    15c2:	1f 91       	pop	r17
    15c4:	0f 91       	pop	r16
    15c6:	08 95       	ret

000015c8 <timer0_start>:
    15c8:	cf 93       	push	r28
    15ca:	df 93       	push	r29
    15cc:	00 d0       	rcall	.+0      	; 0x15ce <timer0_start+0x6>
    15ce:	cd b7       	in	r28, 0x3d	; 61
    15d0:	de b7       	in	r29, 0x3e	; 62
    15d2:	8a 83       	std	Y+2, r24	; 0x02
    15d4:	19 82       	std	Y+1, r1	; 0x01
    15d6:	8a 81       	ldd	r24, Y+2	; 0x02
    15d8:	88 30       	cpi	r24, 0x08	; 8
    15da:	18 f0       	brcs	.+6      	; 0x15e2 <timer0_start+0x1a>
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	89 83       	std	Y+1, r24	; 0x01
    15e0:	0c c0       	rjmp	.+24     	; 0x15fa <timer0_start+0x32>
    15e2:	83 e5       	ldi	r24, 0x53	; 83
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	23 e5       	ldi	r18, 0x53	; 83
    15e8:	30 e0       	ldi	r19, 0x00	; 0
    15ea:	f9 01       	movw	r30, r18
    15ec:	20 81       	ld	r18, Z
    15ee:	32 2f       	mov	r19, r18
    15f0:	38 7f       	andi	r19, 0xF8	; 248
    15f2:	2a 81       	ldd	r18, Y+2	; 0x02
    15f4:	23 2b       	or	r18, r19
    15f6:	fc 01       	movw	r30, r24
    15f8:	20 83       	st	Z, r18
    15fa:	89 81       	ldd	r24, Y+1	; 0x01
    15fc:	0f 90       	pop	r0
    15fe:	0f 90       	pop	r0
    1600:	df 91       	pop	r29
    1602:	cf 91       	pop	r28
    1604:	08 95       	ret

00001606 <__vector_10>:
    1606:	1f 92       	push	r1
    1608:	0f 92       	push	r0
    160a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    160e:	0f 92       	push	r0
    1610:	11 24       	eor	r1, r1
    1612:	2f 93       	push	r18
    1614:	3f 93       	push	r19
    1616:	4f 93       	push	r20
    1618:	5f 93       	push	r21
    161a:	6f 93       	push	r22
    161c:	7f 93       	push	r23
    161e:	8f 93       	push	r24
    1620:	9f 93       	push	r25
    1622:	af 93       	push	r26
    1624:	bf 93       	push	r27
    1626:	ef 93       	push	r30
    1628:	ff 93       	push	r31
    162a:	cf 93       	push	r28
    162c:	df 93       	push	r29
    162e:	cd b7       	in	r28, 0x3d	; 61
    1630:	de b7       	in	r29, 0x3e	; 62
    1632:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <global_pvOutCmpCallBack>
    1636:	90 91 b4 00 	lds	r25, 0x00B4	; 0x8000b4 <global_pvOutCmpCallBack+0x1>
    163a:	fc 01       	movw	r30, r24
    163c:	09 95       	icall
    163e:	88 e5       	ldi	r24, 0x58	; 88
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	28 e5       	ldi	r18, 0x58	; 88
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	f9 01       	movw	r30, r18
    1648:	20 81       	ld	r18, Z
    164a:	22 60       	ori	r18, 0x02	; 2
    164c:	fc 01       	movw	r30, r24
    164e:	20 83       	st	Z, r18
    1650:	78 94       	sei
    1652:	00 00       	nop
    1654:	df 91       	pop	r29
    1656:	cf 91       	pop	r28
    1658:	ff 91       	pop	r31
    165a:	ef 91       	pop	r30
    165c:	bf 91       	pop	r27
    165e:	af 91       	pop	r26
    1660:	9f 91       	pop	r25
    1662:	8f 91       	pop	r24
    1664:	7f 91       	pop	r23
    1666:	6f 91       	pop	r22
    1668:	5f 91       	pop	r21
    166a:	4f 91       	pop	r20
    166c:	3f 91       	pop	r19
    166e:	2f 91       	pop	r18
    1670:	0f 90       	pop	r0
    1672:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1676:	0f 90       	pop	r0
    1678:	1f 90       	pop	r1
    167a:	18 95       	reti

0000167c <__vector_11>:
    167c:	1f 92       	push	r1
    167e:	0f 92       	push	r0
    1680:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1684:	0f 92       	push	r0
    1686:	11 24       	eor	r1, r1
    1688:	2f 93       	push	r18
    168a:	3f 93       	push	r19
    168c:	4f 93       	push	r20
    168e:	5f 93       	push	r21
    1690:	6f 93       	push	r22
    1692:	7f 93       	push	r23
    1694:	8f 93       	push	r24
    1696:	9f 93       	push	r25
    1698:	af 93       	push	r26
    169a:	bf 93       	push	r27
    169c:	ef 93       	push	r30
    169e:	ff 93       	push	r31
    16a0:	cf 93       	push	r28
    16a2:	df 93       	push	r29
    16a4:	cd b7       	in	r28, 0x3d	; 61
    16a6:	de b7       	in	r29, 0x3e	; 62
    16a8:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <global_pvOverFlowCallBack>
    16ac:	90 91 b2 00 	lds	r25, 0x00B2	; 0x8000b2 <global_pvOverFlowCallBack+0x1>
    16b0:	fc 01       	movw	r30, r24
    16b2:	09 95       	icall
    16b4:	88 e5       	ldi	r24, 0x58	; 88
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	28 e5       	ldi	r18, 0x58	; 88
    16ba:	30 e0       	ldi	r19, 0x00	; 0
    16bc:	f9 01       	movw	r30, r18
    16be:	20 81       	ld	r18, Z
    16c0:	21 60       	ori	r18, 0x01	; 1
    16c2:	fc 01       	movw	r30, r24
    16c4:	20 83       	st	Z, r18
    16c6:	78 94       	sei
    16c8:	00 00       	nop
    16ca:	df 91       	pop	r29
    16cc:	cf 91       	pop	r28
    16ce:	ff 91       	pop	r31
    16d0:	ef 91       	pop	r30
    16d2:	bf 91       	pop	r27
    16d4:	af 91       	pop	r26
    16d6:	9f 91       	pop	r25
    16d8:	8f 91       	pop	r24
    16da:	7f 91       	pop	r23
    16dc:	6f 91       	pop	r22
    16de:	5f 91       	pop	r21
    16e0:	4f 91       	pop	r20
    16e2:	3f 91       	pop	r19
    16e4:	2f 91       	pop	r18
    16e6:	0f 90       	pop	r0
    16e8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    16ec:	0f 90       	pop	r0
    16ee:	1f 90       	pop	r1
    16f0:	18 95       	reti

000016f2 <dummyCallBackFunc>:
    16f2:	cf 93       	push	r28
    16f4:	df 93       	push	r29
    16f6:	cd b7       	in	r28, 0x3d	; 61
    16f8:	de b7       	in	r29, 0x3e	; 62
    16fa:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <global_countVar>
    16fe:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <global_countVar+0x1>
    1702:	a0 91 72 00 	lds	r26, 0x0072	; 0x800072 <global_countVar+0x2>
    1706:	b0 91 73 00 	lds	r27, 0x0073	; 0x800073 <global_countVar+0x3>
    170a:	01 96       	adiw	r24, 0x01	; 1
    170c:	a1 1d       	adc	r26, r1
    170e:	b1 1d       	adc	r27, r1
    1710:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <global_countVar>
    1714:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <global_countVar+0x1>
    1718:	a0 93 72 00 	sts	0x0072, r26	; 0x800072 <global_countVar+0x2>
    171c:	b0 93 73 00 	sts	0x0073, r27	; 0x800073 <global_countVar+0x3>
    1720:	82 e5       	ldi	r24, 0x52	; 82
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <global_u8InitValForTim>
    1728:	fc 01       	movw	r30, r24
    172a:	20 83       	st	Z, r18
    172c:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <global_countVar>
    1730:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <global_countVar+0x1>
    1734:	40 91 72 00 	lds	r20, 0x0072	; 0x800072 <global_countVar+0x2>
    1738:	50 91 73 00 	lds	r21, 0x0073	; 0x800073 <global_countVar+0x3>
    173c:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <global_ValueToReachCount>
    1740:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <global_ValueToReachCount+0x1>
    1744:	a0 91 76 00 	lds	r26, 0x0076	; 0x800076 <global_ValueToReachCount+0x2>
    1748:	b0 91 77 00 	lds	r27, 0x0077	; 0x800077 <global_ValueToReachCount+0x3>
    174c:	28 17       	cp	r18, r24
    174e:	39 07       	cpc	r19, r25
    1750:	4a 07       	cpc	r20, r26
    1752:	5b 07       	cpc	r21, r27
    1754:	71 f4       	brne	.+28     	; 0x1772 <dummyCallBackFunc+0x80>
    1756:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <global_countVar>
    175a:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <global_countVar+0x1>
    175e:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <global_countVar+0x2>
    1762:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <global_countVar+0x3>
    1766:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <global_pvCallBackDelay>
    176a:	90 91 b0 00 	lds	r25, 0x00B0	; 0x8000b0 <global_pvCallBackDelay+0x1>
    176e:	fc 01       	movw	r30, r24
    1770:	09 95       	icall
    1772:	00 00       	nop
    1774:	df 91       	pop	r29
    1776:	cf 91       	pop	r28
    1778:	08 95       	ret

0000177a <calculatInitValueForTimer0>:
    177a:	8f 92       	push	r8
    177c:	9f 92       	push	r9
    177e:	af 92       	push	r10
    1780:	bf 92       	push	r11
    1782:	cf 92       	push	r12
    1784:	df 92       	push	r13
    1786:	ef 92       	push	r14
    1788:	ff 92       	push	r15
    178a:	0f 93       	push	r16
    178c:	1f 93       	push	r17
    178e:	cf 93       	push	r28
    1790:	df 93       	push	r29
    1792:	cd b7       	in	r28, 0x3d	; 61
    1794:	de b7       	in	r29, 0x3e	; 62
    1796:	63 97       	sbiw	r28, 0x13	; 19
    1798:	0f b6       	in	r0, 0x3f	; 63
    179a:	f8 94       	cli
    179c:	de bf       	out	0x3e, r29	; 62
    179e:	0f be       	out	0x3f, r0	; 63
    17a0:	cd bf       	out	0x3d, r28	; 61
    17a2:	6e 87       	std	Y+14, r22	; 0x0e
    17a4:	7f 87       	std	Y+15, r23	; 0x0f
    17a6:	88 8b       	std	Y+16, r24	; 0x10
    17a8:	99 8b       	std	Y+17, r25	; 0x11
    17aa:	5b 8b       	std	Y+19, r21	; 0x13
    17ac:	4a 8b       	std	Y+18, r20	; 0x12
    17ae:	6e 85       	ldd	r22, Y+14	; 0x0e
    17b0:	7f 85       	ldd	r23, Y+15	; 0x0f
    17b2:	88 89       	ldd	r24, Y+16	; 0x10
    17b4:	99 89       	ldd	r25, Y+17	; 0x11
    17b6:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__floatunsisf>
    17ba:	dc 01       	movw	r26, r24
    17bc:	cb 01       	movw	r24, r22
    17be:	20 e0       	ldi	r18, 0x00	; 0
    17c0:	30 e0       	ldi	r19, 0x00	; 0
    17c2:	4a e7       	ldi	r20, 0x7A	; 122
    17c4:	54 e4       	ldi	r21, 0x44	; 68
    17c6:	bc 01       	movw	r22, r24
    17c8:	cd 01       	movw	r24, r26
    17ca:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	89 83       	std	Y+1, r24	; 0x01
    17d4:	9a 83       	std	Y+2, r25	; 0x02
    17d6:	ab 83       	std	Y+3, r26	; 0x03
    17d8:	bc 83       	std	Y+4, r27	; 0x04
    17da:	1d 82       	std	Y+5, r1	; 0x05
    17dc:	8a 89       	ldd	r24, Y+18	; 0x12
    17de:	9b 89       	ldd	r25, Y+19	; 0x13
    17e0:	cc 01       	movw	r24, r24
    17e2:	a0 e0       	ldi	r26, 0x00	; 0
    17e4:	b0 e0       	ldi	r27, 0x00	; 0
    17e6:	bc 01       	movw	r22, r24
    17e8:	cd 01       	movw	r24, r26
    17ea:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__floatunsisf>
    17ee:	dc 01       	movw	r26, r24
    17f0:	cb 01       	movw	r24, r22
    17f2:	20 e0       	ldi	r18, 0x00	; 0
    17f4:	34 e2       	ldi	r19, 0x24	; 36
    17f6:	44 e7       	ldi	r20, 0x74	; 116
    17f8:	59 e4       	ldi	r21, 0x49	; 73
    17fa:	bc 01       	movw	r22, r24
    17fc:	cd 01       	movw	r24, r26
    17fe:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	8e 83       	std	Y+6, r24	; 0x06
    1808:	9f 83       	std	Y+7, r25	; 0x07
    180a:	a8 87       	std	Y+8, r26	; 0x08
    180c:	b9 87       	std	Y+9, r27	; 0x09
    180e:	8e 81       	ldd	r24, Y+6	; 0x06
    1810:	9f 81       	ldd	r25, Y+7	; 0x07
    1812:	a8 85       	ldd	r26, Y+8	; 0x08
    1814:	b9 85       	ldd	r27, Y+9	; 0x09
    1816:	20 e0       	ldi	r18, 0x00	; 0
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	40 e8       	ldi	r20, 0x80	; 128
    181c:	53 e4       	ldi	r21, 0x43	; 67
    181e:	bc 01       	movw	r22, r24
    1820:	cd 01       	movw	r24, r26
    1822:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <__mulsf3>
    1826:	dc 01       	movw	r26, r24
    1828:	cb 01       	movw	r24, r22
    182a:	8a 87       	std	Y+10, r24	; 0x0a
    182c:	9b 87       	std	Y+11, r25	; 0x0b
    182e:	ac 87       	std	Y+12, r26	; 0x0c
    1830:	bd 87       	std	Y+13, r27	; 0x0d
    1832:	8a 85       	ldd	r24, Y+10	; 0x0a
    1834:	9b 85       	ldd	r25, Y+11	; 0x0b
    1836:	ac 85       	ldd	r26, Y+12	; 0x0c
    1838:	bd 85       	ldd	r27, Y+13	; 0x0d
    183a:	bc 01       	movw	r22, r24
    183c:	cd 01       	movw	r24, r26
    183e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    1842:	dc 01       	movw	r26, r24
    1844:	cb 01       	movw	r24, r22
    1846:	bc 01       	movw	r22, r24
    1848:	cd 01       	movw	r24, r26
    184a:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__floatunsisf>
    184e:	7b 01       	movw	r14, r22
    1850:	8c 01       	movw	r16, r24
    1852:	89 81       	ldd	r24, Y+1	; 0x01
    1854:	9a 81       	ldd	r25, Y+2	; 0x02
    1856:	ab 81       	ldd	r26, Y+3	; 0x03
    1858:	bc 81       	ldd	r27, Y+4	; 0x04
    185a:	9c 01       	movw	r18, r24
    185c:	ad 01       	movw	r20, r26
    185e:	c8 01       	movw	r24, r16
    1860:	b7 01       	movw	r22, r14
    1862:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__cmpsf2>
    1866:	88 23       	and	r24, r24
    1868:	71 f4       	brne	.+28     	; 0x1886 <calculatInitValueForTimer0+0x10c>
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	a0 e0       	ldi	r26, 0x00	; 0
    1870:	b0 e0       	ldi	r27, 0x00	; 0
    1872:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <global_ValueToReachCount>
    1876:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <global_ValueToReachCount+0x1>
    187a:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <global_ValueToReachCount+0x2>
    187e:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <global_ValueToReachCount+0x3>
    1882:	1d 82       	std	Y+5, r1	; 0x05
    1884:	03 c1       	rjmp	.+518    	; 0x1a8c <calculatInitValueForTimer0+0x312>
    1886:	8a 85       	ldd	r24, Y+10	; 0x0a
    1888:	9b 85       	ldd	r25, Y+11	; 0x0b
    188a:	ac 85       	ldd	r26, Y+12	; 0x0c
    188c:	bd 85       	ldd	r27, Y+13	; 0x0d
    188e:	bc 01       	movw	r22, r24
    1890:	cd 01       	movw	r24, r26
    1892:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    1896:	dc 01       	movw	r26, r24
    1898:	cb 01       	movw	r24, r22
    189a:	bc 01       	movw	r22, r24
    189c:	cd 01       	movw	r24, r26
    189e:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__floatunsisf>
    18a2:	7b 01       	movw	r14, r22
    18a4:	8c 01       	movw	r16, r24
    18a6:	89 81       	ldd	r24, Y+1	; 0x01
    18a8:	9a 81       	ldd	r25, Y+2	; 0x02
    18aa:	ab 81       	ldd	r26, Y+3	; 0x03
    18ac:	bc 81       	ldd	r27, Y+4	; 0x04
    18ae:	9c 01       	movw	r18, r24
    18b0:	ad 01       	movw	r20, r26
    18b2:	c8 01       	movw	r24, r16
    18b4:	b7 01       	movw	r22, r14
    18b6:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__gesf2>
    18ba:	18 16       	cp	r1, r24
    18bc:	84 f5       	brge	.+96     	; 0x191e <calculatInitValueForTimer0+0x1a4>
    18be:	81 e0       	ldi	r24, 0x01	; 1
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	a0 e0       	ldi	r26, 0x00	; 0
    18c4:	b0 e0       	ldi	r27, 0x00	; 0
    18c6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <global_ValueToReachCount>
    18ca:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <global_ValueToReachCount+0x1>
    18ce:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <global_ValueToReachCount+0x2>
    18d2:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <global_ValueToReachCount+0x3>
    18d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    18d8:	9b 85       	ldd	r25, Y+11	; 0x0b
    18da:	ac 85       	ldd	r26, Y+12	; 0x0c
    18dc:	bd 85       	ldd	r27, Y+13	; 0x0d
    18de:	29 81       	ldd	r18, Y+1	; 0x01
    18e0:	3a 81       	ldd	r19, Y+2	; 0x02
    18e2:	4b 81       	ldd	r20, Y+3	; 0x03
    18e4:	5c 81       	ldd	r21, Y+4	; 0x04
    18e6:	bc 01       	movw	r22, r24
    18e8:	cd 01       	movw	r24, r26
    18ea:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <__subsf3>
    18ee:	dc 01       	movw	r26, r24
    18f0:	cb 01       	movw	r24, r22
    18f2:	7c 01       	movw	r14, r24
    18f4:	8d 01       	movw	r16, r26
    18f6:	8e 81       	ldd	r24, Y+6	; 0x06
    18f8:	9f 81       	ldd	r25, Y+7	; 0x07
    18fa:	a8 85       	ldd	r26, Y+8	; 0x08
    18fc:	b9 85       	ldd	r27, Y+9	; 0x09
    18fe:	9c 01       	movw	r18, r24
    1900:	ad 01       	movw	r20, r26
    1902:	c8 01       	movw	r24, r16
    1904:	b7 01       	movw	r22, r14
    1906:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    190a:	dc 01       	movw	r26, r24
    190c:	cb 01       	movw	r24, r22
    190e:	bc 01       	movw	r22, r24
    1910:	cd 01       	movw	r24, r26
    1912:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    1916:	dc 01       	movw	r26, r24
    1918:	cb 01       	movw	r24, r22
    191a:	8d 83       	std	Y+5, r24	; 0x05
    191c:	b7 c0       	rjmp	.+366    	; 0x1a8c <calculatInitValueForTimer0+0x312>
    191e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1920:	9b 85       	ldd	r25, Y+11	; 0x0b
    1922:	ac 85       	ldd	r26, Y+12	; 0x0c
    1924:	bd 85       	ldd	r27, Y+13	; 0x0d
    1926:	bc 01       	movw	r22, r24
    1928:	cd 01       	movw	r24, r26
    192a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    192e:	dc 01       	movw	r26, r24
    1930:	cb 01       	movw	r24, r22
    1932:	bc 01       	movw	r22, r24
    1934:	cd 01       	movw	r24, r26
    1936:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__floatunsisf>
    193a:	7b 01       	movw	r14, r22
    193c:	8c 01       	movw	r16, r24
    193e:	89 81       	ldd	r24, Y+1	; 0x01
    1940:	9a 81       	ldd	r25, Y+2	; 0x02
    1942:	ab 81       	ldd	r26, Y+3	; 0x03
    1944:	bc 81       	ldd	r27, Y+4	; 0x04
    1946:	9c 01       	movw	r18, r24
    1948:	ad 01       	movw	r20, r26
    194a:	c8 01       	movw	r24, r16
    194c:	b7 01       	movw	r22, r14
    194e:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__cmpsf2>
    1952:	88 23       	and	r24, r24
    1954:	0c f0       	brlt	.+2      	; 0x1958 <calculatInitValueForTimer0+0x1de>
    1956:	9a c0       	rjmp	.+308    	; 0x1a8c <calculatInitValueForTimer0+0x312>
    1958:	89 81       	ldd	r24, Y+1	; 0x01
    195a:	9a 81       	ldd	r25, Y+2	; 0x02
    195c:	ab 81       	ldd	r26, Y+3	; 0x03
    195e:	bc 81       	ldd	r27, Y+4	; 0x04
    1960:	2a 85       	ldd	r18, Y+10	; 0x0a
    1962:	3b 85       	ldd	r19, Y+11	; 0x0b
    1964:	4c 85       	ldd	r20, Y+12	; 0x0c
    1966:	5d 85       	ldd	r21, Y+13	; 0x0d
    1968:	bc 01       	movw	r22, r24
    196a:	cd 01       	movw	r24, r26
    196c:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    1970:	dc 01       	movw	r26, r24
    1972:	cb 01       	movw	r24, r22
    1974:	6c 01       	movw	r12, r24
    1976:	7d 01       	movw	r14, r26
    1978:	89 81       	ldd	r24, Y+1	; 0x01
    197a:	9a 81       	ldd	r25, Y+2	; 0x02
    197c:	ab 81       	ldd	r26, Y+3	; 0x03
    197e:	bc 81       	ldd	r27, Y+4	; 0x04
    1980:	bc 01       	movw	r22, r24
    1982:	cd 01       	movw	r24, r26
    1984:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    1988:	4b 01       	movw	r8, r22
    198a:	5c 01       	movw	r10, r24
    198c:	8a 85       	ldd	r24, Y+10	; 0x0a
    198e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1990:	ac 85       	ldd	r26, Y+12	; 0x0c
    1992:	bd 85       	ldd	r27, Y+13	; 0x0d
    1994:	bc 01       	movw	r22, r24
    1996:	cd 01       	movw	r24, r26
    1998:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    199c:	9b 01       	movw	r18, r22
    199e:	ac 01       	movw	r20, r24
    19a0:	c5 01       	movw	r24, r10
    19a2:	b4 01       	movw	r22, r8
    19a4:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <__udivmodsi4>
    19a8:	da 01       	movw	r26, r20
    19aa:	c9 01       	movw	r24, r18
    19ac:	bc 01       	movw	r22, r24
    19ae:	cd 01       	movw	r24, r26
    19b0:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__floatunsisf>
    19b4:	dc 01       	movw	r26, r24
    19b6:	cb 01       	movw	r24, r22
    19b8:	9c 01       	movw	r18, r24
    19ba:	ad 01       	movw	r20, r26
    19bc:	c7 01       	movw	r24, r14
    19be:	b6 01       	movw	r22, r12
    19c0:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__cmpsf2>
    19c4:	88 23       	and	r24, r24
    19c6:	a9 f4       	brne	.+42     	; 0x19f2 <calculatInitValueForTimer0+0x278>
    19c8:	89 81       	ldd	r24, Y+1	; 0x01
    19ca:	9a 81       	ldd	r25, Y+2	; 0x02
    19cc:	ab 81       	ldd	r26, Y+3	; 0x03
    19ce:	bc 81       	ldd	r27, Y+4	; 0x04
    19d0:	2a 85       	ldd	r18, Y+10	; 0x0a
    19d2:	3b 85       	ldd	r19, Y+11	; 0x0b
    19d4:	4c 85       	ldd	r20, Y+12	; 0x0c
    19d6:	5d 85       	ldd	r21, Y+13	; 0x0d
    19d8:	bc 01       	movw	r22, r24
    19da:	cd 01       	movw	r24, r26
    19dc:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    19e0:	dc 01       	movw	r26, r24
    19e2:	cb 01       	movw	r24, r22
    19e4:	bc 01       	movw	r22, r24
    19e6:	cd 01       	movw	r24, r26
    19e8:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    19ec:	dc 01       	movw	r26, r24
    19ee:	cb 01       	movw	r24, r22
    19f0:	17 c0       	rjmp	.+46     	; 0x1a20 <calculatInitValueForTimer0+0x2a6>
    19f2:	89 81       	ldd	r24, Y+1	; 0x01
    19f4:	9a 81       	ldd	r25, Y+2	; 0x02
    19f6:	ab 81       	ldd	r26, Y+3	; 0x03
    19f8:	bc 81       	ldd	r27, Y+4	; 0x04
    19fa:	2a 85       	ldd	r18, Y+10	; 0x0a
    19fc:	3b 85       	ldd	r19, Y+11	; 0x0b
    19fe:	4c 85       	ldd	r20, Y+12	; 0x0c
    1a00:	5d 85       	ldd	r21, Y+13	; 0x0d
    1a02:	bc 01       	movw	r22, r24
    1a04:	cd 01       	movw	r24, r26
    1a06:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    1a0a:	dc 01       	movw	r26, r24
    1a0c:	cb 01       	movw	r24, r22
    1a0e:	bc 01       	movw	r22, r24
    1a10:	cd 01       	movw	r24, r26
    1a12:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    1a16:	dc 01       	movw	r26, r24
    1a18:	cb 01       	movw	r24, r22
    1a1a:	01 96       	adiw	r24, 0x01	; 1
    1a1c:	a1 1d       	adc	r26, r1
    1a1e:	b1 1d       	adc	r27, r1
    1a20:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <global_ValueToReachCount>
    1a24:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <global_ValueToReachCount+0x1>
    1a28:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <global_ValueToReachCount+0x2>
    1a2c:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <global_ValueToReachCount+0x3>
    1a30:	89 81       	ldd	r24, Y+1	; 0x01
    1a32:	9a 81       	ldd	r25, Y+2	; 0x02
    1a34:	ab 81       	ldd	r26, Y+3	; 0x03
    1a36:	bc 81       	ldd	r27, Y+4	; 0x04
    1a38:	2e 81       	ldd	r18, Y+6	; 0x06
    1a3a:	3f 81       	ldd	r19, Y+7	; 0x07
    1a3c:	48 85       	ldd	r20, Y+8	; 0x08
    1a3e:	59 85       	ldd	r21, Y+9	; 0x09
    1a40:	bc 01       	movw	r22, r24
    1a42:	cd 01       	movw	r24, r26
    1a44:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    1a48:	dc 01       	movw	r26, r24
    1a4a:	cb 01       	movw	r24, r22
    1a4c:	6c 01       	movw	r12, r24
    1a4e:	7d 01       	movw	r14, r26
    1a50:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <global_ValueToReachCount>
    1a54:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <global_ValueToReachCount+0x1>
    1a58:	a0 91 76 00 	lds	r26, 0x0076	; 0x800076 <global_ValueToReachCount+0x2>
    1a5c:	b0 91 77 00 	lds	r27, 0x0077	; 0x800077 <global_ValueToReachCount+0x3>
    1a60:	bc 01       	movw	r22, r24
    1a62:	cd 01       	movw	r24, r26
    1a64:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__floatunsisf>
    1a68:	dc 01       	movw	r26, r24
    1a6a:	cb 01       	movw	r24, r22
    1a6c:	9c 01       	movw	r18, r24
    1a6e:	ad 01       	movw	r20, r26
    1a70:	c7 01       	movw	r24, r14
    1a72:	b6 01       	movw	r22, r12
    1a74:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <__divsf3>
    1a78:	dc 01       	movw	r26, r24
    1a7a:	cb 01       	movw	r24, r22
    1a7c:	bc 01       	movw	r22, r24
    1a7e:	cd 01       	movw	r24, r26
    1a80:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fixunssfsi>
    1a84:	dc 01       	movw	r26, r24
    1a86:	cb 01       	movw	r24, r22
    1a88:	81 95       	neg	r24
    1a8a:	8d 83       	std	Y+5, r24	; 0x05
    1a8c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a8e:	63 96       	adiw	r28, 0x13	; 19
    1a90:	0f b6       	in	r0, 0x3f	; 63
    1a92:	f8 94       	cli
    1a94:	de bf       	out	0x3e, r29	; 62
    1a96:	0f be       	out	0x3f, r0	; 63
    1a98:	cd bf       	out	0x3d, r28	; 61
    1a9a:	df 91       	pop	r29
    1a9c:	cf 91       	pop	r28
    1a9e:	1f 91       	pop	r17
    1aa0:	0f 91       	pop	r16
    1aa2:	ff 90       	pop	r15
    1aa4:	ef 90       	pop	r14
    1aa6:	df 90       	pop	r13
    1aa8:	cf 90       	pop	r12
    1aaa:	bf 90       	pop	r11
    1aac:	af 90       	pop	r10
    1aae:	9f 90       	pop	r9
    1ab0:	8f 90       	pop	r8
    1ab2:	08 95       	ret

00001ab4 <timer0_InterruptEvery>:
    1ab4:	0f 93       	push	r16
    1ab6:	1f 93       	push	r17
    1ab8:	cf 93       	push	r28
    1aba:	df 93       	push	r29
    1abc:	00 d0       	rcall	.+0      	; 0x1abe <timer0_InterruptEvery+0xa>
    1abe:	00 d0       	rcall	.+0      	; 0x1ac0 <timer0_InterruptEvery+0xc>
    1ac0:	00 d0       	rcall	.+0      	; 0x1ac2 <timer0_InterruptEvery+0xe>
    1ac2:	cd b7       	in	r28, 0x3d	; 61
    1ac4:	de b7       	in	r29, 0x3e	; 62
    1ac6:	69 83       	std	Y+1, r22	; 0x01
    1ac8:	7a 83       	std	Y+2, r23	; 0x02
    1aca:	8b 83       	std	Y+3, r24	; 0x03
    1acc:	9c 83       	std	Y+4, r25	; 0x04
    1ace:	5e 83       	std	Y+6, r21	; 0x06
    1ad0:	4d 83       	std	Y+5, r20	; 0x05
    1ad2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ad4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ad6:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <global_pvCallBackDelay+0x1>
    1ada:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <global_pvCallBackDelay>
    1ade:	89 e7       	ldi	r24, 0x79	; 121
    1ae0:	9b e0       	ldi	r25, 0x0B	; 11
    1ae2:	90 93 b2 00 	sts	0x00B2, r25	; 0x8000b2 <global_pvOverFlowCallBack+0x1>
    1ae6:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <global_pvOverFlowCallBack>
    1aea:	09 e7       	ldi	r16, 0x79	; 121
    1aec:	1b e0       	ldi	r17, 0x0B	; 11
    1aee:	29 e7       	ldi	r18, 0x79	; 121
    1af0:	3b e0       	ldi	r19, 0x0B	; 11
    1af2:	40 e0       	ldi	r20, 0x00	; 0
    1af4:	60 e0       	ldi	r22, 0x00	; 0
    1af6:	80 e0       	ldi	r24, 0x00	; 0
    1af8:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <timer0_init>
    1afc:	89 81       	ldd	r24, Y+1	; 0x01
    1afe:	9a 81       	ldd	r25, Y+2	; 0x02
    1b00:	ab 81       	ldd	r26, Y+3	; 0x03
    1b02:	bc 81       	ldd	r27, Y+4	; 0x04
    1b04:	40 e0       	ldi	r20, 0x00	; 0
    1b06:	54 e0       	ldi	r21, 0x04	; 4
    1b08:	bc 01       	movw	r22, r24
    1b0a:	cd 01       	movw	r24, r26
    1b0c:	0e 94 bd 0b 	call	0x177a	; 0x177a <calculatInitValueForTimer0>
    1b10:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <global_u8InitValForTim>
    1b14:	82 e5       	ldi	r24, 0x52	; 82
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <global_u8InitValForTim>
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	20 83       	st	Z, r18
    1b20:	85 e0       	ldi	r24, 0x05	; 5
    1b22:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <timer0_start>
    1b26:	78 94       	sei
    1b28:	00 00       	nop
    1b2a:	26 96       	adiw	r28, 0x06	; 6
    1b2c:	0f b6       	in	r0, 0x3f	; 63
    1b2e:	f8 94       	cli
    1b30:	de bf       	out	0x3e, r29	; 62
    1b32:	0f be       	out	0x3f, r0	; 63
    1b34:	cd bf       	out	0x3d, r28	; 61
    1b36:	df 91       	pop	r29
    1b38:	cf 91       	pop	r28
    1b3a:	1f 91       	pop	r17
    1b3c:	0f 91       	pop	r16
    1b3e:	08 95       	ret

00001b40 <__subsf3>:
    1b40:	50 58       	subi	r21, 0x80	; 128

00001b42 <__addsf3>:
    1b42:	bb 27       	eor	r27, r27
    1b44:	aa 27       	eor	r26, r26
    1b46:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <__addsf3x>
    1b4a:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__fp_round>
    1b4e:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <__fp_pscA>
    1b52:	38 f0       	brcs	.+14     	; 0x1b62 <__addsf3+0x20>
    1b54:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <__fp_pscB>
    1b58:	20 f0       	brcs	.+8      	; 0x1b62 <__addsf3+0x20>
    1b5a:	39 f4       	brne	.+14     	; 0x1b6a <__addsf3+0x28>
    1b5c:	9f 3f       	cpi	r25, 0xFF	; 255
    1b5e:	19 f4       	brne	.+6      	; 0x1b66 <__addsf3+0x24>
    1b60:	26 f4       	brtc	.+8      	; 0x1b6a <__addsf3+0x28>
    1b62:	0c 94 1a 0f 	jmp	0x1e34	; 0x1e34 <__fp_nan>
    1b66:	0e f4       	brtc	.+2      	; 0x1b6a <__addsf3+0x28>
    1b68:	e0 95       	com	r30
    1b6a:	e7 fb       	bst	r30, 7
    1b6c:	0c 94 14 0f 	jmp	0x1e28	; 0x1e28 <__fp_inf>

00001b70 <__addsf3x>:
    1b70:	e9 2f       	mov	r30, r25
    1b72:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <__fp_split3>
    1b76:	58 f3       	brcs	.-42     	; 0x1b4e <__addsf3+0xc>
    1b78:	ba 17       	cp	r27, r26
    1b7a:	62 07       	cpc	r22, r18
    1b7c:	73 07       	cpc	r23, r19
    1b7e:	84 07       	cpc	r24, r20
    1b80:	95 07       	cpc	r25, r21
    1b82:	20 f0       	brcs	.+8      	; 0x1b8c <__addsf3x+0x1c>
    1b84:	79 f4       	brne	.+30     	; 0x1ba4 <__addsf3x+0x34>
    1b86:	a6 f5       	brtc	.+104    	; 0x1bf0 <__addsf3x+0x80>
    1b88:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__fp_zero>
    1b8c:	0e f4       	brtc	.+2      	; 0x1b90 <__addsf3x+0x20>
    1b8e:	e0 95       	com	r30
    1b90:	0b 2e       	mov	r0, r27
    1b92:	ba 2f       	mov	r27, r26
    1b94:	a0 2d       	mov	r26, r0
    1b96:	0b 01       	movw	r0, r22
    1b98:	b9 01       	movw	r22, r18
    1b9a:	90 01       	movw	r18, r0
    1b9c:	0c 01       	movw	r0, r24
    1b9e:	ca 01       	movw	r24, r20
    1ba0:	a0 01       	movw	r20, r0
    1ba2:	11 24       	eor	r1, r1
    1ba4:	ff 27       	eor	r31, r31
    1ba6:	59 1b       	sub	r21, r25
    1ba8:	99 f0       	breq	.+38     	; 0x1bd0 <__addsf3x+0x60>
    1baa:	59 3f       	cpi	r21, 0xF9	; 249
    1bac:	50 f4       	brcc	.+20     	; 0x1bc2 <__addsf3x+0x52>
    1bae:	50 3e       	cpi	r21, 0xE0	; 224
    1bb0:	68 f1       	brcs	.+90     	; 0x1c0c <__addsf3x+0x9c>
    1bb2:	1a 16       	cp	r1, r26
    1bb4:	f0 40       	sbci	r31, 0x00	; 0
    1bb6:	a2 2f       	mov	r26, r18
    1bb8:	23 2f       	mov	r18, r19
    1bba:	34 2f       	mov	r19, r20
    1bbc:	44 27       	eor	r20, r20
    1bbe:	58 5f       	subi	r21, 0xF8	; 248
    1bc0:	f3 cf       	rjmp	.-26     	; 0x1ba8 <__addsf3x+0x38>
    1bc2:	46 95       	lsr	r20
    1bc4:	37 95       	ror	r19
    1bc6:	27 95       	ror	r18
    1bc8:	a7 95       	ror	r26
    1bca:	f0 40       	sbci	r31, 0x00	; 0
    1bcc:	53 95       	inc	r21
    1bce:	c9 f7       	brne	.-14     	; 0x1bc2 <__addsf3x+0x52>
    1bd0:	7e f4       	brtc	.+30     	; 0x1bf0 <__addsf3x+0x80>
    1bd2:	1f 16       	cp	r1, r31
    1bd4:	ba 0b       	sbc	r27, r26
    1bd6:	62 0b       	sbc	r22, r18
    1bd8:	73 0b       	sbc	r23, r19
    1bda:	84 0b       	sbc	r24, r20
    1bdc:	ba f0       	brmi	.+46     	; 0x1c0c <__addsf3x+0x9c>
    1bde:	91 50       	subi	r25, 0x01	; 1
    1be0:	a1 f0       	breq	.+40     	; 0x1c0a <__addsf3x+0x9a>
    1be2:	ff 0f       	add	r31, r31
    1be4:	bb 1f       	adc	r27, r27
    1be6:	66 1f       	adc	r22, r22
    1be8:	77 1f       	adc	r23, r23
    1bea:	88 1f       	adc	r24, r24
    1bec:	c2 f7       	brpl	.-16     	; 0x1bde <__addsf3x+0x6e>
    1bee:	0e c0       	rjmp	.+28     	; 0x1c0c <__addsf3x+0x9c>
    1bf0:	ba 0f       	add	r27, r26
    1bf2:	62 1f       	adc	r22, r18
    1bf4:	73 1f       	adc	r23, r19
    1bf6:	84 1f       	adc	r24, r20
    1bf8:	48 f4       	brcc	.+18     	; 0x1c0c <__addsf3x+0x9c>
    1bfa:	87 95       	ror	r24
    1bfc:	77 95       	ror	r23
    1bfe:	67 95       	ror	r22
    1c00:	b7 95       	ror	r27
    1c02:	f7 95       	ror	r31
    1c04:	9e 3f       	cpi	r25, 0xFE	; 254
    1c06:	08 f0       	brcs	.+2      	; 0x1c0a <__addsf3x+0x9a>
    1c08:	b0 cf       	rjmp	.-160    	; 0x1b6a <__addsf3+0x28>
    1c0a:	93 95       	inc	r25
    1c0c:	88 0f       	add	r24, r24
    1c0e:	08 f0       	brcs	.+2      	; 0x1c12 <__addsf3x+0xa2>
    1c10:	99 27       	eor	r25, r25
    1c12:	ee 0f       	add	r30, r30
    1c14:	97 95       	ror	r25
    1c16:	87 95       	ror	r24
    1c18:	08 95       	ret

00001c1a <__cmpsf2>:
    1c1a:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <__fp_cmp>
    1c1e:	08 f4       	brcc	.+2      	; 0x1c22 <__cmpsf2+0x8>
    1c20:	81 e0       	ldi	r24, 0x01	; 1
    1c22:	08 95       	ret

00001c24 <__divsf3>:
    1c24:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__divsf3x>
    1c28:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__fp_round>
    1c2c:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <__fp_pscB>
    1c30:	58 f0       	brcs	.+22     	; 0x1c48 <__divsf3+0x24>
    1c32:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <__fp_pscA>
    1c36:	40 f0       	brcs	.+16     	; 0x1c48 <__divsf3+0x24>
    1c38:	29 f4       	brne	.+10     	; 0x1c44 <__divsf3+0x20>
    1c3a:	5f 3f       	cpi	r21, 0xFF	; 255
    1c3c:	29 f0       	breq	.+10     	; 0x1c48 <__divsf3+0x24>
    1c3e:	0c 94 14 0f 	jmp	0x1e28	; 0x1e28 <__fp_inf>
    1c42:	51 11       	cpse	r21, r1
    1c44:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_szero>
    1c48:	0c 94 1a 0f 	jmp	0x1e34	; 0x1e34 <__fp_nan>

00001c4c <__divsf3x>:
    1c4c:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <__fp_split3>
    1c50:	68 f3       	brcs	.-38     	; 0x1c2c <__divsf3+0x8>

00001c52 <__divsf3_pse>:
    1c52:	99 23       	and	r25, r25
    1c54:	b1 f3       	breq	.-20     	; 0x1c42 <__divsf3+0x1e>
    1c56:	55 23       	and	r21, r21
    1c58:	91 f3       	breq	.-28     	; 0x1c3e <__divsf3+0x1a>
    1c5a:	95 1b       	sub	r25, r21
    1c5c:	55 0b       	sbc	r21, r21
    1c5e:	bb 27       	eor	r27, r27
    1c60:	aa 27       	eor	r26, r26
    1c62:	62 17       	cp	r22, r18
    1c64:	73 07       	cpc	r23, r19
    1c66:	84 07       	cpc	r24, r20
    1c68:	38 f0       	brcs	.+14     	; 0x1c78 <__divsf3_pse+0x26>
    1c6a:	9f 5f       	subi	r25, 0xFF	; 255
    1c6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c6e:	22 0f       	add	r18, r18
    1c70:	33 1f       	adc	r19, r19
    1c72:	44 1f       	adc	r20, r20
    1c74:	aa 1f       	adc	r26, r26
    1c76:	a9 f3       	breq	.-22     	; 0x1c62 <__divsf3_pse+0x10>
    1c78:	35 d0       	rcall	.+106    	; 0x1ce4 <__divsf3_pse+0x92>
    1c7a:	0e 2e       	mov	r0, r30
    1c7c:	3a f0       	brmi	.+14     	; 0x1c8c <__divsf3_pse+0x3a>
    1c7e:	e0 e8       	ldi	r30, 0x80	; 128
    1c80:	32 d0       	rcall	.+100    	; 0x1ce6 <__divsf3_pse+0x94>
    1c82:	91 50       	subi	r25, 0x01	; 1
    1c84:	50 40       	sbci	r21, 0x00	; 0
    1c86:	e6 95       	lsr	r30
    1c88:	00 1c       	adc	r0, r0
    1c8a:	ca f7       	brpl	.-14     	; 0x1c7e <__divsf3_pse+0x2c>
    1c8c:	2b d0       	rcall	.+86     	; 0x1ce4 <__divsf3_pse+0x92>
    1c8e:	fe 2f       	mov	r31, r30
    1c90:	29 d0       	rcall	.+82     	; 0x1ce4 <__divsf3_pse+0x92>
    1c92:	66 0f       	add	r22, r22
    1c94:	77 1f       	adc	r23, r23
    1c96:	88 1f       	adc	r24, r24
    1c98:	bb 1f       	adc	r27, r27
    1c9a:	26 17       	cp	r18, r22
    1c9c:	37 07       	cpc	r19, r23
    1c9e:	48 07       	cpc	r20, r24
    1ca0:	ab 07       	cpc	r26, r27
    1ca2:	b0 e8       	ldi	r27, 0x80	; 128
    1ca4:	09 f0       	breq	.+2      	; 0x1ca8 <__divsf3_pse+0x56>
    1ca6:	bb 0b       	sbc	r27, r27
    1ca8:	80 2d       	mov	r24, r0
    1caa:	bf 01       	movw	r22, r30
    1cac:	ff 27       	eor	r31, r31
    1cae:	93 58       	subi	r25, 0x83	; 131
    1cb0:	5f 4f       	sbci	r21, 0xFF	; 255
    1cb2:	3a f0       	brmi	.+14     	; 0x1cc2 <__divsf3_pse+0x70>
    1cb4:	9e 3f       	cpi	r25, 0xFE	; 254
    1cb6:	51 05       	cpc	r21, r1
    1cb8:	78 f0       	brcs	.+30     	; 0x1cd8 <__divsf3_pse+0x86>
    1cba:	0c 94 14 0f 	jmp	0x1e28	; 0x1e28 <__fp_inf>
    1cbe:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_szero>
    1cc2:	5f 3f       	cpi	r21, 0xFF	; 255
    1cc4:	e4 f3       	brlt	.-8      	; 0x1cbe <__divsf3_pse+0x6c>
    1cc6:	98 3e       	cpi	r25, 0xE8	; 232
    1cc8:	d4 f3       	brlt	.-12     	; 0x1cbe <__divsf3_pse+0x6c>
    1cca:	86 95       	lsr	r24
    1ccc:	77 95       	ror	r23
    1cce:	67 95       	ror	r22
    1cd0:	b7 95       	ror	r27
    1cd2:	f7 95       	ror	r31
    1cd4:	9f 5f       	subi	r25, 0xFF	; 255
    1cd6:	c9 f7       	brne	.-14     	; 0x1cca <__divsf3_pse+0x78>
    1cd8:	88 0f       	add	r24, r24
    1cda:	91 1d       	adc	r25, r1
    1cdc:	96 95       	lsr	r25
    1cde:	87 95       	ror	r24
    1ce0:	97 f9       	bld	r25, 7
    1ce2:	08 95       	ret
    1ce4:	e1 e0       	ldi	r30, 0x01	; 1
    1ce6:	66 0f       	add	r22, r22
    1ce8:	77 1f       	adc	r23, r23
    1cea:	88 1f       	adc	r24, r24
    1cec:	bb 1f       	adc	r27, r27
    1cee:	62 17       	cp	r22, r18
    1cf0:	73 07       	cpc	r23, r19
    1cf2:	84 07       	cpc	r24, r20
    1cf4:	ba 07       	cpc	r27, r26
    1cf6:	20 f0       	brcs	.+8      	; 0x1d00 <__divsf3_pse+0xae>
    1cf8:	62 1b       	sub	r22, r18
    1cfa:	73 0b       	sbc	r23, r19
    1cfc:	84 0b       	sbc	r24, r20
    1cfe:	ba 0b       	sbc	r27, r26
    1d00:	ee 1f       	adc	r30, r30
    1d02:	88 f7       	brcc	.-30     	; 0x1ce6 <__divsf3_pse+0x94>
    1d04:	e0 95       	com	r30
    1d06:	08 95       	ret

00001d08 <__fixunssfsi>:
    1d08:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <__fp_splitA>
    1d0c:	88 f0       	brcs	.+34     	; 0x1d30 <__fixunssfsi+0x28>
    1d0e:	9f 57       	subi	r25, 0x7F	; 127
    1d10:	98 f0       	brcs	.+38     	; 0x1d38 <__fixunssfsi+0x30>
    1d12:	b9 2f       	mov	r27, r25
    1d14:	99 27       	eor	r25, r25
    1d16:	b7 51       	subi	r27, 0x17	; 23
    1d18:	b0 f0       	brcs	.+44     	; 0x1d46 <__fixunssfsi+0x3e>
    1d1a:	e1 f0       	breq	.+56     	; 0x1d54 <__fixunssfsi+0x4c>
    1d1c:	66 0f       	add	r22, r22
    1d1e:	77 1f       	adc	r23, r23
    1d20:	88 1f       	adc	r24, r24
    1d22:	99 1f       	adc	r25, r25
    1d24:	1a f0       	brmi	.+6      	; 0x1d2c <__fixunssfsi+0x24>
    1d26:	ba 95       	dec	r27
    1d28:	c9 f7       	brne	.-14     	; 0x1d1c <__fixunssfsi+0x14>
    1d2a:	14 c0       	rjmp	.+40     	; 0x1d54 <__fixunssfsi+0x4c>
    1d2c:	b1 30       	cpi	r27, 0x01	; 1
    1d2e:	91 f0       	breq	.+36     	; 0x1d54 <__fixunssfsi+0x4c>
    1d30:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <__fp_zero>
    1d34:	b1 e0       	ldi	r27, 0x01	; 1
    1d36:	08 95       	ret
    1d38:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__fp_zero>
    1d3c:	67 2f       	mov	r22, r23
    1d3e:	78 2f       	mov	r23, r24
    1d40:	88 27       	eor	r24, r24
    1d42:	b8 5f       	subi	r27, 0xF8	; 248
    1d44:	39 f0       	breq	.+14     	; 0x1d54 <__fixunssfsi+0x4c>
    1d46:	b9 3f       	cpi	r27, 0xF9	; 249
    1d48:	cc f3       	brlt	.-14     	; 0x1d3c <__fixunssfsi+0x34>
    1d4a:	86 95       	lsr	r24
    1d4c:	77 95       	ror	r23
    1d4e:	67 95       	ror	r22
    1d50:	b3 95       	inc	r27
    1d52:	d9 f7       	brne	.-10     	; 0x1d4a <__fixunssfsi+0x42>
    1d54:	3e f4       	brtc	.+14     	; 0x1d64 <__fixunssfsi+0x5c>
    1d56:	90 95       	com	r25
    1d58:	80 95       	com	r24
    1d5a:	70 95       	com	r23
    1d5c:	61 95       	neg	r22
    1d5e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d60:	8f 4f       	sbci	r24, 0xFF	; 255
    1d62:	9f 4f       	sbci	r25, 0xFF	; 255
    1d64:	08 95       	ret

00001d66 <__floatunsisf>:
    1d66:	e8 94       	clt
    1d68:	09 c0       	rjmp	.+18     	; 0x1d7c <__floatsisf+0x12>

00001d6a <__floatsisf>:
    1d6a:	97 fb       	bst	r25, 7
    1d6c:	3e f4       	brtc	.+14     	; 0x1d7c <__floatsisf+0x12>
    1d6e:	90 95       	com	r25
    1d70:	80 95       	com	r24
    1d72:	70 95       	com	r23
    1d74:	61 95       	neg	r22
    1d76:	7f 4f       	sbci	r23, 0xFF	; 255
    1d78:	8f 4f       	sbci	r24, 0xFF	; 255
    1d7a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d7c:	99 23       	and	r25, r25
    1d7e:	a9 f0       	breq	.+42     	; 0x1daa <__floatsisf+0x40>
    1d80:	f9 2f       	mov	r31, r25
    1d82:	96 e9       	ldi	r25, 0x96	; 150
    1d84:	bb 27       	eor	r27, r27
    1d86:	93 95       	inc	r25
    1d88:	f6 95       	lsr	r31
    1d8a:	87 95       	ror	r24
    1d8c:	77 95       	ror	r23
    1d8e:	67 95       	ror	r22
    1d90:	b7 95       	ror	r27
    1d92:	f1 11       	cpse	r31, r1
    1d94:	f8 cf       	rjmp	.-16     	; 0x1d86 <__floatsisf+0x1c>
    1d96:	fa f4       	brpl	.+62     	; 0x1dd6 <__floatsisf+0x6c>
    1d98:	bb 0f       	add	r27, r27
    1d9a:	11 f4       	brne	.+4      	; 0x1da0 <__floatsisf+0x36>
    1d9c:	60 ff       	sbrs	r22, 0
    1d9e:	1b c0       	rjmp	.+54     	; 0x1dd6 <__floatsisf+0x6c>
    1da0:	6f 5f       	subi	r22, 0xFF	; 255
    1da2:	7f 4f       	sbci	r23, 0xFF	; 255
    1da4:	8f 4f       	sbci	r24, 0xFF	; 255
    1da6:	9f 4f       	sbci	r25, 0xFF	; 255
    1da8:	16 c0       	rjmp	.+44     	; 0x1dd6 <__floatsisf+0x6c>
    1daa:	88 23       	and	r24, r24
    1dac:	11 f0       	breq	.+4      	; 0x1db2 <__floatsisf+0x48>
    1dae:	96 e9       	ldi	r25, 0x96	; 150
    1db0:	11 c0       	rjmp	.+34     	; 0x1dd4 <__floatsisf+0x6a>
    1db2:	77 23       	and	r23, r23
    1db4:	21 f0       	breq	.+8      	; 0x1dbe <__floatsisf+0x54>
    1db6:	9e e8       	ldi	r25, 0x8E	; 142
    1db8:	87 2f       	mov	r24, r23
    1dba:	76 2f       	mov	r23, r22
    1dbc:	05 c0       	rjmp	.+10     	; 0x1dc8 <__floatsisf+0x5e>
    1dbe:	66 23       	and	r22, r22
    1dc0:	71 f0       	breq	.+28     	; 0x1dde <__floatsisf+0x74>
    1dc2:	96 e8       	ldi	r25, 0x86	; 134
    1dc4:	86 2f       	mov	r24, r22
    1dc6:	70 e0       	ldi	r23, 0x00	; 0
    1dc8:	60 e0       	ldi	r22, 0x00	; 0
    1dca:	2a f0       	brmi	.+10     	; 0x1dd6 <__floatsisf+0x6c>
    1dcc:	9a 95       	dec	r25
    1dce:	66 0f       	add	r22, r22
    1dd0:	77 1f       	adc	r23, r23
    1dd2:	88 1f       	adc	r24, r24
    1dd4:	da f7       	brpl	.-10     	; 0x1dcc <__floatsisf+0x62>
    1dd6:	88 0f       	add	r24, r24
    1dd8:	96 95       	lsr	r25
    1dda:	87 95       	ror	r24
    1ddc:	97 f9       	bld	r25, 7
    1dde:	08 95       	ret

00001de0 <__fp_cmp>:
    1de0:	99 0f       	add	r25, r25
    1de2:	00 08       	sbc	r0, r0
    1de4:	55 0f       	add	r21, r21
    1de6:	aa 0b       	sbc	r26, r26
    1de8:	e0 e8       	ldi	r30, 0x80	; 128
    1dea:	fe ef       	ldi	r31, 0xFE	; 254
    1dec:	16 16       	cp	r1, r22
    1dee:	17 06       	cpc	r1, r23
    1df0:	e8 07       	cpc	r30, r24
    1df2:	f9 07       	cpc	r31, r25
    1df4:	c0 f0       	brcs	.+48     	; 0x1e26 <__fp_cmp+0x46>
    1df6:	12 16       	cp	r1, r18
    1df8:	13 06       	cpc	r1, r19
    1dfa:	e4 07       	cpc	r30, r20
    1dfc:	f5 07       	cpc	r31, r21
    1dfe:	98 f0       	brcs	.+38     	; 0x1e26 <__fp_cmp+0x46>
    1e00:	62 1b       	sub	r22, r18
    1e02:	73 0b       	sbc	r23, r19
    1e04:	84 0b       	sbc	r24, r20
    1e06:	95 0b       	sbc	r25, r21
    1e08:	39 f4       	brne	.+14     	; 0x1e18 <__fp_cmp+0x38>
    1e0a:	0a 26       	eor	r0, r26
    1e0c:	61 f0       	breq	.+24     	; 0x1e26 <__fp_cmp+0x46>
    1e0e:	23 2b       	or	r18, r19
    1e10:	24 2b       	or	r18, r20
    1e12:	25 2b       	or	r18, r21
    1e14:	21 f4       	brne	.+8      	; 0x1e1e <__fp_cmp+0x3e>
    1e16:	08 95       	ret
    1e18:	0a 26       	eor	r0, r26
    1e1a:	09 f4       	brne	.+2      	; 0x1e1e <__fp_cmp+0x3e>
    1e1c:	a1 40       	sbci	r26, 0x01	; 1
    1e1e:	a6 95       	lsr	r26
    1e20:	8f ef       	ldi	r24, 0xFF	; 255
    1e22:	81 1d       	adc	r24, r1
    1e24:	81 1d       	adc	r24, r1
    1e26:	08 95       	ret

00001e28 <__fp_inf>:
    1e28:	97 f9       	bld	r25, 7
    1e2a:	9f 67       	ori	r25, 0x7F	; 127
    1e2c:	80 e8       	ldi	r24, 0x80	; 128
    1e2e:	70 e0       	ldi	r23, 0x00	; 0
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	08 95       	ret

00001e34 <__fp_nan>:
    1e34:	9f ef       	ldi	r25, 0xFF	; 255
    1e36:	80 ec       	ldi	r24, 0xC0	; 192
    1e38:	08 95       	ret

00001e3a <__fp_pscA>:
    1e3a:	00 24       	eor	r0, r0
    1e3c:	0a 94       	dec	r0
    1e3e:	16 16       	cp	r1, r22
    1e40:	17 06       	cpc	r1, r23
    1e42:	18 06       	cpc	r1, r24
    1e44:	09 06       	cpc	r0, r25
    1e46:	08 95       	ret

00001e48 <__fp_pscB>:
    1e48:	00 24       	eor	r0, r0
    1e4a:	0a 94       	dec	r0
    1e4c:	12 16       	cp	r1, r18
    1e4e:	13 06       	cpc	r1, r19
    1e50:	14 06       	cpc	r1, r20
    1e52:	05 06       	cpc	r0, r21
    1e54:	08 95       	ret

00001e56 <__fp_round>:
    1e56:	09 2e       	mov	r0, r25
    1e58:	03 94       	inc	r0
    1e5a:	00 0c       	add	r0, r0
    1e5c:	11 f4       	brne	.+4      	; 0x1e62 <__fp_round+0xc>
    1e5e:	88 23       	and	r24, r24
    1e60:	52 f0       	brmi	.+20     	; 0x1e76 <__fp_round+0x20>
    1e62:	bb 0f       	add	r27, r27
    1e64:	40 f4       	brcc	.+16     	; 0x1e76 <__fp_round+0x20>
    1e66:	bf 2b       	or	r27, r31
    1e68:	11 f4       	brne	.+4      	; 0x1e6e <__fp_round+0x18>
    1e6a:	60 ff       	sbrs	r22, 0
    1e6c:	04 c0       	rjmp	.+8      	; 0x1e76 <__fp_round+0x20>
    1e6e:	6f 5f       	subi	r22, 0xFF	; 255
    1e70:	7f 4f       	sbci	r23, 0xFF	; 255
    1e72:	8f 4f       	sbci	r24, 0xFF	; 255
    1e74:	9f 4f       	sbci	r25, 0xFF	; 255
    1e76:	08 95       	ret

00001e78 <__fp_split3>:
    1e78:	57 fd       	sbrc	r21, 7
    1e7a:	90 58       	subi	r25, 0x80	; 128
    1e7c:	44 0f       	add	r20, r20
    1e7e:	55 1f       	adc	r21, r21
    1e80:	59 f0       	breq	.+22     	; 0x1e98 <__fp_splitA+0x10>
    1e82:	5f 3f       	cpi	r21, 0xFF	; 255
    1e84:	71 f0       	breq	.+28     	; 0x1ea2 <__fp_splitA+0x1a>
    1e86:	47 95       	ror	r20

00001e88 <__fp_splitA>:
    1e88:	88 0f       	add	r24, r24
    1e8a:	97 fb       	bst	r25, 7
    1e8c:	99 1f       	adc	r25, r25
    1e8e:	61 f0       	breq	.+24     	; 0x1ea8 <__fp_splitA+0x20>
    1e90:	9f 3f       	cpi	r25, 0xFF	; 255
    1e92:	79 f0       	breq	.+30     	; 0x1eb2 <__fp_splitA+0x2a>
    1e94:	87 95       	ror	r24
    1e96:	08 95       	ret
    1e98:	12 16       	cp	r1, r18
    1e9a:	13 06       	cpc	r1, r19
    1e9c:	14 06       	cpc	r1, r20
    1e9e:	55 1f       	adc	r21, r21
    1ea0:	f2 cf       	rjmp	.-28     	; 0x1e86 <__fp_split3+0xe>
    1ea2:	46 95       	lsr	r20
    1ea4:	f1 df       	rcall	.-30     	; 0x1e88 <__fp_splitA>
    1ea6:	08 c0       	rjmp	.+16     	; 0x1eb8 <__fp_splitA+0x30>
    1ea8:	16 16       	cp	r1, r22
    1eaa:	17 06       	cpc	r1, r23
    1eac:	18 06       	cpc	r1, r24
    1eae:	99 1f       	adc	r25, r25
    1eb0:	f1 cf       	rjmp	.-30     	; 0x1e94 <__fp_splitA+0xc>
    1eb2:	86 95       	lsr	r24
    1eb4:	71 05       	cpc	r23, r1
    1eb6:	61 05       	cpc	r22, r1
    1eb8:	08 94       	sec
    1eba:	08 95       	ret

00001ebc <__fp_zero>:
    1ebc:	e8 94       	clt

00001ebe <__fp_szero>:
    1ebe:	bb 27       	eor	r27, r27
    1ec0:	66 27       	eor	r22, r22
    1ec2:	77 27       	eor	r23, r23
    1ec4:	cb 01       	movw	r24, r22
    1ec6:	97 f9       	bld	r25, 7
    1ec8:	08 95       	ret

00001eca <__gesf2>:
    1eca:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <__fp_cmp>
    1ece:	08 f4       	brcc	.+2      	; 0x1ed2 <__gesf2+0x8>
    1ed0:	8f ef       	ldi	r24, 0xFF	; 255
    1ed2:	08 95       	ret

00001ed4 <__mulsf3>:
    1ed4:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__mulsf3x>
    1ed8:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__fp_round>
    1edc:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <__fp_pscA>
    1ee0:	38 f0       	brcs	.+14     	; 0x1ef0 <__mulsf3+0x1c>
    1ee2:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <__fp_pscB>
    1ee6:	20 f0       	brcs	.+8      	; 0x1ef0 <__mulsf3+0x1c>
    1ee8:	95 23       	and	r25, r21
    1eea:	11 f0       	breq	.+4      	; 0x1ef0 <__mulsf3+0x1c>
    1eec:	0c 94 14 0f 	jmp	0x1e28	; 0x1e28 <__fp_inf>
    1ef0:	0c 94 1a 0f 	jmp	0x1e34	; 0x1e34 <__fp_nan>
    1ef4:	11 24       	eor	r1, r1
    1ef6:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_szero>

00001efa <__mulsf3x>:
    1efa:	0e 94 3c 0f 	call	0x1e78	; 0x1e78 <__fp_split3>
    1efe:	70 f3       	brcs	.-36     	; 0x1edc <__mulsf3+0x8>

00001f00 <__mulsf3_pse>:
    1f00:	95 9f       	mul	r25, r21
    1f02:	c1 f3       	breq	.-16     	; 0x1ef4 <__mulsf3+0x20>
    1f04:	95 0f       	add	r25, r21
    1f06:	50 e0       	ldi	r21, 0x00	; 0
    1f08:	55 1f       	adc	r21, r21
    1f0a:	62 9f       	mul	r22, r18
    1f0c:	f0 01       	movw	r30, r0
    1f0e:	72 9f       	mul	r23, r18
    1f10:	bb 27       	eor	r27, r27
    1f12:	f0 0d       	add	r31, r0
    1f14:	b1 1d       	adc	r27, r1
    1f16:	63 9f       	mul	r22, r19
    1f18:	aa 27       	eor	r26, r26
    1f1a:	f0 0d       	add	r31, r0
    1f1c:	b1 1d       	adc	r27, r1
    1f1e:	aa 1f       	adc	r26, r26
    1f20:	64 9f       	mul	r22, r20
    1f22:	66 27       	eor	r22, r22
    1f24:	b0 0d       	add	r27, r0
    1f26:	a1 1d       	adc	r26, r1
    1f28:	66 1f       	adc	r22, r22
    1f2a:	82 9f       	mul	r24, r18
    1f2c:	22 27       	eor	r18, r18
    1f2e:	b0 0d       	add	r27, r0
    1f30:	a1 1d       	adc	r26, r1
    1f32:	62 1f       	adc	r22, r18
    1f34:	73 9f       	mul	r23, r19
    1f36:	b0 0d       	add	r27, r0
    1f38:	a1 1d       	adc	r26, r1
    1f3a:	62 1f       	adc	r22, r18
    1f3c:	83 9f       	mul	r24, r19
    1f3e:	a0 0d       	add	r26, r0
    1f40:	61 1d       	adc	r22, r1
    1f42:	22 1f       	adc	r18, r18
    1f44:	74 9f       	mul	r23, r20
    1f46:	33 27       	eor	r19, r19
    1f48:	a0 0d       	add	r26, r0
    1f4a:	61 1d       	adc	r22, r1
    1f4c:	23 1f       	adc	r18, r19
    1f4e:	84 9f       	mul	r24, r20
    1f50:	60 0d       	add	r22, r0
    1f52:	21 1d       	adc	r18, r1
    1f54:	82 2f       	mov	r24, r18
    1f56:	76 2f       	mov	r23, r22
    1f58:	6a 2f       	mov	r22, r26
    1f5a:	11 24       	eor	r1, r1
    1f5c:	9f 57       	subi	r25, 0x7F	; 127
    1f5e:	50 40       	sbci	r21, 0x00	; 0
    1f60:	9a f0       	brmi	.+38     	; 0x1f88 <__mulsf3_pse+0x88>
    1f62:	f1 f0       	breq	.+60     	; 0x1fa0 <__mulsf3_pse+0xa0>
    1f64:	88 23       	and	r24, r24
    1f66:	4a f0       	brmi	.+18     	; 0x1f7a <__mulsf3_pse+0x7a>
    1f68:	ee 0f       	add	r30, r30
    1f6a:	ff 1f       	adc	r31, r31
    1f6c:	bb 1f       	adc	r27, r27
    1f6e:	66 1f       	adc	r22, r22
    1f70:	77 1f       	adc	r23, r23
    1f72:	88 1f       	adc	r24, r24
    1f74:	91 50       	subi	r25, 0x01	; 1
    1f76:	50 40       	sbci	r21, 0x00	; 0
    1f78:	a9 f7       	brne	.-22     	; 0x1f64 <__mulsf3_pse+0x64>
    1f7a:	9e 3f       	cpi	r25, 0xFE	; 254
    1f7c:	51 05       	cpc	r21, r1
    1f7e:	80 f0       	brcs	.+32     	; 0x1fa0 <__mulsf3_pse+0xa0>
    1f80:	0c 94 14 0f 	jmp	0x1e28	; 0x1e28 <__fp_inf>
    1f84:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_szero>
    1f88:	5f 3f       	cpi	r21, 0xFF	; 255
    1f8a:	e4 f3       	brlt	.-8      	; 0x1f84 <__mulsf3_pse+0x84>
    1f8c:	98 3e       	cpi	r25, 0xE8	; 232
    1f8e:	d4 f3       	brlt	.-12     	; 0x1f84 <__mulsf3_pse+0x84>
    1f90:	86 95       	lsr	r24
    1f92:	77 95       	ror	r23
    1f94:	67 95       	ror	r22
    1f96:	b7 95       	ror	r27
    1f98:	f7 95       	ror	r31
    1f9a:	e7 95       	ror	r30
    1f9c:	9f 5f       	subi	r25, 0xFF	; 255
    1f9e:	c1 f7       	brne	.-16     	; 0x1f90 <__mulsf3_pse+0x90>
    1fa0:	fe 2b       	or	r31, r30
    1fa2:	88 0f       	add	r24, r24
    1fa4:	91 1d       	adc	r25, r1
    1fa6:	96 95       	lsr	r25
    1fa8:	87 95       	ror	r24
    1faa:	97 f9       	bld	r25, 7
    1fac:	08 95       	ret

00001fae <__udivmodsi4>:
    1fae:	a1 e2       	ldi	r26, 0x21	; 33
    1fb0:	1a 2e       	mov	r1, r26
    1fb2:	aa 1b       	sub	r26, r26
    1fb4:	bb 1b       	sub	r27, r27
    1fb6:	fd 01       	movw	r30, r26
    1fb8:	0d c0       	rjmp	.+26     	; 0x1fd4 <__udivmodsi4_ep>

00001fba <__udivmodsi4_loop>:
    1fba:	aa 1f       	adc	r26, r26
    1fbc:	bb 1f       	adc	r27, r27
    1fbe:	ee 1f       	adc	r30, r30
    1fc0:	ff 1f       	adc	r31, r31
    1fc2:	a2 17       	cp	r26, r18
    1fc4:	b3 07       	cpc	r27, r19
    1fc6:	e4 07       	cpc	r30, r20
    1fc8:	f5 07       	cpc	r31, r21
    1fca:	20 f0       	brcs	.+8      	; 0x1fd4 <__udivmodsi4_ep>
    1fcc:	a2 1b       	sub	r26, r18
    1fce:	b3 0b       	sbc	r27, r19
    1fd0:	e4 0b       	sbc	r30, r20
    1fd2:	f5 0b       	sbc	r31, r21

00001fd4 <__udivmodsi4_ep>:
    1fd4:	66 1f       	adc	r22, r22
    1fd6:	77 1f       	adc	r23, r23
    1fd8:	88 1f       	adc	r24, r24
    1fda:	99 1f       	adc	r25, r25
    1fdc:	1a 94       	dec	r1
    1fde:	69 f7       	brne	.-38     	; 0x1fba <__udivmodsi4_loop>
    1fe0:	60 95       	com	r22
    1fe2:	70 95       	com	r23
    1fe4:	80 95       	com	r24
    1fe6:	90 95       	com	r25
    1fe8:	9b 01       	movw	r18, r22
    1fea:	ac 01       	movw	r20, r24
    1fec:	bd 01       	movw	r22, r26
    1fee:	cf 01       	movw	r24, r30
    1ff0:	08 95       	ret

00001ff2 <_exit>:
    1ff2:	f8 94       	cli

00001ff4 <__stop_program>:
    1ff4:	ff cf       	rjmp	.-2      	; 0x1ff4 <__stop_program>
